!function(c){function n(e){if(l[e])return l[e].exports;var t=l[e]={exports:{},id:e,loaded:!1};return c[e].call(t.exports,t,t.exports,n),t.loaded=!0,t.exports}var l={};return n.m=c,n.c=l,n.p="",n(0)}([function(module,exports,__webpack_require__){eval('"use strict";\n\nvar extend = __webpack_require__(5);\nvar fsignal = __webpack_require__(1);\nvar storeFactory = __webpack_require__(14);\nvar viewFactory = __webpack_require__(15);\nvar respdata = __webpack_require__(13);\n\n// app\nvar PizzaPicker = { i18n: {} };\nwindow.PizzaPicker = PizzaPicker;\nwindow.m = __webpack_require__(3);\n\nPizzaPicker.create = function (_opts) {\n	var opts = setDefaultOpts(_opts);\n	var api = {\n		toggleYummy: fsignal(),\n		toggleYuck: fsignal(),\n		toggleFilter: fsignal()\n	};\n	var store = storeFactory.make(api, opts);\n	viewFactory.make(api, store, opts);\n	opts.container.classList.add("pizza-picker"); // @todo move this somewhere else ?\n	store.init();\n	return api;\n};\n\nPizzaPicker.filter = {\n	taggedOnly: function taggedOnly(tag) {\n		// keeps only the pizza if it has the tag\n		return pizzaHasTagFun(tag, true);\n	},\n	hideTagged: function hideTagged(tag) {\n		// keeps only the pizza if it has NOT the tag\n		return pizzaHasTagFun(tag, false);\n	}\n};\n\nfunction pizzaHasTagFun(tag, ret) {\n	return function (pizza) {\n		return pizza.tagged(tag) ? ret : !ret;\n	};\n}\n\nfunction setDefaultOpts(opts) {\n	return extend({\n		ingredients: {},\n		pizzas: [],\n		filters: {},\n		locale: "en",\n		container: "pizzapicker",\n		events: {},\n		prices: [],\n		renderIngredients: true,\n		renderPizzas: true,\n		renderFilters: true,\n		style: {\n			pizzaRowHeightPx: 100,\n			pizzaRowMarginPx: 5 }\n	}, opts);\n}\n\n// Publish some useful stuff\nPizzaPicker.m = __webpack_require__(3);\nPizzaPicker.fsignal = __webpack_require__(1);\n\nvar configs = [{\n	minWidth: 768,\n	data: {\n		// anything you want here\n		type: "tablet"\n	}\n}, {\n	orientation: "landscape",\n	maxWidth: 768 - 1,\n	data: {\n		type: "landscape smartphone"\n	}\n}, {\n	maxWidth: 768 - 1,\n	data: {\n		type: "smartphone"\n	}\n},\n// this one has no constraints, so it matches everytime\n{\n	data: {\n		type: "any"\n	}\n}];\nvar conf = respdata(configs, function (version) {\n	console.log("version", version.type);\n});\nwindow.ccc = conf;\nconsole.log(conf.get());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvbWFpbi5qcz8xZTNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxNQUFNLEdBQUcsbUJBQU8sQ0FBQyxDQUFRLENBQUM7QUFDOUIsSUFBSSxPQUFPLEdBQUcsbUJBQU8sQ0FBQyxDQUFTLENBQUM7QUFDaEMsSUFBSSxZQUFZLEdBQUcsbUJBQU8sQ0FBQyxFQUFPLENBQUM7QUFDbkMsSUFBSSxXQUFXLEdBQUcsbUJBQU8sQ0FBQyxFQUFNLENBQUM7QUFDakMsSUFBSSxRQUFRLEdBQUcsbUJBQU8sQ0FBQyxFQUFpQixDQUFDOzs7QUFHekMsSUFBSSxXQUFXLEdBQUcsRUFBQyxJQUFJLEVBQUMsRUFBRSxFQUFDO0FBQzNCLE1BQU0sQ0FBQyxXQUFXLEdBQUcsV0FBVztBQUNoQyxNQUFNLENBQUMsQ0FBQyxHQUFHLG1CQUFPLENBQUMsQ0FBUyxDQUFDOztBQUU3QixXQUFXLENBQUMsTUFBTSxHQUFHLFVBQVMsS0FBSyxFQUFFO0FBQ3BDLEtBQUksSUFBSSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUM7QUFDaEMsS0FBSSxHQUFHLEdBQUc7QUFDVCxlQUFlLE9BQU8sRUFBRTtBQUN4QixjQUFjLE9BQU8sRUFBRTtBQUN2QixnQkFBZ0IsT0FBTyxFQUFFO0VBQ3pCO0FBQ0QsS0FBSSxLQUFLLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDO0FBQ3hDLFlBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUM7QUFDbEMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUM1QyxNQUFLLENBQUMsSUFBSSxFQUFFO0FBQ1osUUFBTyxHQUFHO0NBQ1Y7O0FBRUQsV0FBVyxDQUFDLE1BQU0sR0FBRztBQUNwQixXQUFVLEVBQUUsb0JBQVMsR0FBRyxFQUFFOztBQUV6QixTQUFPLGNBQWMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDO0VBQ2hDO0FBQ0QsV0FBVSxFQUFFLG9CQUFTLEdBQUcsRUFBRTs7QUFFekIsU0FBTyxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQztFQUNqQztDQUNEOztBQUVELFNBQVMsY0FBYyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUU7QUFDakMsUUFBTyxVQUFTLEtBQUssRUFBRTtBQUN0QixTQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRztFQUNyQztDQUNEOztBQUVELFNBQVMsY0FBYyxDQUFFLElBQUksRUFBRTtBQUM5QixRQUFPLE1BQU0sQ0FBQztBQUNiLGFBQVcsRUFBQyxFQUFFO0FBQ2QsUUFBTSxFQUFDLEVBQUU7QUFDVCxTQUFPLEVBQUMsRUFBRTtBQUNWLFFBQU0sRUFBQyxJQUFJO0FBQ1gsV0FBUyxFQUFDLGFBQWE7QUFDdkIsUUFBTSxFQUFDLEVBQUU7QUFDVCxRQUFNLEVBQUMsRUFBRTtBQUNULG1CQUFpQixFQUFFLElBQUk7QUFDdkIsY0FBWSxFQUFFLElBQUk7QUFDbEIsZUFBYSxFQUFFLElBQUk7QUFDbkIsT0FBSyxFQUFFO0FBQ04sbUJBQWdCLEVBQUUsR0FBRztBQUNyQixtQkFBZ0IsRUFBRSxDQUFDLEVBQ25CO0VBQ0QsRUFBRSxJQUFJLENBQUM7Q0FDUjs7O0FBR0QsV0FBVyxDQUFDLENBQUMsR0FBRyxtQkFBTyxDQUFDLENBQVMsQ0FBQztBQUNsQyxXQUFXLENBQUMsT0FBTyxHQUFHLG1CQUFPLENBQUMsQ0FBUyxDQUFDOztBQUV4QyxJQUFJLE9BQU8sR0FBRyxDQUNiO0FBQ0MsU0FBUSxFQUFFLEdBQUc7QUFDYixLQUFJLEVBQUU7O0FBRUwsTUFBSSxFQUFFLFFBQVE7RUFDZDtDQUNELEVBQ0Q7QUFDQyxZQUFXLEVBQUUsV0FBVztBQUN4QixTQUFRLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDakIsS0FBSSxFQUFFO0FBQ0wsTUFBSSxFQUFFLHNCQUFzQjtFQUM1QjtDQUNELEVBQ0Q7QUFDQyxTQUFRLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDakIsS0FBSSxFQUFFO0FBQ0wsTUFBSSxFQUFFLFlBQVk7RUFDbEI7Q0FDRDs7QUFFRDtBQUNDLEtBQUksRUFBRTtBQUNMLE1BQUksRUFBRSxLQUFLO0VBQ1g7Q0FDRCxDQUNEO0FBQ0QsSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLE9BQU8sRUFBRSxVQUFTLE9BQU8sRUFBQztBQUM3QyxRQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDO0NBQ3BDLENBQUM7QUFDRixNQUFNLENBQUMsR0FBRyxHQUFHLElBQUk7QUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBleHRlbmQgPSByZXF1aXJlKCdleHRlbmQnKVxubGV0IGZzaWduYWwgPSByZXF1aXJlKCdmc2lnbmFsJylcbmxldCBzdG9yZUZhY3RvcnkgPSByZXF1aXJlKCdzdG9yZScpXG5sZXQgdmlld0ZhY3RvcnkgPSByZXF1aXJlKCd2aWV3JylcbmxldCByZXNwZGF0YSA9IHJlcXVpcmUoJ3Jlc3BvbnNpdmUtZGF0YScpXG5cbi8vIGFwcFxubGV0IFBpenphUGlja2VyID0ge2kxOG46e319XG53aW5kb3cuUGl6emFQaWNrZXIgPSBQaXp6YVBpY2tlclxud2luZG93Lm0gPSByZXF1aXJlKCdtaXRocmlsJylcblxuUGl6emFQaWNrZXIuY3JlYXRlID0gZnVuY3Rpb24oX29wdHMpIHtcblx0bGV0IG9wdHMgPSBzZXREZWZhdWx0T3B0cyhfb3B0cylcblx0bGV0IGFwaSA9IHtcblx0XHQndG9nZ2xlWXVtbXknOiBmc2lnbmFsKCksXG5cdFx0J3RvZ2dsZVl1Y2snOiBmc2lnbmFsKCksXG5cdFx0J3RvZ2dsZUZpbHRlcic6IGZzaWduYWwoKVxuXHR9XG5cdGxldCBzdG9yZSA9IHN0b3JlRmFjdG9yeS5tYWtlKGFwaSwgb3B0cylcblx0dmlld0ZhY3RvcnkubWFrZShhcGksIHN0b3JlLCBvcHRzKVxuXHRvcHRzLmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdwaXp6YS1waWNrZXInKSAvLyBAdG9kbyBtb3ZlIHRoaXMgc29tZXdoZXJlIGVsc2UgP1xuXHRzdG9yZS5pbml0KClcblx0cmV0dXJuIGFwaVxufVxuXG5QaXp6YVBpY2tlci5maWx0ZXIgPSB7XG5cdHRhZ2dlZE9ubHk6IGZ1bmN0aW9uKHRhZykge1xuXHRcdC8vIGtlZXBzIG9ubHkgdGhlIHBpenphIGlmIGl0IGhhcyB0aGUgdGFnXG5cdFx0cmV0dXJuIHBpenphSGFzVGFnRnVuKHRhZywgdHJ1ZSlcblx0fSxcblx0aGlkZVRhZ2dlZDogZnVuY3Rpb24odGFnKSB7XG5cdFx0Ly8ga2VlcHMgb25seSB0aGUgcGl6emEgaWYgaXQgaGFzIE5PVCB0aGUgdGFnXG5cdFx0cmV0dXJuIHBpenphSGFzVGFnRnVuKHRhZywgZmFsc2UpXG5cdH1cbn1cblxuZnVuY3Rpb24gcGl6emFIYXNUYWdGdW4odGFnLCByZXQpIHtcblx0cmV0dXJuIGZ1bmN0aW9uKHBpenphKSB7XG5cdFx0cmV0dXJuIHBpenphLnRhZ2dlZCh0YWcpID8gcmV0IDogIXJldFxuXHR9XG59XG5cbmZ1bmN0aW9uIHNldERlZmF1bHRPcHRzIChvcHRzKSB7XG5cdHJldHVybiBleHRlbmQoe1xuXHRcdGluZ3JlZGllbnRzOnt9LFxuXHRcdHBpenphczpbXSxcblx0XHRmaWx0ZXJzOnt9LFxuXHRcdGxvY2FsZTonZW4nLFxuXHRcdGNvbnRhaW5lcjoncGl6emFwaWNrZXInLFxuXHRcdGV2ZW50czp7fSxcblx0XHRwcmljZXM6W10sXG5cdFx0cmVuZGVySW5ncmVkaWVudHM6IHRydWUsXG5cdFx0cmVuZGVyUGl6emFzOiB0cnVlLFxuXHRcdHJlbmRlckZpbHRlcnM6IHRydWUsXG5cdFx0c3R5bGU6IHtcblx0XHRcdHBpenphUm93SGVpZ2h0UHg6IDEwMCxcblx0XHRcdHBpenphUm93TWFyZ2luUHg6IDUsXG5cdFx0fVxuXHR9LCBvcHRzKVxufVxuXG4vLyBQdWJsaXNoIHNvbWUgdXNlZnVsIHN0dWZmXG5QaXp6YVBpY2tlci5tID0gcmVxdWlyZSgnbWl0aHJpbCcpXG5QaXp6YVBpY2tlci5mc2lnbmFsID0gcmVxdWlyZSgnZnNpZ25hbCcpXG5cbnZhciBjb25maWdzID0gW1xuXHR7XG5cdFx0bWluV2lkdGg6IDc2OCxcblx0XHRkYXRhOiB7XG5cdFx0XHQvLyBhbnl0aGluZyB5b3Ugd2FudCBoZXJlXG5cdFx0XHR0eXBlOiAndGFibGV0J1xuXHRcdH1cblx0fSxcblx0e1xuXHRcdG9yaWVudGF0aW9uOiAnbGFuZHNjYXBlJyxcblx0XHRtYXhXaWR0aDogNzY4IC0gMSxcblx0XHRkYXRhOiB7XG5cdFx0XHR0eXBlOiAnbGFuZHNjYXBlIHNtYXJ0cGhvbmUnXG5cdFx0fVxuXHR9LFxuXHR7XG5cdFx0bWF4V2lkdGg6IDc2OCAtIDEsXG5cdFx0ZGF0YToge1xuXHRcdFx0dHlwZTogJ3NtYXJ0cGhvbmUnXG5cdFx0fVxuXHR9LFxuXHQvLyB0aGlzIG9uZSBoYXMgbm8gY29uc3RyYWludHMsIHNvIGl0IG1hdGNoZXMgZXZlcnl0aW1lXG5cdHtcblx0XHRkYXRhOiB7XG5cdFx0XHR0eXBlOiAnYW55J1xuXHRcdH1cblx0fVxuXVxudmFyIGNvbmYgPSByZXNwZGF0YShjb25maWdzLCBmdW5jdGlvbih2ZXJzaW9uKXtcblx0Y29uc29sZS5sb2coJ3ZlcnNpb24nLCB2ZXJzaW9uLnR5cGUpXG59KVxud2luZG93LmNjYyA9IGNvbmZcbmNvbnNvbGUubG9nKGNvbmYuZ2V0KCkpXG5cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2pzL21haW4uanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('// This modules has a simple signal mechanism just like Reflux does.\n//\n// Just create a signal :\n//\n//     var signal = fsignal() // or fsignal({async: false})\n//\n// Then add listeners to the signal, with an optional context :\n//\n//     var id = signal.listen(function(name, age){\n//         console.log(\'%s is % years old\', name, age)\n//     })\n//\n//     signal.listen(model.setNameAndAge, model)\n//\n// Remove a listener with the id returned from .listen()\n//\n//     signal.remove(id)\n//\n// Call the signal, wich is a function. You must pass an array as arguments for\n// the listeners.\n//\n//     signal([\'David\', 69])\n//\n// log => "David is 69 years old"\n//\n// By default, the signal triggers asynchronously, this is reasonnable for\n// flux architectures.\n\n"use strict";\n\nvar assert = __webpack_require__(7);\nvar extend = __webpack_require__(5);\n\nvar defaults = function () {\n	return {\n		async: true\n	};\n};\n\nmodule.exports = function fsignal(_opts) {\n	var opts = extend(defaults(), _opts);\n	var listeners = [];\n	var id = 0;\n	var llen = 0; // listeners.length\n\n	var listen = function listen(fn, context) {\n		assert(typeof fn === "function", "No callback given");\n		var listenerId = ++id;\n		var listener = {\n			f: fn, c: context, id: listenerId\n		};\n		listeners.unshift(listener);\n		llen = listeners.length;\n		return listenerId;\n	};\n\n	var remove = function remove(id) {\n		var i = llen;\n		while (i--) {\n			if (listeners[i].id === id) {\n				var listener = listeners[i];\n				listeners.splice(i, 1);\n				llen = listeners.length;\n				return listener.f // return the fn or something else ?\n				;\n			}\n		}\n		return void 0;\n	};\n\n	var calls = function calls(args) {\n		var i = llen,\n		    listener = undefined;\n		while (i--) {\n			listener = listeners[i];\n			listener.f.apply(listener.c, args);\n		}\n	};\n\n	var trigger = !opts.async ? calls : function (args) {\n		setTimeout(function () {\n			return calls(args);\n		}, 0);\n	};\n\n	trigger.listen = listen;\n	trigger.remove = remove;\n\n	return trigger;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvZnNpZ25hbC5qcz82ZTdjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCQSxJQUFJLE1BQU0sR0FBRyxtQkFBTyxDQUFDLENBQWdCLENBQUM7QUFDdEMsSUFBSSxNQUFNLEdBQUcsbUJBQU8sQ0FBQyxDQUFRLENBQUM7O0FBRTlCLElBQUksUUFBUSxHQUFHO1FBQU87QUFDckIsT0FBSyxFQUFFLElBQUk7RUFDWDtDQUFDOztBQUVGLE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUMsS0FBSyxFQUFFO0FBQ3hDLEtBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxRQUFRLEVBQUUsRUFBRSxLQUFLLENBQUM7QUFDcEMsS0FBSSxTQUFTLEdBQUcsRUFBRTtBQUNsQixLQUFJLEVBQUUsR0FBRyxDQUFDO0FBQ1YsS0FBSSxJQUFJLEdBQUcsQ0FBQzs7QUFFWixLQUFJLE1BQU0sR0FBRyxnQkFBUyxFQUFFLEVBQUUsT0FBTyxFQUFFO0FBQ2xDLFFBQU0sQ0FBQyxPQUFPLEVBQUUsS0FBSyxVQUFVLEVBQUUsbUJBQW1CLENBQUM7QUFDckQsTUFBSSxVQUFVLEdBQUcsRUFBRSxFQUFFO0FBQ3JCLE1BQUksUUFBUSxHQUFHO0FBQ2QsSUFBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLEVBQUUsRUFBRSxVQUFVO0dBQ2hDO0FBQ0QsV0FBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDM0IsTUFBSSxHQUFHLFNBQVMsQ0FBQyxNQUFNO0FBQ3ZCLFNBQU8sVUFBVTtFQUNqQjs7QUFFRCxLQUFJLE1BQU0sR0FBRyxnQkFBUyxFQUFFLEVBQUU7QUFDekIsTUFBSSxDQUFDLEdBQUcsSUFBSTtBQUNaLFNBQU0sQ0FBQyxFQUFFLEVBQUU7QUFDVixPQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFO0FBQzNCLFFBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDM0IsYUFBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3RCLFFBQUksR0FBRyxTQUFTLENBQUMsTUFBTTtBQUN2QixXQUFPLFFBQVEsQ0FBQyxDQUFDO0FBQUE7SUFDakI7R0FDRDtBQUNELFNBQU8sS0FBSyxDQUFDO0VBQ2I7O0FBRUQsS0FBSSxLQUFLLEdBQUcsZUFBUyxJQUFJLEVBQUU7QUFDMUIsTUFBSSxDQUFDLEdBQUcsSUFBSTtNQUNSLFFBQVE7QUFDWixTQUFNLENBQUMsRUFBRSxFQUFFO0FBQ1YsV0FBUSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDdkIsV0FBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUM7R0FDbEM7RUFDRDs7QUFFRCxLQUFJLE9BQU8sR0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUksS0FBSyxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQ3BELFlBQVUsQ0FBQztVQUFNLEtBQUssQ0FBQyxJQUFJLENBQUM7R0FBQSxFQUFFLENBQUMsQ0FBQztFQUNoQzs7QUFFRCxRQUFPLENBQUMsTUFBTSxHQUFHLE1BQU07QUFDdkIsUUFBTyxDQUFDLE1BQU0sR0FBRyxNQUFNOztBQUV2QixRQUFPLE9BQU87Q0FDZCIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBtb2R1bGVzIGhhcyBhIHNpbXBsZSBzaWduYWwgbWVjaGFuaXNtIGp1c3QgbGlrZSBSZWZsdXggZG9lcy5cbi8vXG4vLyBKdXN0IGNyZWF0ZSBhIHNpZ25hbCA6XG4vL1xuLy8gICAgIHZhciBzaWduYWwgPSBmc2lnbmFsKCkgLy8gb3IgZnNpZ25hbCh7YXN5bmM6IGZhbHNlfSlcbi8vXG4vLyBUaGVuIGFkZCBsaXN0ZW5lcnMgdG8gdGhlIHNpZ25hbCwgd2l0aCBhbiBvcHRpb25hbCBjb250ZXh0IDpcbi8vXG4vLyAgICAgdmFyIGlkID0gc2lnbmFsLmxpc3RlbihmdW5jdGlvbihuYW1lLCBhZ2Upe1xuLy8gICAgICAgICBjb25zb2xlLmxvZygnJXMgaXMgJSB5ZWFycyBvbGQnLCBuYW1lLCBhZ2UpXG4vLyAgICAgfSlcbi8vXG4vLyAgICAgc2lnbmFsLmxpc3Rlbihtb2RlbC5zZXROYW1lQW5kQWdlLCBtb2RlbClcbi8vXG4vLyBSZW1vdmUgYSBsaXN0ZW5lciB3aXRoIHRoZSBpZCByZXR1cm5lZCBmcm9tIC5saXN0ZW4oKVxuLy9cbi8vICAgICBzaWduYWwucmVtb3ZlKGlkKVxuLy9cbi8vIENhbGwgdGhlIHNpZ25hbCwgd2ljaCBpcyBhIGZ1bmN0aW9uLiBZb3UgbXVzdCBwYXNzIGFuIGFycmF5IGFzIGFyZ3VtZW50cyBmb3Jcbi8vIHRoZSBsaXN0ZW5lcnMuXG4vL1xuLy8gICAgIHNpZ25hbChbJ0RhdmlkJywgNjldKVxuLy9cbi8vIGxvZyA9PiBcIkRhdmlkIGlzIDY5IHllYXJzIG9sZFwiXG4vL1xuLy8gQnkgZGVmYXVsdCwgdGhlIHNpZ25hbCB0cmlnZ2VycyBhc3luY2hyb25vdXNseSwgdGhpcyBpcyByZWFzb25uYWJsZSBmb3Jcbi8vIGZsdXggYXJjaGl0ZWN0dXJlcy5cblxubGV0IGFzc2VydCA9IHJlcXVpcmUoJ2hlbHBlcnMvYXNzZXJ0JylcbmxldCBleHRlbmQgPSByZXF1aXJlKCdleHRlbmQnKVxuXG5sZXQgZGVmYXVsdHMgPSAoKSA9PiAoe1xuXHRhc3luYzogdHJ1ZVxufSlcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmc2lnbmFsKF9vcHRzKSB7XG5cdGxldCBvcHRzID0gZXh0ZW5kKGRlZmF1bHRzKCksIF9vcHRzKVxuXHRsZXQgbGlzdGVuZXJzID0gW11cblx0bGV0IGlkID0gMFxuXHRsZXQgbGxlbiA9IDAgLy8gbGlzdGVuZXJzLmxlbmd0aFxuXG5cdGxldCBsaXN0ZW4gPSBmdW5jdGlvbihmbiwgY29udGV4dCkge1xuXHRcdGFzc2VydCh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicsIFwiTm8gY2FsbGJhY2sgZ2l2ZW5cIilcblx0XHRsZXQgbGlzdGVuZXJJZCA9ICsraWRcblx0XHRsZXQgbGlzdGVuZXIgPSB7XG5cdFx0XHRmOiBmbiwgYzpjb250ZXh0LCBpZDogbGlzdGVuZXJJZFxuXHRcdH1cblx0XHRsaXN0ZW5lcnMudW5zaGlmdChsaXN0ZW5lcilcblx0XHRsbGVuID0gbGlzdGVuZXJzLmxlbmd0aFxuXHRcdHJldHVybiBsaXN0ZW5lcklkXG5cdH1cblxuXHRsZXQgcmVtb3ZlID0gZnVuY3Rpb24oaWQpIHtcblx0XHRsZXQgaSA9IGxsZW5cblx0XHR3aGlsZShpLS0pIHtcblx0XHRcdGlmIChsaXN0ZW5lcnNbaV0uaWQgPT09IGlkKSB7XG5cdFx0XHRcdGxldCBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXVxuXHRcdFx0XHRsaXN0ZW5lcnMuc3BsaWNlKGksIDEpXG5cdFx0XHRcdGxsZW4gPSBsaXN0ZW5lcnMubGVuZ3RoXG5cdFx0XHRcdHJldHVybiBsaXN0ZW5lci5mIC8vIHJldHVybiB0aGUgZm4gb3Igc29tZXRoaW5nIGVsc2UgP1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gdm9pZCAwXG5cdH1cblxuXHRsZXQgY2FsbHMgPSBmdW5jdGlvbihhcmdzKSB7XG5cdFx0bGV0IGkgPSBsbGVuLFxuXHRcdCAgICBsaXN0ZW5lclxuXHRcdHdoaWxlKGktLSkge1xuXHRcdFx0bGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV1cblx0XHRcdGxpc3RlbmVyLmYuYXBwbHkobGlzdGVuZXIuYywgYXJncylcblx0XHR9XG5cdH1cblxuXHRsZXQgdHJpZ2dlciA9ICghb3B0cy5hc3luYykgPyBjYWxscyA6IGZ1bmN0aW9uKGFyZ3MpIHtcblx0XHRzZXRUaW1lb3V0KCgpID0+IGNhbGxzKGFyZ3MpLCAwKVxuXHR9XG5cblx0dHJpZ2dlci5saXN0ZW4gPSBsaXN0ZW5cblx0dHJpZ2dlci5yZW1vdmUgPSByZW1vdmVcblxuXHRyZXR1cm4gdHJpZ2dlclxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9hcHAvanMvZnNpZ25hbC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval("/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9pc09iamVjdC5qcz9lODg0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyB0aGUgW2xhbmd1YWdlIHR5cGVdKGh0dHBzOi8vZXM1LmdpdGh1Yi5pby8jeDgpIG9mIGBPYmplY3RgLlxuICogKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAvLyBBdm9pZCBhIFY4IEpJVCBidWcgaW4gQ2hyb21lIDE5LTIwLlxuICAvLyBTZWUgaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTIyOTEgZm9yIG1vcmUgZGV0YWlscy5cbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiAhIXZhbHVlICYmICh0eXBlID09ICdvYmplY3QnIHx8IHR5cGUgPT0gJ2Z1bmN0aW9uJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNPYmplY3Q7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9sb2Rhc2gvaXNPYmplY3QuanNcbiAqKiBtb2R1bGUgaWQgPSAyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {var m = (function app(window, undefined) {\r\n	"use strict";\r\n  	var VERSION = "v0.2.2-rc.1";\r\n	function isFunction(object) {\r\n		return typeof object === "function";\r\n	}\r\n	function isObject(object) {\r\n		return type.call(object) === "[object Object]";\r\n	}\r\n	function isString(object) {\r\n		return type.call(object) === "[object String]";\r\n	}\r\n	var isArray = Array.isArray || function (object) {\r\n		return type.call(object) === "[object Array]";\r\n	};\r\n	var type = {}.toString;\r\n	var parser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[.+?\\])/g, attrParser = /\\[(.+?)(?:=("|\'|)(.*?)\\2)?\\]/;\r\n	var voidElements = /^(AREA|BASE|BR|COL|COMMAND|EMBED|HR|IMG|INPUT|KEYGEN|LINK|META|PARAM|SOURCE|TRACK|WBR)$/;\r\n	var noop = function () {};\r\n\r\n	// caching commonly used variables\r\n	var $document, $location, $requestAnimationFrame, $cancelAnimationFrame;\r\n\r\n	// self invoking function needed because of the way mocks work\r\n	function initialize(window) {\r\n		$document = window.document;\r\n		$location = window.location;\r\n		$cancelAnimationFrame = window.cancelAnimationFrame || window.clearTimeout;\r\n		$requestAnimationFrame = window.requestAnimationFrame || window.setTimeout;\r\n	}\r\n\r\n	initialize(window);\r\n\r\n	m.version = function() {\r\n		return VERSION;\r\n	};\r\n\r\n	/**\r\n	 * @typedef {String} Tag\r\n	 * A string that looks like -> div.classname#id[param=one][param2=two]\r\n	 * Which describes a DOM node\r\n	 */\r\n\r\n	/**\r\n	 *\r\n	 * @param {Tag} The DOM node tag\r\n	 * @param {Object=[]} optional key-value pairs to be mapped to DOM attrs\r\n	 * @param {...mNode=[]} Zero or more Mithril child nodes. Can be an array, or splat (optional)\r\n	 *\r\n	 */\r\n	function m(tag, pairs) {\r\n		for (var args = [], i = 1; i < arguments.length; i++) {\r\n			args[i - 1] = arguments[i];\r\n		}\r\n		if (isObject(tag)) return parameterize(tag, args);\r\n		var hasAttrs = pairs != null && isObject(pairs) && !("tag" in pairs || "view" in pairs || "subtree" in pairs);\r\n		var attrs = hasAttrs ? pairs : {};\r\n		var classAttrName = "class" in attrs ? "class" : "className";\r\n		var cell = {tag: "div", attrs: {}};\r\n		var match, classes = [];\r\n		if (!isString(tag)) throw new Error("selector in m(selector, attrs, children) should be a string");\r\n		while ((match = parser.exec(tag)) != null) {\r\n			if (match[1] === "" && match[2]) cell.tag = match[2];\r\n			else if (match[1] === "#") cell.attrs.id = match[2];\r\n			else if (match[1] === ".") classes.push(match[2]);\r\n			else if (match[3][0] === "[") {\r\n				var pair = attrParser.exec(match[3]);\r\n				cell.attrs[pair[1]] = pair[3] || (pair[2] ? "" :true);\r\n			}\r\n		}\r\n\r\n		var children = hasAttrs ? args.slice(1) : args;\r\n		if (children.length === 1 && isArray(children[0])) {\r\n			cell.children = children[0];\r\n		}\r\n		else {\r\n			cell.children = children;\r\n		}\r\n\r\n		for (var attrName in attrs) {\r\n			if (attrs.hasOwnProperty(attrName)) {\r\n				if (attrName === classAttrName && attrs[attrName] != null && attrs[attrName] !== "") {\r\n					classes.push(attrs[attrName]);\r\n					cell.attrs[attrName] = ""; //create key in correct iteration order\r\n				}\r\n				else cell.attrs[attrName] = attrs[attrName];\r\n			}\r\n		}\r\n		if (classes.length) cell.attrs[classAttrName] = classes.join(" ");\r\n\r\n		return cell;\r\n	}\r\n	function forEach(list, f) {\r\n		for (var i = 0; i < list.length && !f(list[i], i++);) {}\r\n	}\r\n	function forKeys(list, f) {\r\n		forEach(list, function (attrs, i) {\r\n			return (attrs = attrs && attrs.attrs) && attrs.key != null && f(attrs, i);\r\n		});\r\n	}\r\n	// This function was causing deopts in Chrome.\r\n	function dataToString(data) {\r\n		//data.toString() might throw or return null if data is the return value of Console.log in Firefox (behavior depends on version)\r\n		try {\r\n			if (data == null || data.toString() == null) return "";\r\n		} catch (e) {\r\n			return "";\r\n		}\r\n		return data;\r\n	}\r\n	// This function was causing deopts in Chrome.\r\n	function injectTextNode(parentElement, first, index, data) {\r\n		try {\r\n			insertNode(parentElement, first, index);\r\n			first.nodeValue = data;\r\n		} catch (e) {} //IE erroneously throws error when appending an empty text node after a null\r\n	}\r\n\r\n	function flatten(list) {\r\n		//recursively flatten array\r\n		for (var i = 0; i < list.length; i++) {\r\n			if (isArray(list[i])) {\r\n				list = list.concat.apply([], list);\r\n				//check current index again and flatten until there are no more nested arrays at that index\r\n				i--;\r\n			}\r\n		}\r\n		return list;\r\n	}\r\n\r\n	function insertNode(parentElement, node, index) {\r\n		parentElement.insertBefore(node, parentElement.childNodes[index] || null);\r\n	}\r\n\r\n	var DELETION = 1, INSERTION = 2, MOVE = 3;\r\n\r\n	function handleKeysDiffer(data, existing, cached, parentElement) {\r\n		forKeys(data, function (key, i) {\r\n			existing[key = key.key] = existing[key] ? {\r\n				action: MOVE,\r\n				index: i,\r\n				from: existing[key].index,\r\n				element: cached.nodes[existing[key].index] || $document.createElement("div")\r\n			} : {action: INSERTION, index: i};\r\n		});\r\n		var actions = [];\r\n		for (var prop in existing) actions.push(existing[prop]);\r\n		var changes = actions.sort(sortChanges), newCached = new Array(cached.length);\r\n		newCached.nodes = cached.nodes.slice();\r\n\r\n		forEach(changes, function (change) {\r\n			var index = change.index;\r\n			if (change.action === DELETION) {\r\n				clear(cached[index].nodes, cached[index]);\r\n				newCached.splice(index, 1);\r\n			}\r\n			if (change.action === INSERTION) {\r\n				var dummy = $document.createElement("div");\r\n				dummy.key = data[index].attrs.key;\r\n				insertNode(parentElement, dummy, index);\r\n				newCached.splice(index, 0, {\r\n					attrs: {key: data[index].attrs.key},\r\n					nodes: [dummy]\r\n				});\r\n				newCached.nodes[index] = dummy;\r\n			}\r\n\r\n			if (change.action === MOVE) {\r\n				var changeElement = change.element;\r\n				var maybeChanged = parentElement.childNodes[index];\r\n				if (maybeChanged !== changeElement && changeElement !== null) {\r\n					parentElement.insertBefore(changeElement, maybeChanged || null);\r\n				}\r\n				newCached[index] = cached[change.from];\r\n				newCached.nodes[index] = changeElement;\r\n			}\r\n		});\r\n\r\n		return newCached;\r\n	}\r\n\r\n	function diffKeys(data, cached, existing, parentElement) {\r\n		var keysDiffer = data.length !== cached.length;\r\n		if (!keysDiffer) {\r\n			forKeys(data, function (attrs, i) {\r\n				var cachedCell = cached[i];\r\n				return keysDiffer = cachedCell && cachedCell.attrs && cachedCell.attrs.key !== attrs.key;\r\n			});\r\n		}\r\n\r\n		return keysDiffer ? handleKeysDiffer(data, existing, cached, parentElement) : cached;\r\n	}\r\n\r\n	function diffArray(data, cached, nodes) {\r\n		//diff the array itself\r\n\r\n		//update the list of DOM nodes by collecting the nodes from each item\r\n		forEach(data, function (_, i) {\r\n			if (cached[i] != null) nodes.push.apply(nodes, cached[i].nodes);\r\n		})\r\n		//remove items from the end of the array if the new array is shorter than the old one. if errors ever happen here, the issue is most likely\r\n		//a bug in the construction of the `cached` data structure somewhere earlier in the program\r\n		forEach(cached.nodes, function (node, i) {\r\n			if (node.parentNode != null && nodes.indexOf(node) < 0) clear([node], [cached[i]]);\r\n		})\r\n		if (data.length < cached.length) cached.length = data.length;\r\n		cached.nodes = nodes;\r\n	}\r\n\r\n	function buildArrayKeys(data) {\r\n		var guid = 0;\r\n		forKeys(data, function () {\r\n			forEach(data, function (attrs) {\r\n				if ((attrs = attrs && attrs.attrs) && attrs.key == null) attrs.key = "__mithril__" + guid++;\r\n			})\r\n			return 1;\r\n		});\r\n	}\r\n\r\n	function maybeRecreateObject(data, cached, dataAttrKeys) {\r\n		//if an element is different enough from the one in cache, recreate it\r\n		if (data.tag !== cached.tag ||\r\n				dataAttrKeys.sort().join() !== Object.keys(cached.attrs).sort().join() ||\r\n				data.attrs.id !== cached.attrs.id ||\r\n				data.attrs.key !== cached.attrs.key ||\r\n				(m.redraw.strategy() === "all" && (!cached.configContext || cached.configContext.retain !== true)) ||\r\n				(m.redraw.strategy() === "diff" && cached.configContext && cached.configContext.retain === false)) {\r\n			if (cached.nodes.length) clear(cached.nodes);\r\n			if (cached.configContext && isFunction(cached.configContext.onunload)) cached.configContext.onunload();\r\n			if (cached.controllers) {\r\n				forEach(cached.controllers, function (controller) {\r\n					if (controller.unload) controller.onunload({preventDefault: noop});\r\n				});\r\n			}\r\n		}\r\n	}\r\n\r\n	function getObjectNamespace(data, namespace) {\r\n		return data.attrs.xmlns ? data.attrs.xmlns :\r\n			data.tag === "svg" ? "http://www.w3.org/2000/svg" :\r\n			data.tag === "math" ? "http://www.w3.org/1998/Math/MathML" :\r\n			namespace;\r\n	}\r\n\r\n	function unloadCachedControllers(cached, views, controllers) {\r\n		if (controllers.length) {\r\n			cached.views = views;\r\n			cached.controllers = controllers;\r\n			forEach(controllers, function (controller) {\r\n				if (controller.onunload && controller.onunload.$old) controller.onunload = controller.onunload.$old;\r\n				if (pendingRequests && controller.onunload) {\r\n					var onunload = controller.onunload;\r\n					controller.onunload = noop;\r\n					controller.onunload.$old = onunload;\r\n				}\r\n			});\r\n		}\r\n	}\r\n\r\n	function scheduleConfigsToBeCalled(configs, data, node, isNew, cached) {\r\n		//schedule configs to be called. They are called after `build`\r\n		//finishes running\r\n		if (isFunction(data.attrs.config)) {\r\n			var context = cached.configContext = cached.configContext || {};\r\n\r\n			//bind\r\n			configs.push(function() {\r\n				return data.attrs.config.call(data, node, !isNew, context, cached);\r\n			});\r\n		}\r\n	}\r\n\r\n	function buildUpdatedNode(cached, data, editable, hasKeys, namespace, views, configs, controllers) {\r\n		var node = cached.nodes[0];\r\n		if (hasKeys) setAttributes(node, data.tag, data.attrs, cached.attrs, namespace);\r\n		cached.children = build(node, data.tag, undefined, undefined, data.children, cached.children, false, 0, data.attrs.contenteditable ? node : editable, namespace, configs);\r\n		cached.nodes.intact = true;\r\n\r\n		if (controllers.length) {\r\n			cached.views = views;\r\n			cached.controllers = controllers;\r\n		}\r\n\r\n		return node;\r\n	}\r\n\r\n	function handleNonexistentNodes(data, parentElement, index) {\r\n		var nodes;\r\n		if (data.$trusted) {\r\n			nodes = injectHTML(parentElement, index, data);\r\n		}\r\n		else {\r\n			nodes = [$document.createTextNode(data)];\r\n			if (!parentElement.nodeName.match(voidElements)) insertNode(parentElement, nodes[0], index);\r\n		}\r\n\r\n		var cached = typeof data === "string" || typeof data === "number" || typeof data === "boolean" ? new data.constructor(data) : data;\r\n		cached.nodes = nodes;\r\n		return cached;\r\n	}\r\n\r\n	function reattachNodes(data, cached, parentElement, editable, index, parentTag) {\r\n		var nodes = cached.nodes;\r\n		if (!editable || editable !== $document.activeElement) {\r\n			if (data.$trusted) {\r\n				clear(nodes, cached)\r\n				nodes = injectHTML(parentElement, index, data)\r\n			} else if (parentTag === "textarea") {\r\n				// <textarea> uses `value` instead of `nodeValue`.\r\n				parentElement.value = data\r\n			} else if (editable) {\r\n				// contenteditable nodes use `innerHTML` instead of `nodeValue`.\r\n				editable.innerHTML = data\r\n			} else {\r\n				// was a trusted string\r\n				if (nodes[0].nodeType === 1 || nodes.length > 1 || (nodes[0].nodeValue.trim && !nodes[0].nodeValue.trim())) {\r\n					clear(cached.nodes, cached)\r\n					nodes = [$document.createTextNode(data)]\r\n				}\r\n				injectTextNode(parentElement, nodes[0], index, data);\r\n			}\r\n		}\r\n		cached = new data.constructor(data);\r\n		cached.nodes = nodes;\r\n		return cached;\r\n	}\r\n\r\n	function handleText(cached, data, index, parentElement, shouldReattach, editable, parentTag) {\r\n		//handle text nodes\r\n		return cached.nodes.length === 0 ? handleNonexistentNodes(data, parentElement, index) :\r\n			cached.valueOf() !== data.valueOf() || shouldReattach === true ?\r\n				reattachNodes(data, cached, parentElement, editable, index, parentTag) :\r\n			(cached.nodes.intact = true, cached);\r\n	}\r\n\r\n	function getSubArrayCount(item) {\r\n		if (item.$trusted) {\r\n			//fix offset of next element if item was a trusted string w/ more than one html element\r\n			//the first clause in the regexp matches elements\r\n			//the second clause (after the pipe) matches text nodes\r\n			var match = item.match(/<[^\\/]|\\>\\s*[^<]/g);\r\n			if (match != null) return match.length;\r\n		}\r\n		else if (isArray(item)) {\r\n			return item.length;\r\n		}\r\n		return 1;\r\n	}\r\n\r\n	function buildArray(data, cached, parentElement, index, parentTag, shouldReattach, editable, namespace, configs) {\r\n		data = flatten(data);\r\n		var nodes = [], intact = cached.length === data.length, subArrayCount = 0;\r\n\r\n		//keys algorithm: sort elements without recreating them if keys are present\r\n		//1) create a map of all existing keys, and mark all for deletion\r\n		//2) add new keys to map and mark them for addition\r\n		//3) if key exists in new list, change action from deletion to a move\r\n		//4) for each key, handle its corresponding action as marked in previous steps\r\n		var existing = {}, shouldMaintainIdentities = false;\r\n		forKeys(cached, function (attrs, i) {\r\n			shouldMaintainIdentities = true;\r\n			existing[cached[i].attrs.key] = {action: DELETION, index: i};\r\n		});\r\n\r\n		buildArrayKeys(data);\r\n		if (shouldMaintainIdentities) cached = diffKeys(data, cached, existing, parentElement);\r\n		//end key algorithm\r\n\r\n		var cacheCount = 0;\r\n		//faster explicitly written\r\n		for (var i = 0, len = data.length; i < len; i++) {\r\n			//diff each item in the array\r\n			var item = build(parentElement, parentTag, cached, index, data[i], cached[cacheCount], shouldReattach, index + subArrayCount || subArrayCount, editable, namespace, configs);\r\n\r\n			if (item !== undefined) {\r\n				intact = intact && item.nodes.intact;\r\n				subArrayCount += getSubArrayCount(item);\r\n				cached[cacheCount++] = item;\r\n			}\r\n		}\r\n\r\n		if (!intact) diffArray(data, cached, nodes);\r\n		return cached\r\n	}\r\n\r\n	function makeCache(data, cached, index, parentIndex, parentCache) {\r\n		if (cached != null) {\r\n			if (type.call(cached) === type.call(data)) return cached;\r\n\r\n			if (parentCache && parentCache.nodes) {\r\n				var offset = index - parentIndex, end = offset + (isArray(data) ? data : cached.nodes).length;\r\n				clear(parentCache.nodes.slice(offset, end), parentCache.slice(offset, end));\r\n			} else if (cached.nodes) {\r\n				clear(cached.nodes, cached);\r\n			}\r\n		}\r\n\r\n		cached = new data.constructor();\r\n		//if constructor creates a virtual dom element, use a blank object\r\n		//as the base cached node instead of copying the virtual el (#277)\r\n		if (cached.tag) cached = {};\r\n		cached.nodes = [];\r\n		return cached;\r\n	}\r\n\r\n	function constructNode(data, namespace) {\r\n		return namespace === undefined ?\r\n			data.attrs.is ? $document.createElement(data.tag, data.attrs.is) : $document.createElement(data.tag) :\r\n			data.attrs.is ? $document.createElementNS(namespace, data.tag, data.attrs.is) : $document.createElementNS(namespace, data.tag);\r\n	}\r\n\r\n	function constructAttrs(data, node, namespace, hasKeys) {\r\n		return hasKeys ? setAttributes(node, data.tag, data.attrs, {}, namespace) : data.attrs;\r\n	}\r\n\r\n	function constructChildren(data, node, cached, editable, namespace, configs) {\r\n		return data.children != null && data.children.length > 0 ?\r\n			build(node, data.tag, undefined, undefined, data.children, cached.children, true, 0, data.attrs.contenteditable ? node : editable, namespace, configs) :\r\n			data.children;\r\n	}\r\n\r\n	function reconstructCached(data, attrs, children, node, namespace, views, controllers) {\r\n		var cached = {tag: data.tag, attrs: attrs, children: children, nodes: [node]};\r\n		unloadCachedControllers(cached, views, controllers);\r\n		if (cached.children && !cached.children.nodes) cached.children.nodes = [];\r\n		//edge case: setting value on <select> doesn\'t work before children exist, so set it again after children have been created\r\n		if (data.tag === "select" && "value" in data.attrs) setAttributes(node, data.tag, {value: data.attrs.value}, {}, namespace);\r\n		return cached\r\n	}\r\n\r\n	function getController(views, view, cachedControllers, controller) {\r\n		var controllerIndex = m.redraw.strategy() === "diff" && views ? views.indexOf(view) : -1;\r\n		return controllerIndex > -1 ? cachedControllers[controllerIndex] :\r\n			typeof controller === "function" ? new controller() : {};\r\n	}\r\n\r\n	function updateLists(views, controllers, view, controller) {\r\n		if (controller.onunload != null) unloaders.push({controller: controller, handler: controller.onunload});\r\n		views.push(view);\r\n		controllers.push(controller);\r\n	}\r\n\r\n	function checkView(data, view, cached, cachedControllers, controllers, views) {\r\n		var controller = getController(cached.views, view, cachedControllers, data.controller);\r\n		//Faster to coerce to number and check for NaN\r\n		var key = +(data && data.attrs && data.attrs.key);\r\n		data = pendingRequests === 0 || forcing || cachedControllers && cachedControllers.indexOf(controller) > -1 ? data.view(controller) : {tag: "placeholder"};\r\n		if (data.subtree === "retain") return cached;\r\n		if (key === key) (data.attrs = data.attrs || {}).key = key;\r\n		updateLists(views, controllers, view, controller);\r\n		return data;\r\n	}\r\n\r\n	function markViews(data, cached, views, controllers) {\r\n		var cachedControllers = cached && cached.controllers;\r\n		while (data.view != null) data = checkView(data, data.view.$original || data.view, cached, cachedControllers, controllers, views);\r\n		return data;\r\n	}\r\n\r\n	function buildObject(data, cached, editable, parentElement, index, shouldReattach, namespace, configs) {\r\n		var views = [], controllers = [];\r\n		data = markViews(data, cached, views, controllers);\r\n		if (!data.tag && controllers.length) throw new Error("Component template must return a virtual element, not an array, string, etc.");\r\n		data.attrs = data.attrs || {};\r\n		cached.attrs = cached.attrs || {};\r\n		var dataAttrKeys = Object.keys(data.attrs);\r\n		var hasKeys = dataAttrKeys.length > ("key" in data.attrs ? 1 : 0);\r\n		maybeRecreateObject(data, cached, dataAttrKeys);\r\n		if (!isString(data.tag)) return;\r\n		var isNew = cached.nodes.length === 0;\r\n		namespace = getObjectNamespace(data, namespace);\r\n		var node;\r\n		if (isNew) {\r\n			node = constructNode(data, namespace);\r\n			//set attributes first, then create children\r\n			var attrs = constructAttrs(data, node, namespace, hasKeys)\r\n			var children = constructChildren(data, node, cached, editable, namespace, configs);\r\n			cached = reconstructCached(data, attrs, children, node, namespace, views, controllers);\r\n		}\r\n		else {\r\n			node = buildUpdatedNode(cached, data, editable, hasKeys, namespace, views, configs, controllers);\r\n		}\r\n		if (isNew || shouldReattach === true && node != null) insertNode(parentElement, node, index);\r\n		//schedule configs to be called. They are called after `build`\r\n		//finishes running\r\n		scheduleConfigsToBeCalled(configs, data, node, isNew, cached);\r\n		return cached\r\n	}\r\n\r\n	function build(parentElement, parentTag, parentCache, parentIndex, data, cached, shouldReattach, index, editable, namespace, configs) {\r\n		//`build` is a recursive function that manages creation/diffing/removal\r\n		//of DOM elements based on comparison between `data` and `cached`\r\n		//the diff algorithm can be summarized as this:\r\n		//1 - compare `data` and `cached`\r\n		//2 - if they are different, copy `data` to `cached` and update the DOM\r\n		//    based on what the difference is\r\n		//3 - recursively apply this algorithm for every array and for the\r\n		//    children of every virtual element\r\n\r\n		//the `cached` data structure is essentially the same as the previous\r\n		//redraw\'s `data` data structure, with a few additions:\r\n		//- `cached` always has a property called `nodes`, which is a list of\r\n		//   DOM elements that correspond to the data represented by the\r\n		//   respective virtual element\r\n		//- in order to support attaching `nodes` as a property of `cached`,\r\n		//   `cached` is *always* a non-primitive object, i.e. if the data was\r\n		//   a string, then cached is a String instance. If data was `null` or\r\n		//   `undefined`, cached is `new String("")`\r\n		//- `cached also has a `configContext` property, which is the state\r\n		//   storage object exposed by config(element, isInitialized, context)\r\n		//- when `cached` is an Object, it represents a virtual element; when\r\n		//   it\'s an Array, it represents a list of elements; when it\'s a\r\n		//   String, Number or Boolean, it represents a text node\r\n\r\n		//`parentElement` is a DOM element used for W3C DOM API calls\r\n		//`parentTag` is only used for handling a corner case for textarea\r\n		//values\r\n		//`parentCache` is used to remove nodes in some multi-node cases\r\n		//`parentIndex` and `index` are used to figure out the offset of nodes.\r\n		//They\'re artifacts from before arrays started being flattened and are\r\n		//likely refactorable\r\n		//`data` and `cached` are, respectively, the new and old nodes being\r\n		//diffed\r\n		//`shouldReattach` is a flag indicating whether a parent node was\r\n		//recreated (if so, and if this node is reused, then this node must\r\n		//reattach itself to the new parent)\r\n		//`editable` is a flag that indicates whether an ancestor is\r\n		//contenteditable\r\n		//`namespace` indicates the closest HTML namespace as it cascades down\r\n		//from an ancestor\r\n		//`configs` is a list of config functions to run after the topmost\r\n		//`build` call finishes running\r\n\r\n		//there\'s logic that relies on the assumption that null and undefined\r\n		//data are equivalent to empty strings\r\n		//- this prevents lifecycle surprises from procedural helpers that mix\r\n		//  implicit and explicit return statements (e.g.\r\n		//  function foo() {if (cond) return m("div")}\r\n		//- it simplifies diffing code\r\n		data = dataToString(data);\r\n		if (data.subtree === "retain") return cached;\r\n		cached = makeCache(data, cached, index, parentIndex, parentCache);\r\n		return isArray(data) ? buildArray(data, cached, parentElement, index, parentTag, shouldReattach, editable, namespace, configs) :\r\n			data != null && isObject(data) ? buildObject(data, cached, editable, parentElement, index, shouldReattach, namespace, configs) :\r\n			!isFunction(data) ? handleText(cached, data, index, parentElement, shouldReattach, editable, parentTag) :\r\n			cached;\r\n	}\r\n	function sortChanges(a, b) { return a.action - b.action || a.index - b.index; }\r\n	function setAttributes(node, tag, dataAttrs, cachedAttrs, namespace) {\r\n		for (var attrName in dataAttrs) {\r\n			var dataAttr = dataAttrs[attrName];\r\n			var cachedAttr = cachedAttrs[attrName];\r\n			if (!(attrName in cachedAttrs) || (cachedAttr !== dataAttr)) {\r\n				cachedAttrs[attrName] = dataAttr;\r\n				try {\r\n					//`config` isn\'t a real attributes, so ignore it\r\n					if (attrName === "config" || attrName === "key") continue;\r\n					//hook event handlers to the auto-redrawing system\r\n					else if (isFunction(dataAttr) && attrName.slice(0, 2) === "on") {\r\n						node[attrName] = autoredraw(dataAttr, node);\r\n					}\r\n					//handle `style: {...}`\r\n					else if (attrName === "style" && dataAttr != null && isObject(dataAttr)) {\r\n						for (var rule in dataAttr) {\r\n							if (cachedAttr == null || cachedAttr[rule] !== dataAttr[rule]) node.style[rule] = dataAttr[rule];\r\n						}\r\n						for (var rule in cachedAttr) {\r\n							if (!(rule in dataAttr)) node.style[rule] = "";\r\n						}\r\n					}\r\n					//handle SVG\r\n					else if (namespace != null) {\r\n						if (attrName === "href") node.setAttributeNS("http://www.w3.org/1999/xlink", "href", dataAttr);\r\n						else node.setAttribute(attrName === "className" ? "class" : attrName, dataAttr);\r\n					}\r\n					//handle cases that are properties (but ignore cases where we should use setAttribute instead)\r\n					//- list and form are typically used as strings, but are DOM element references in js\r\n					//- when using CSS selectors (e.g. `m("[style=\'\']")`), style is used as a string, but it\'s an object in js\r\n					else if (attrName in node && attrName !== "list" && attrName !== "style" && attrName !== "form" && attrName !== "type" && attrName !== "width" && attrName !== "height") {\r\n						//#348 don\'t set the value if not needed otherwise cursor placement breaks in Chrome\r\n						if (tag !== "input" || node[attrName] !== dataAttr) node[attrName] = dataAttr;\r\n					}\r\n					else node.setAttribute(attrName, dataAttr);\r\n				}\r\n				catch (e) {\r\n					//swallow IE\'s invalid argument errors to mimic HTML\'s fallback-to-doing-nothing-on-invalid-attributes behavior\r\n					if (e.message.indexOf("Invalid argument") < 0) throw e;\r\n				}\r\n			}\r\n			//#348 dataAttr may not be a string, so use loose comparison (double equal) instead of strict (triple equal)\r\n			else if (attrName === "value" && tag === "input" && node.value != dataAttr) {\r\n				node.value = dataAttr;\r\n			}\r\n		}\r\n		return cachedAttrs;\r\n	}\r\n	function clear(nodes, cached) {\r\n		for (var i = nodes.length - 1; i > -1; i--) {\r\n			if (nodes[i] && nodes[i].parentNode) {\r\n				try { nodes[i].parentNode.removeChild(nodes[i]); }\r\n				catch (e) {} //ignore if this fails due to order of events (see http://stackoverflow.com/questions/21926083/failed-to-execute-removechild-on-node)\r\n				cached = [].concat(cached);\r\n				if (cached[i]) unload(cached[i]);\r\n			}\r\n		}\r\n		//release memory if nodes is an array. This check should fail if nodes is a NodeList (see loop above)\r\n		if (nodes.length) nodes.length = 0;\r\n	}\r\n	function unload(cached) {\r\n		if (cached.configContext && isFunction(cached.configContext.onunload)) {\r\n			cached.configContext.onunload();\r\n			cached.configContext.onunload = null;\r\n		}\r\n		if (cached.controllers) {\r\n			forEach(cached.controllers, function (controller) {\r\n				if (isFunction(controller.onunload)) controller.onunload({preventDefault: noop});\r\n			});\r\n		}\r\n		if (cached.children) {\r\n			if (isArray(cached.children)) forEach(cached.children, unload);\r\n			else if (cached.children.tag) unload(cached.children);\r\n		}\r\n	}\r\n	function injectHTML(parentElement, index, data) {\r\n		var nextSibling = parentElement.childNodes[index];\r\n		if (nextSibling) {\r\n			var isElement = nextSibling.nodeType !== 1;\r\n			var placeholder = $document.createElement("span");\r\n			if (isElement) {\r\n				parentElement.insertBefore(placeholder, nextSibling || null);\r\n				placeholder.insertAdjacentHTML("beforebegin", data);\r\n				parentElement.removeChild(placeholder);\r\n			}\r\n			else nextSibling.insertAdjacentHTML("beforebegin", data);\r\n		}\r\n		else {\r\n			if (window.Range && window.Range.prototype.createContextualFragment) {\r\n				parentElement.appendChild($document.createRange().createContextualFragment(data));\r\n			}\r\n			else parentElement.insertAdjacentHTML("beforeend", data);\r\n		}\r\n		var nodes = [];\r\n		while (parentElement.childNodes[index] !== nextSibling) {\r\n			nodes.push(parentElement.childNodes[index]);\r\n			index++;\r\n		}\r\n		return nodes;\r\n	}\r\n	function autoredraw(callback, object) {\r\n		return function(e) {\r\n			e = e || event;\r\n			m.redraw.strategy("diff");\r\n			m.startComputation();\r\n			try { return callback.call(object, e); }\r\n			finally {\r\n				endFirstComputation();\r\n			}\r\n		};\r\n	}\r\n\r\n	var html;\r\n	var documentNode = {\r\n		appendChild: function(node) {\r\n			if (html === undefined) html = $document.createElement("html");\r\n			if ($document.documentElement && $document.documentElement !== node) {\r\n				$document.replaceChild(node, $document.documentElement);\r\n			}\r\n			else $document.appendChild(node);\r\n			this.childNodes = $document.childNodes;\r\n		},\r\n		insertBefore: function(node) {\r\n			this.appendChild(node);\r\n		},\r\n		childNodes: []\r\n	};\r\n	var nodeCache = [], cellCache = {};\r\n	m.render = function(root, cell, forceRecreation) {\r\n		var configs = [];\r\n		if (!root) throw new Error("Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.");\r\n		var id = getCellCacheKey(root);\r\n		var isDocumentRoot = root === $document;\r\n		var node = isDocumentRoot || root === $document.documentElement ? documentNode : root;\r\n		if (isDocumentRoot && cell.tag !== "html") cell = {tag: "html", attrs: {}, children: cell};\r\n		if (cellCache[id] === undefined) clear(node.childNodes);\r\n		if (forceRecreation === true) reset(root);\r\n		cellCache[id] = build(node, null, undefined, undefined, cell, cellCache[id], false, 0, null, undefined, configs);\r\n		forEach(configs, function (config) { config(); });\r\n	};\r\n	function getCellCacheKey(element) {\r\n		var index = nodeCache.indexOf(element);\r\n		return index < 0 ? nodeCache.push(element) - 1 : index;\r\n	}\r\n\r\n	m.trust = function(value) {\r\n		value = new String(value);\r\n		value.$trusted = true;\r\n		return value;\r\n	};\r\n\r\n	function gettersetter(store) {\r\n		var prop = function() {\r\n			if (arguments.length) store = arguments[0];\r\n			return store;\r\n		};\r\n\r\n		prop.toJSON = function() {\r\n			return store;\r\n		};\r\n\r\n		return prop;\r\n	}\r\n\r\n	m.prop = function (store) {\r\n		//note: using non-strict equality check here because we\'re checking if store is null OR undefined\r\n		if ((store != null && isObject(store) || isFunction(store)) && isFunction(store.then)) {\r\n			return propify(store);\r\n		}\r\n\r\n		return gettersetter(store);\r\n	};\r\n\r\n	var roots = [], components = [], controllers = [], lastRedrawId = null, lastRedrawCallTime = 0, computePreRedrawHook = null, computePostRedrawHook = null, topComponent, unloaders = [];\r\n	var FRAME_BUDGET = 16; //60 frames per second = 1 call per 16 ms\r\n	function parameterize(component, args) {\r\n		var controller = function() {\r\n			return (component.controller || noop).apply(this, args) || this;\r\n		};\r\n		if (component.controller) controller.prototype = component.controller.prototype;\r\n		var view = function(ctrl) {\r\n			var currentArgs = arguments.length > 1 ? args.concat([].slice.call(arguments, 1)) : args;\r\n			return component.view.apply(component, currentArgs ? [ctrl].concat(currentArgs) : [ctrl]);\r\n		};\r\n		view.$original = component.view;\r\n		var output = {controller: controller, view: view};\r\n		if (args[0] && args[0].key != null) output.attrs = {key: args[0].key};\r\n		return output;\r\n	}\r\n	m.component = function(component) {\r\n		for (var args = [], i = 1; i < arguments.length; i++) args.push(arguments[i]);\r\n		return parameterize(component, args);\r\n	};\r\n	m.mount = m.module = function(root, component) {\r\n		if (!root) throw new Error("Please ensure the DOM element exists before rendering a template into it.");\r\n		var index = roots.indexOf(root);\r\n		if (index < 0) index = roots.length;\r\n\r\n		var isPrevented = false;\r\n		var event = {preventDefault: function() {\r\n			isPrevented = true;\r\n			computePreRedrawHook = computePostRedrawHook = null;\r\n		}};\r\n\r\n		forEach(unloaders, function (unloader) {\r\n			unloader.handler.call(unloader.controller, event);\r\n			unloader.controller.onunload = null;\r\n		});\r\n\r\n		if (isPrevented) {\r\n			forEach(unloaders, function (unloader) {\r\n				unloader.controller.onunload = unloader.handler;\r\n			});\r\n		}\r\n		else unloaders = [];\r\n\r\n		if (controllers[index] && isFunction(controllers[index].onunload)) {\r\n			controllers[index].onunload(event);\r\n		}\r\n\r\n		var isNullComponent = component === null;\r\n\r\n		if (!isPrevented) {\r\n			m.redraw.strategy("all");\r\n			m.startComputation();\r\n			roots[index] = root;\r\n			var currentComponent = component ? (topComponent = component) : (topComponent = component = {controller: noop});\r\n			var controller = new (component.controller || noop)();\r\n			//controllers may call m.mount recursively (via m.route redirects, for example)\r\n			//this conditional ensures only the last recursive m.mount call is applied\r\n			if (currentComponent === topComponent) {\r\n				controllers[index] = controller;\r\n				components[index] = component;\r\n			}\r\n			endFirstComputation();\r\n			if (isNullComponent) {\r\n				removeRootElement(root, index);\r\n			}\r\n			return controllers[index];\r\n		}\r\n		if (isNullComponent) {\r\n			removeRootElement(root, index);\r\n		}\r\n	};\r\n\r\n	function removeRootElement(root, index) {\r\n		roots.splice(index, 1);\r\n		controllers.splice(index, 1);\r\n		components.splice(index, 1);\r\n		reset(root);\r\n		nodeCache.splice(getCellCacheKey(root), 1);\r\n	}\r\n\r\n	var redrawing = false, forcing = false;\r\n	m.redraw = function(force) {\r\n		if (redrawing) return;\r\n		redrawing = true;\r\n		if (force) forcing = true;\r\n		try {\r\n			//lastRedrawId is a positive number if a second redraw is requested before the next animation frame\r\n			//lastRedrawID is null if it\'s the first redraw and not an event handler\r\n			if (lastRedrawId && !force) {\r\n				//when setTimeout: only reschedule redraw if time between now and previous redraw is bigger than a frame, otherwise keep currently scheduled timeout\r\n				//when rAF: always reschedule redraw\r\n				if ($requestAnimationFrame === window.requestAnimationFrame || new Date - lastRedrawCallTime > FRAME_BUDGET) {\r\n					if (lastRedrawId > 0) $cancelAnimationFrame(lastRedrawId);\r\n					lastRedrawId = $requestAnimationFrame(redraw, FRAME_BUDGET);\r\n				}\r\n			}\r\n			else {\r\n				redraw();\r\n				lastRedrawId = $requestAnimationFrame(function() { lastRedrawId = null; }, FRAME_BUDGET);\r\n			}\r\n		}\r\n		finally {\r\n			redrawing = forcing = false;\r\n		}\r\n	};\r\n	m.redraw.strategy = m.prop();\r\n	function redraw() {\r\n		if (computePreRedrawHook) {\r\n			computePreRedrawHook();\r\n			computePreRedrawHook = null;\r\n		}\r\n		forEach(roots, function (root, i) {\r\n			var component = components[i];\r\n			if (controllers[i]) {\r\n				var args = [controllers[i]];\r\n				m.render(root, component.view ? component.view(controllers[i], args) : "");\r\n			}\r\n		});\r\n		//after rendering within a routed context, we need to scroll back to the top, and fetch the document title for history.pushState\r\n		if (computePostRedrawHook) {\r\n			computePostRedrawHook();\r\n			computePostRedrawHook = null;\r\n		}\r\n		lastRedrawId = null;\r\n		lastRedrawCallTime = new Date;\r\n		m.redraw.strategy("diff");\r\n	}\r\n\r\n	var pendingRequests = 0;\r\n	m.startComputation = function() { pendingRequests++; };\r\n	m.endComputation = function() {\r\n		if (pendingRequests > 1) pendingRequests--;\r\n		else {\r\n			pendingRequests = 0;\r\n			m.redraw();\r\n		}\r\n	}\r\n\r\n	function endFirstComputation() {\r\n		if (m.redraw.strategy() === "none") {\r\n			pendingRequests--;\r\n			m.redraw.strategy("diff");\r\n		}\r\n		else m.endComputation();\r\n	}\r\n\r\n	m.withAttr = function(prop, withAttrCallback, callbackThis) {\r\n		return function(e) {\r\n			e = e || event;\r\n			var currentTarget = e.currentTarget || this;\r\n			var _this = callbackThis || this;\r\n			withAttrCallback.call(_this, prop in currentTarget ? currentTarget[prop] : currentTarget.getAttribute(prop));\r\n		};\r\n	};\r\n\r\n	//routing\r\n	var modes = {pathname: "", hash: "#", search: "?"};\r\n	var redirect = noop, routeParams, currentRoute, isDefaultRoute = false;\r\n	m.route = function(root, arg1, arg2, vdom) {\r\n		//m.route()\r\n		if (arguments.length === 0) return currentRoute;\r\n		//m.route(el, defaultRoute, routes)\r\n		else if (arguments.length === 3 && isString(arg1)) {\r\n			redirect = function(source) {\r\n				var path = currentRoute = normalizeRoute(source);\r\n				if (!routeByValue(root, arg2, path)) {\r\n					if (isDefaultRoute) throw new Error("Ensure the default route matches one of the routes defined in m.route");\r\n					isDefaultRoute = true;\r\n					m.route(arg1, true);\r\n					isDefaultRoute = false;\r\n				}\r\n			};\r\n			var listener = m.route.mode === "hash" ? "onhashchange" : "onpopstate";\r\n			window[listener] = function() {\r\n				var path = $location[m.route.mode];\r\n				if (m.route.mode === "pathname") path += $location.search;\r\n				if (currentRoute !== normalizeRoute(path)) redirect(path);\r\n			};\r\n\r\n			computePreRedrawHook = setScroll;\r\n			window[listener]();\r\n		}\r\n		//config: m.route\r\n		else if (root.addEventListener || root.attachEvent) {\r\n			root.href = (m.route.mode !== \'pathname\' ? $location.pathname : \'\') + modes[m.route.mode] + vdom.attrs.href;\r\n			if (root.addEventListener) {\r\n				root.removeEventListener("click", routeUnobtrusive);\r\n				root.addEventListener("click", routeUnobtrusive);\r\n			}\r\n			else {\r\n				root.detachEvent("onclick", routeUnobtrusive);\r\n				root.attachEvent("onclick", routeUnobtrusive);\r\n			}\r\n		}\r\n		//m.route(route, params, shouldReplaceHistoryEntry)\r\n		else if (isString(root)) {\r\n			var oldRoute = currentRoute;\r\n			currentRoute = root;\r\n			var args = arg1 || {};\r\n			var queryIndex = currentRoute.indexOf("?");\r\n			var params = queryIndex > -1 ? parseQueryString(currentRoute.slice(queryIndex + 1)) : {};\r\n			for (var i in args) params[i] = args[i];\r\n			var querystring = buildQueryString(params);\r\n			var currentPath = queryIndex > -1 ? currentRoute.slice(0, queryIndex) : currentRoute;\r\n			if (querystring) currentRoute = currentPath + (currentPath.indexOf("?") === -1 ? "?" : "&") + querystring;\r\n\r\n			var shouldReplaceHistoryEntry = (arguments.length === 3 ? arg2 : arg1) === true || oldRoute === root;\r\n\r\n			if (window.history.pushState) {\r\n				computePreRedrawHook = setScroll;\r\n				computePostRedrawHook = function() {\r\n					window.history[shouldReplaceHistoryEntry ? "replaceState" : "pushState"](null, $document.title, modes[m.route.mode] + currentRoute);\r\n				};\r\n				redirect(modes[m.route.mode] + currentRoute);\r\n			}\r\n			else {\r\n				$location[m.route.mode] = currentRoute;\r\n				redirect(modes[m.route.mode] + currentRoute);\r\n			}\r\n		}\r\n	};\r\n	m.route.param = function(key) {\r\n		if (!routeParams) throw new Error("You must call m.route(element, defaultRoute, routes) before calling m.route.param()");\r\n		if( !key ){\r\n			return routeParams;\r\n		}\r\n		return routeParams[key];\r\n	};\r\n	m.route.mode = "search";\r\n	function normalizeRoute(route) {\r\n		return route.slice(modes[m.route.mode].length);\r\n	}\r\n	function routeByValue(root, router, path) {\r\n		routeParams = {};\r\n\r\n		var queryStart = path.indexOf("?");\r\n		if (queryStart !== -1) {\r\n			routeParams = parseQueryString(path.substr(queryStart + 1, path.length));\r\n			path = path.substr(0, queryStart);\r\n		}\r\n\r\n		// Get all routes and check if there\'s\r\n		// an exact match for the current path\r\n		var keys = Object.keys(router);\r\n		var index = keys.indexOf(path);\r\n		if(index !== -1){\r\n			m.mount(root, router[keys [index]]);\r\n			return true;\r\n		}\r\n\r\n		for (var route in router) {\r\n			if (route === path) {\r\n				m.mount(root, router[route]);\r\n				return true;\r\n			}\r\n\r\n			var matcher = new RegExp("^" + route.replace(/:[^\\/]+?\\.{3}/g, "(.*?)").replace(/:[^\\/]+/g, "([^\\\\/]+)") + "\\/?$");\r\n\r\n			if (matcher.test(path)) {\r\n				path.replace(matcher, function() {\r\n					var keys = route.match(/:[^\\/]+/g) || [];\r\n					var values = [].slice.call(arguments, 1, -2);\r\n					forEach(keys, function (key, i) {\r\n						routeParams[key.replace(/:|\\./g, "")] = decodeURIComponent(values[i]);\r\n					})\r\n					m.mount(root, router[route]);\r\n				});\r\n				return true;\r\n			}\r\n		}\r\n	}\r\n	function routeUnobtrusive(e) {\r\n		e = e || event;\r\n\r\n		if (e.ctrlKey || e.metaKey || e.which === 2) return;\r\n\r\n		if (e.preventDefault) e.preventDefault();\r\n		else e.returnValue = false;\r\n\r\n		var currentTarget = e.currentTarget || e.srcElement;\r\n		var args = m.route.mode === "pathname" && currentTarget.search ? parseQueryString(currentTarget.search.slice(1)) : {};\r\n		while (currentTarget && currentTarget.nodeName.toUpperCase() !== "A") currentTarget = currentTarget.parentNode;\r\n		// clear pendingRequests because we want an immediate route change\r\n		pendingRequests = 0;\r\n		m.route(currentTarget[m.route.mode].slice(modes[m.route.mode].length), args);\r\n	}\r\n	function setScroll() {\r\n		if (m.route.mode !== "hash" && $location.hash) $location.hash = $location.hash;\r\n		else window.scrollTo(0, 0);\r\n	}\r\n	function buildQueryString(object, prefix) {\r\n		var duplicates = {};\r\n		var str = [];\r\n		for (var prop in object) {\r\n			var key = prefix ? prefix + "[" + prop + "]" : prop;\r\n			var value = object[prop];\r\n\r\n			if (value === null) {\r\n				str.push(encodeURIComponent(key));\r\n			} else if (isObject(value)) {\r\n				str.push(buildQueryString(value, key));\r\n			} else if (isArray(value)) {\r\n				var keys = [];\r\n				duplicates[key] = duplicates[key] || {};\r\n				forEach(value, function (item) {\r\n					if (!duplicates[key][item]) {\r\n						duplicates[key][item] = true;\r\n						keys.push(encodeURIComponent(key) + "=" + encodeURIComponent(item));\r\n					}\r\n				});\r\n				str.push(keys.join("&"));\r\n			} else if (value !== undefined) {\r\n				str.push(encodeURIComponent(key) + "=" + encodeURIComponent(value));\r\n			}\r\n		}\r\n		return str.join("&");\r\n	}\r\n	function parseQueryString(str) {\r\n		if (str === "" || str == null) return {};\r\n		if (str.charAt(0) === "?") str = str.slice(1);\r\n\r\n		var pairs = str.split("&"), params = {};\r\n		forEach(pairs, function (string) {\r\n			var pair = string.split("=");\r\n			var key = decodeURIComponent(pair[0]);\r\n			var value = pair.length === 2 ? decodeURIComponent(pair[1]) : null;\r\n			if (params[key] != null) {\r\n				if (!isArray(params[key])) params[key] = [params[key]];\r\n				params[key].push(value);\r\n			}\r\n			else params[key] = value;\r\n		});\r\n\r\n		return params;\r\n	}\r\n	m.route.buildQueryString = buildQueryString;\r\n	m.route.parseQueryString = parseQueryString;\r\n\r\n	function reset(root) {\r\n		var cacheKey = getCellCacheKey(root);\r\n		clear(root.childNodes, cellCache[cacheKey]);\r\n		cellCache[cacheKey] = undefined;\r\n	}\r\n\r\n	m.deferred = function () {\r\n		var deferred = new Deferred();\r\n		deferred.promise = propify(deferred.promise);\r\n		return deferred;\r\n	};\r\n	function propify(promise, initialValue) {\r\n		var prop = m.prop(initialValue);\r\n		promise.then(prop);\r\n		prop.then = function(resolve, reject) {\r\n			return propify(promise.then(resolve, reject), initialValue);\r\n		};\r\n		prop["catch"] = prop.then.bind(null, null);\r\n		return prop;\r\n	}\r\n	//Promiz.mithril.js | Zolmeister | MIT\r\n	//a modified version of Promiz.js, which does not conform to Promises/A+ for two reasons:\r\n	//1) `then` callbacks are called synchronously (because setTimeout is too slow, and the setImmediate polyfill is too big\r\n	//2) throwing subclasses of Error cause the error to be bubbled up instead of triggering rejection (because the spec does not account for the important use case of default browser error handling, i.e. message w/ line number)\r\n	function Deferred(successCallback, failureCallback) {\r\n		var RESOLVING = 1, REJECTING = 2, RESOLVED = 3, REJECTED = 4;\r\n		var self = this, state = 0, promiseValue = 0, next = [];\r\n\r\n		self.promise = {};\r\n\r\n		self.resolve = function(value) {\r\n			if (!state) {\r\n				promiseValue = value;\r\n				state = RESOLVING;\r\n\r\n				fire();\r\n			}\r\n			return this;\r\n		};\r\n\r\n		self.reject = function(value) {\r\n			if (!state) {\r\n				promiseValue = value;\r\n				state = REJECTING;\r\n\r\n				fire();\r\n			}\r\n			return this;\r\n		};\r\n\r\n		self.promise.then = function(successCallback, failureCallback) {\r\n			var deferred = new Deferred(successCallback, failureCallback)\r\n			if (state === RESOLVED) {\r\n				deferred.resolve(promiseValue);\r\n			}\r\n			else if (state === REJECTED) {\r\n				deferred.reject(promiseValue);\r\n			}\r\n			else {\r\n				next.push(deferred);\r\n			}\r\n			return deferred.promise\r\n		};\r\n\r\n		function finish(type) {\r\n			state = type || REJECTED;\r\n			next.map(function(deferred) {\r\n				state === RESOLVED ? deferred.resolve(promiseValue) : deferred.reject(promiseValue);\r\n			});\r\n		}\r\n\r\n		function thennable(then, successCallback, failureCallback, notThennableCallback) {\r\n			if (((promiseValue != null && isObject(promiseValue)) || isFunction(promiseValue)) && isFunction(then)) {\r\n				try {\r\n					// count protects against abuse calls from spec checker\r\n					var count = 0;\r\n					then.call(promiseValue, function(value) {\r\n						if (count++) return;\r\n						promiseValue = value;\r\n						successCallback();\r\n					}, function (value) {\r\n						if (count++) return;\r\n						promiseValue = value;\r\n						failureCallback();\r\n					});\r\n				}\r\n				catch (e) {\r\n					m.deferred.onerror(e);\r\n					promiseValue = e;\r\n					failureCallback();\r\n				}\r\n			} else {\r\n				notThennableCallback();\r\n			}\r\n		}\r\n\r\n		function fire() {\r\n			// check if it\'s a thenable\r\n			var then;\r\n			try {\r\n				then = promiseValue && promiseValue.then;\r\n			}\r\n			catch (e) {\r\n				m.deferred.onerror(e);\r\n				promiseValue = e;\r\n				state = REJECTING;\r\n				return fire();\r\n			}\r\n\r\n			if (state === REJECTING) {\r\n				m.deferred.onerror(promiseValue)\r\n			}\r\n\r\n			thennable(then, function () {\r\n				state = RESOLVING\r\n				fire()\r\n			}, function () {\r\n				state = REJECTING\r\n				fire()\r\n			}, function () {\r\n				try {\r\n					if (state === RESOLVING && isFunction(successCallback)) {\r\n						promiseValue = successCallback(promiseValue);\r\n					}\r\n					else if (state === REJECTING && isFunction(failureCallback)) {\r\n						promiseValue = failureCallback(promiseValue);\r\n						state = RESOLVING;\r\n					}\r\n				}\r\n				catch (e) {\r\n					m.deferred.onerror(e);\r\n					promiseValue = e;\r\n					return finish();\r\n				}\r\n\r\n				if (promiseValue === self) {\r\n					promiseValue = TypeError();\r\n					finish();\r\n				} else {\r\n					thennable(then, function () {\r\n						finish(RESOLVED);\r\n					}, finish, function () {\r\n						finish(state === RESOLVING && RESOLVED);\r\n					});\r\n				}\r\n			});\r\n		}\r\n	}\r\n	m.deferred.onerror = function(e) {\r\n		if (type.call(e) === "[object Error]" && !e.constructor.toString().match(/ Error/)) {\r\n			pendingRequests = 0;\r\n			throw e;\r\n		}\r\n	};\r\n\r\n	m.sync = function(args) {\r\n		var method = "resolve";\r\n\r\n		function synchronizer(pos, resolved) {\r\n			return function(value) {\r\n				results[pos] = value;\r\n				if (!resolved) method = "reject";\r\n				if (--outstanding === 0) {\r\n					deferred.promise(results);\r\n					deferred[method](results);\r\n				}\r\n				return value;\r\n			};\r\n		}\r\n\r\n		var deferred = m.deferred();\r\n		var outstanding = args.length;\r\n		var results = new Array(outstanding);\r\n		if (args.length > 0) {\r\n			forEach(args, function (arg, i) {\r\n				arg.then(synchronizer(i, true), synchronizer(i, false));\r\n			});\r\n		}\r\n		else deferred.resolve([]);\r\n\r\n		return deferred.promise;\r\n	};\r\n	function identity(value) { return value; }\r\n\r\n	function ajax(options) {\r\n		if (options.dataType && options.dataType.toLowerCase() === "jsonp") {\r\n			var callbackKey = "mithril_callback_" + new Date().getTime() + "_" + (Math.round(Math.random() * 1e16)).toString(36)\r\n			var script = $document.createElement("script");\r\n\r\n			window[callbackKey] = function(resp) {\r\n				script.parentNode.removeChild(script);\r\n				options.onload({\r\n					type: "load",\r\n					target: {\r\n						responseText: resp\r\n					}\r\n				});\r\n				window[callbackKey] = undefined;\r\n			};\r\n\r\n			script.onerror = function() {\r\n				script.parentNode.removeChild(script);\r\n\r\n				options.onerror({\r\n					type: "error",\r\n					target: {\r\n						status: 500,\r\n						responseText: JSON.stringify({\r\n							error: "Error making jsonp request"\r\n						})\r\n					}\r\n				});\r\n				window[callbackKey] = undefined;\r\n\r\n				return false;\r\n			}\r\n\r\n			script.onload = function() {\r\n				return false;\r\n			};\r\n\r\n			script.src = options.url\r\n				+ (options.url.indexOf("?") > 0 ? "&" : "?")\r\n				+ (options.callbackKey ? options.callbackKey : "callback")\r\n				+ "=" + callbackKey\r\n				+ "&" + buildQueryString(options.data || {});\r\n			$document.body.appendChild(script);\r\n		}\r\n		else {\r\n			var xhr = new window.XMLHttpRequest();\r\n			xhr.open(options.method, options.url, true, options.user, options.password);\r\n			xhr.onreadystatechange = function() {\r\n				if (xhr.readyState === 4) {\r\n					if (xhr.status >= 200 && xhr.status < 300) options.onload({type: "load", target: xhr});\r\n					else options.onerror({type: "error", target: xhr});\r\n				}\r\n			};\r\n			if (options.serialize === JSON.stringify && options.data && options.method !== "GET") {\r\n				xhr.setRequestHeader("Content-Type", "application/json; charset=utf-8");\r\n			}\r\n			if (options.deserialize === JSON.parse) {\r\n				xhr.setRequestHeader("Accept", "application/json, text/*");\r\n			}\r\n			if (isFunction(options.config)) {\r\n				var maybeXhr = options.config(xhr, options);\r\n				if (maybeXhr != null) xhr = maybeXhr;\r\n			}\r\n\r\n			var data = options.method === "GET" || !options.data ? "" : options.data;\r\n			if (data && (!isString(data) && data.constructor !== window.FormData)) {\r\n				throw new Error("Request data should be either be a string or FormData. Check the `serialize` option in `m.request`");\r\n			}\r\n			xhr.send(data);\r\n			return xhr;\r\n		}\r\n	}\r\n\r\n	function bindData(xhrOptions, data, serialize) {\r\n		if (xhrOptions.method === "GET" && xhrOptions.dataType !== "jsonp") {\r\n			var prefix = xhrOptions.url.indexOf("?") < 0 ? "?" : "&";\r\n			var querystring = buildQueryString(data);\r\n			xhrOptions.url = xhrOptions.url + (querystring ? prefix + querystring : "");\r\n		}\r\n		else xhrOptions.data = serialize(data);\r\n		return xhrOptions;\r\n	}\r\n\r\n	function parameterizeUrl(url, data) {\r\n		var tokens = url.match(/:[a-z]\\w+/gi);\r\n		if (tokens && data) {\r\n			forEach(tokens, function (token) {\r\n				var key = token.slice(1);\r\n				url = url.replace(token, data[key]);\r\n				delete data[key];\r\n			});\r\n		}\r\n		return url;\r\n	}\r\n\r\n	m.request = function(xhrOptions) {\r\n		if (xhrOptions.background !== true) m.startComputation();\r\n		var deferred = new Deferred();\r\n		var isJSONP = xhrOptions.dataType && xhrOptions.dataType.toLowerCase() === "jsonp"\r\n		var serialize = xhrOptions.serialize = isJSONP ? identity : xhrOptions.serialize || JSON.stringify;\r\n		var deserialize = xhrOptions.deserialize = isJSONP ? identity : xhrOptions.deserialize || JSON.parse;\r\n		var extract = isJSONP ? function(jsonp) { return jsonp.responseText } : xhrOptions.extract || function(xhr) {\r\n			if (xhr.responseText.length === 0 && deserialize === JSON.parse) {\r\n				return null\r\n			} else {\r\n				return xhr.responseText\r\n			}\r\n		};\r\n		xhrOptions.method = (xhrOptions.method || "GET").toUpperCase();\r\n		xhrOptions.url = parameterizeUrl(xhrOptions.url, xhrOptions.data);\r\n		xhrOptions = bindData(xhrOptions, xhrOptions.data, serialize);\r\n		xhrOptions.onload = xhrOptions.onerror = function(e) {\r\n			try {\r\n				e = e || event;\r\n				var unwrap = (e.type === "load" ? xhrOptions.unwrapSuccess : xhrOptions.unwrapError) || identity;\r\n				var response = unwrap(deserialize(extract(e.target, xhrOptions)), e.target);\r\n				if (e.type === "load") {\r\n					if (isArray(response) && xhrOptions.type) {\r\n						forEach(response, function (res, i) {\r\n							response[i] = new xhrOptions.type(res);\r\n						});\r\n					} else if (xhrOptions.type) {\r\n						response = new xhrOptions.type(response);\r\n					}\r\n					deferred.resolve(response)\r\n				} else {\r\n					deferred.reject(response)\r\n				}\r\n\r\n				deferred[e.type === "load" ? "resolve" : "reject"](response);\r\n			}\r\n			catch (e) {\r\n				deferred.reject(e);\r\n			}\r\n			finally {\r\n				if (xhrOptions.background !== true) m.endComputation()\r\n			}\r\n		}\r\n\r\n		ajax(xhrOptions);\r\n		deferred.promise = propify(deferred.promise, xhrOptions.initialValue);\r\n		return deferred.promise;\r\n	};\r\n\r\n	//testing API\r\n	m.deps = function(mock) {\r\n		initialize(window = mock || window);\r\n		return window;\r\n	};\r\n	//for internal testing only, do not use `m.deps.factory`\r\n	m.deps.factory = app;\r\n\r\n	return m;\r\n})(typeof window !== "undefined" ? window : {});\r\n\r\nif (typeof module === "object" && module != null && module.exports) module.exports = m;\r\nelse if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return m }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)(module)))\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21pdGhyaWwvbWl0aHJpbC5qcz9iZDQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJrQ0FBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxJQUFJO0FBQ2hCLFlBQVksVUFBVTtBQUN0QixZQUFZLFlBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHNCQUFzQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixxQ0FBcUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsYUFBYTtBQUNoQjs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLGlCQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksSUFBSTtBQUNSLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwyQkFBMkI7QUFDeEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELHFCQUFxQjtBQUN0RSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9DQUFvQyxTQUFTO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0RBQStEO0FBQy9EOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLHdCQUF3QixJQUFJO0FBQ2pIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1EQUFtRCxxREFBcUQ7QUFDeEc7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0lBQXdJO0FBQ3hJO0FBQ0EsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0U7QUFDbEUsdURBQXVEO0FBQ3ZEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsaURBQWlEO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLElBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxRQUFRO0FBQ3hDO0FBQ0EsU0FBUywyQ0FBMkM7QUFDcEQsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQscUJBQXFCO0FBQ25GLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlDQUFpQztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxzQkFBc0I7QUFDM0U7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFVBQVUsRUFBRTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsc0RBQXNEO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixzQkFBc0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxpQkFBaUI7QUFDakg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QscUJBQXFCLEVBQUU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyxtQkFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDREQUE0RCxFQUFFOztBQUU5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQixjQUFjOztBQUV6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLDBCQUEwQjtBQUMxRiwyQkFBMkIsMkJBQTJCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsNEJBQTRCO0FBQ3ZFO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxDQUFDLDZDQUE2Qzs7QUFFOUM7QUFDQSw2REFBd0UsV0FBVyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG0gPSAoZnVuY3Rpb24gYXBwKHdpbmRvdywgdW5kZWZpbmVkKSB7XHJcblx0XCJ1c2Ugc3RyaWN0XCI7XHJcbiAgXHR2YXIgVkVSU0lPTiA9IFwidjAuMi4yLXJjLjFcIjtcclxuXHRmdW5jdGlvbiBpc0Z1bmN0aW9uKG9iamVjdCkge1xyXG5cdFx0cmV0dXJuIHR5cGVvZiBvYmplY3QgPT09IFwiZnVuY3Rpb25cIjtcclxuXHR9XHJcblx0ZnVuY3Rpb24gaXNPYmplY3Qob2JqZWN0KSB7XHJcblx0XHRyZXR1cm4gdHlwZS5jYWxsKG9iamVjdCkgPT09IFwiW29iamVjdCBPYmplY3RdXCI7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIGlzU3RyaW5nKG9iamVjdCkge1xyXG5cdFx0cmV0dXJuIHR5cGUuY2FsbChvYmplY3QpID09PSBcIltvYmplY3QgU3RyaW5nXVwiO1xyXG5cdH1cclxuXHR2YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKG9iamVjdCkge1xyXG5cdFx0cmV0dXJuIHR5cGUuY2FsbChvYmplY3QpID09PSBcIltvYmplY3QgQXJyYXldXCI7XHJcblx0fTtcclxuXHR2YXIgdHlwZSA9IHt9LnRvU3RyaW5nO1xyXG5cdHZhciBwYXJzZXIgPSAvKD86KF58I3xcXC4pKFteI1xcLlxcW1xcXV0rKSl8KFxcWy4rP1xcXSkvZywgYXR0clBhcnNlciA9IC9cXFsoLis/KSg/Oj0oXCJ8J3wpKC4qPylcXDIpP1xcXS87XHJcblx0dmFyIHZvaWRFbGVtZW50cyA9IC9eKEFSRUF8QkFTRXxCUnxDT0x8Q09NTUFORHxFTUJFRHxIUnxJTUd8SU5QVVR8S0VZR0VOfExJTkt8TUVUQXxQQVJBTXxTT1VSQ0V8VFJBQ0t8V0JSKSQvO1xyXG5cdHZhciBub29wID0gZnVuY3Rpb24gKCkge307XHJcblxyXG5cdC8vIGNhY2hpbmcgY29tbW9ubHkgdXNlZCB2YXJpYWJsZXNcclxuXHR2YXIgJGRvY3VtZW50LCAkbG9jYXRpb24sICRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUsICRjYW5jZWxBbmltYXRpb25GcmFtZTtcclxuXHJcblx0Ly8gc2VsZiBpbnZva2luZyBmdW5jdGlvbiBuZWVkZWQgYmVjYXVzZSBvZiB0aGUgd2F5IG1vY2tzIHdvcmtcclxuXHRmdW5jdGlvbiBpbml0aWFsaXplKHdpbmRvdykge1xyXG5cdFx0JGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xyXG5cdFx0JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uO1xyXG5cdFx0JGNhbmNlbEFuaW1hdGlvbkZyYW1lID0gd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy5jbGVhclRpbWVvdXQ7XHJcblx0XHQkcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cuc2V0VGltZW91dDtcclxuXHR9XHJcblxyXG5cdGluaXRpYWxpemUod2luZG93KTtcclxuXHJcblx0bS52ZXJzaW9uID0gZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gVkVSU0lPTjtcclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBAdHlwZWRlZiB7U3RyaW5nfSBUYWdcclxuXHQgKiBBIHN0cmluZyB0aGF0IGxvb2tzIGxpa2UgLT4gZGl2LmNsYXNzbmFtZSNpZFtwYXJhbT1vbmVdW3BhcmFtMj10d29dXHJcblx0ICogV2hpY2ggZGVzY3JpYmVzIGEgRE9NIG5vZGVcclxuXHQgKi9cclxuXHJcblx0LyoqXHJcblx0ICpcclxuXHQgKiBAcGFyYW0ge1RhZ30gVGhlIERPTSBub2RlIHRhZ1xyXG5cdCAqIEBwYXJhbSB7T2JqZWN0PVtdfSBvcHRpb25hbCBrZXktdmFsdWUgcGFpcnMgdG8gYmUgbWFwcGVkIHRvIERPTSBhdHRyc1xyXG5cdCAqIEBwYXJhbSB7Li4ubU5vZGU9W119IFplcm8gb3IgbW9yZSBNaXRocmlsIGNoaWxkIG5vZGVzLiBDYW4gYmUgYW4gYXJyYXksIG9yIHNwbGF0IChvcHRpb25hbClcclxuXHQgKlxyXG5cdCAqL1xyXG5cdGZ1bmN0aW9uIG0odGFnLCBwYWlycykge1xyXG5cdFx0Zm9yICh2YXIgYXJncyA9IFtdLCBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcclxuXHRcdH1cclxuXHRcdGlmIChpc09iamVjdCh0YWcpKSByZXR1cm4gcGFyYW1ldGVyaXplKHRhZywgYXJncyk7XHJcblx0XHR2YXIgaGFzQXR0cnMgPSBwYWlycyAhPSBudWxsICYmIGlzT2JqZWN0KHBhaXJzKSAmJiAhKFwidGFnXCIgaW4gcGFpcnMgfHwgXCJ2aWV3XCIgaW4gcGFpcnMgfHwgXCJzdWJ0cmVlXCIgaW4gcGFpcnMpO1xyXG5cdFx0dmFyIGF0dHJzID0gaGFzQXR0cnMgPyBwYWlycyA6IHt9O1xyXG5cdFx0dmFyIGNsYXNzQXR0ck5hbWUgPSBcImNsYXNzXCIgaW4gYXR0cnMgPyBcImNsYXNzXCIgOiBcImNsYXNzTmFtZVwiO1xyXG5cdFx0dmFyIGNlbGwgPSB7dGFnOiBcImRpdlwiLCBhdHRyczoge319O1xyXG5cdFx0dmFyIG1hdGNoLCBjbGFzc2VzID0gW107XHJcblx0XHRpZiAoIWlzU3RyaW5nKHRhZykpIHRocm93IG5ldyBFcnJvcihcInNlbGVjdG9yIGluIG0oc2VsZWN0b3IsIGF0dHJzLCBjaGlsZHJlbikgc2hvdWxkIGJlIGEgc3RyaW5nXCIpO1xyXG5cdFx0d2hpbGUgKChtYXRjaCA9IHBhcnNlci5leGVjKHRhZykpICE9IG51bGwpIHtcclxuXHRcdFx0aWYgKG1hdGNoWzFdID09PSBcIlwiICYmIG1hdGNoWzJdKSBjZWxsLnRhZyA9IG1hdGNoWzJdO1xyXG5cdFx0XHRlbHNlIGlmIChtYXRjaFsxXSA9PT0gXCIjXCIpIGNlbGwuYXR0cnMuaWQgPSBtYXRjaFsyXTtcclxuXHRcdFx0ZWxzZSBpZiAobWF0Y2hbMV0gPT09IFwiLlwiKSBjbGFzc2VzLnB1c2gobWF0Y2hbMl0pO1xyXG5cdFx0XHRlbHNlIGlmIChtYXRjaFszXVswXSA9PT0gXCJbXCIpIHtcclxuXHRcdFx0XHR2YXIgcGFpciA9IGF0dHJQYXJzZXIuZXhlYyhtYXRjaFszXSk7XHJcblx0XHRcdFx0Y2VsbC5hdHRyc1twYWlyWzFdXSA9IHBhaXJbM10gfHwgKHBhaXJbMl0gPyBcIlwiIDp0cnVlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBjaGlsZHJlbiA9IGhhc0F0dHJzID8gYXJncy5zbGljZSgxKSA6IGFyZ3M7XHJcblx0XHRpZiAoY2hpbGRyZW4ubGVuZ3RoID09PSAxICYmIGlzQXJyYXkoY2hpbGRyZW5bMF0pKSB7XHJcblx0XHRcdGNlbGwuY2hpbGRyZW4gPSBjaGlsZHJlblswXTtcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHRjZWxsLmNoaWxkcmVuID0gY2hpbGRyZW47XHJcblx0XHR9XHJcblxyXG5cdFx0Zm9yICh2YXIgYXR0ck5hbWUgaW4gYXR0cnMpIHtcclxuXHRcdFx0aWYgKGF0dHJzLmhhc093blByb3BlcnR5KGF0dHJOYW1lKSkge1xyXG5cdFx0XHRcdGlmIChhdHRyTmFtZSA9PT0gY2xhc3NBdHRyTmFtZSAmJiBhdHRyc1thdHRyTmFtZV0gIT0gbnVsbCAmJiBhdHRyc1thdHRyTmFtZV0gIT09IFwiXCIpIHtcclxuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChhdHRyc1thdHRyTmFtZV0pO1xyXG5cdFx0XHRcdFx0Y2VsbC5hdHRyc1thdHRyTmFtZV0gPSBcIlwiOyAvL2NyZWF0ZSBrZXkgaW4gY29ycmVjdCBpdGVyYXRpb24gb3JkZXJcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZSBjZWxsLmF0dHJzW2F0dHJOYW1lXSA9IGF0dHJzW2F0dHJOYW1lXTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0aWYgKGNsYXNzZXMubGVuZ3RoKSBjZWxsLmF0dHJzW2NsYXNzQXR0ck5hbWVdID0gY2xhc3Nlcy5qb2luKFwiIFwiKTtcclxuXHJcblx0XHRyZXR1cm4gY2VsbDtcclxuXHR9XHJcblx0ZnVuY3Rpb24gZm9yRWFjaChsaXN0LCBmKSB7XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoICYmICFmKGxpc3RbaV0sIGkrKyk7KSB7fVxyXG5cdH1cclxuXHRmdW5jdGlvbiBmb3JLZXlzKGxpc3QsIGYpIHtcclxuXHRcdGZvckVhY2gobGlzdCwgZnVuY3Rpb24gKGF0dHJzLCBpKSB7XHJcblx0XHRcdHJldHVybiAoYXR0cnMgPSBhdHRycyAmJiBhdHRycy5hdHRycykgJiYgYXR0cnMua2V5ICE9IG51bGwgJiYgZihhdHRycywgaSk7XHJcblx0XHR9KTtcclxuXHR9XHJcblx0Ly8gVGhpcyBmdW5jdGlvbiB3YXMgY2F1c2luZyBkZW9wdHMgaW4gQ2hyb21lLlxyXG5cdGZ1bmN0aW9uIGRhdGFUb1N0cmluZyhkYXRhKSB7XHJcblx0XHQvL2RhdGEudG9TdHJpbmcoKSBtaWdodCB0aHJvdyBvciByZXR1cm4gbnVsbCBpZiBkYXRhIGlzIHRoZSByZXR1cm4gdmFsdWUgb2YgQ29uc29sZS5sb2cgaW4gRmlyZWZveCAoYmVoYXZpb3IgZGVwZW5kcyBvbiB2ZXJzaW9uKVxyXG5cdFx0dHJ5IHtcclxuXHRcdFx0aWYgKGRhdGEgPT0gbnVsbCB8fCBkYXRhLnRvU3RyaW5nKCkgPT0gbnVsbCkgcmV0dXJuIFwiXCI7XHJcblx0XHR9IGNhdGNoIChlKSB7XHJcblx0XHRcdHJldHVybiBcIlwiO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIGRhdGE7XHJcblx0fVxyXG5cdC8vIFRoaXMgZnVuY3Rpb24gd2FzIGNhdXNpbmcgZGVvcHRzIGluIENocm9tZS5cclxuXHRmdW5jdGlvbiBpbmplY3RUZXh0Tm9kZShwYXJlbnRFbGVtZW50LCBmaXJzdCwgaW5kZXgsIGRhdGEpIHtcclxuXHRcdHRyeSB7XHJcblx0XHRcdGluc2VydE5vZGUocGFyZW50RWxlbWVudCwgZmlyc3QsIGluZGV4KTtcclxuXHRcdFx0Zmlyc3Qubm9kZVZhbHVlID0gZGF0YTtcclxuXHRcdH0gY2F0Y2ggKGUpIHt9IC8vSUUgZXJyb25lb3VzbHkgdGhyb3dzIGVycm9yIHdoZW4gYXBwZW5kaW5nIGFuIGVtcHR5IHRleHQgbm9kZSBhZnRlciBhIG51bGxcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGZsYXR0ZW4obGlzdCkge1xyXG5cdFx0Ly9yZWN1cnNpdmVseSBmbGF0dGVuIGFycmF5XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0aWYgKGlzQXJyYXkobGlzdFtpXSkpIHtcclxuXHRcdFx0XHRsaXN0ID0gbGlzdC5jb25jYXQuYXBwbHkoW10sIGxpc3QpO1xyXG5cdFx0XHRcdC8vY2hlY2sgY3VycmVudCBpbmRleCBhZ2FpbiBhbmQgZmxhdHRlbiB1bnRpbCB0aGVyZSBhcmUgbm8gbW9yZSBuZXN0ZWQgYXJyYXlzIGF0IHRoYXQgaW5kZXhcclxuXHRcdFx0XHRpLS07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBsaXN0O1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gaW5zZXJ0Tm9kZShwYXJlbnRFbGVtZW50LCBub2RlLCBpbmRleCkge1xyXG5cdFx0cGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUobm9kZSwgcGFyZW50RWxlbWVudC5jaGlsZE5vZGVzW2luZGV4XSB8fCBudWxsKTtcclxuXHR9XHJcblxyXG5cdHZhciBERUxFVElPTiA9IDEsIElOU0VSVElPTiA9IDIsIE1PVkUgPSAzO1xyXG5cclxuXHRmdW5jdGlvbiBoYW5kbGVLZXlzRGlmZmVyKGRhdGEsIGV4aXN0aW5nLCBjYWNoZWQsIHBhcmVudEVsZW1lbnQpIHtcclxuXHRcdGZvcktleXMoZGF0YSwgZnVuY3Rpb24gKGtleSwgaSkge1xyXG5cdFx0XHRleGlzdGluZ1trZXkgPSBrZXkua2V5XSA9IGV4aXN0aW5nW2tleV0gPyB7XHJcblx0XHRcdFx0YWN0aW9uOiBNT1ZFLFxyXG5cdFx0XHRcdGluZGV4OiBpLFxyXG5cdFx0XHRcdGZyb206IGV4aXN0aW5nW2tleV0uaW5kZXgsXHJcblx0XHRcdFx0ZWxlbWVudDogY2FjaGVkLm5vZGVzW2V4aXN0aW5nW2tleV0uaW5kZXhdIHx8ICRkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXHJcblx0XHRcdH0gOiB7YWN0aW9uOiBJTlNFUlRJT04sIGluZGV4OiBpfTtcclxuXHRcdH0pO1xyXG5cdFx0dmFyIGFjdGlvbnMgPSBbXTtcclxuXHRcdGZvciAodmFyIHByb3AgaW4gZXhpc3RpbmcpIGFjdGlvbnMucHVzaChleGlzdGluZ1twcm9wXSk7XHJcblx0XHR2YXIgY2hhbmdlcyA9IGFjdGlvbnMuc29ydChzb3J0Q2hhbmdlcyksIG5ld0NhY2hlZCA9IG5ldyBBcnJheShjYWNoZWQubGVuZ3RoKTtcclxuXHRcdG5ld0NhY2hlZC5ub2RlcyA9IGNhY2hlZC5ub2Rlcy5zbGljZSgpO1xyXG5cclxuXHRcdGZvckVhY2goY2hhbmdlcywgZnVuY3Rpb24gKGNoYW5nZSkge1xyXG5cdFx0XHR2YXIgaW5kZXggPSBjaGFuZ2UuaW5kZXg7XHJcblx0XHRcdGlmIChjaGFuZ2UuYWN0aW9uID09PSBERUxFVElPTikge1xyXG5cdFx0XHRcdGNsZWFyKGNhY2hlZFtpbmRleF0ubm9kZXMsIGNhY2hlZFtpbmRleF0pO1xyXG5cdFx0XHRcdG5ld0NhY2hlZC5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChjaGFuZ2UuYWN0aW9uID09PSBJTlNFUlRJT04pIHtcclxuXHRcdFx0XHR2YXIgZHVtbXkgPSAkZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuXHRcdFx0XHRkdW1teS5rZXkgPSBkYXRhW2luZGV4XS5hdHRycy5rZXk7XHJcblx0XHRcdFx0aW5zZXJ0Tm9kZShwYXJlbnRFbGVtZW50LCBkdW1teSwgaW5kZXgpO1xyXG5cdFx0XHRcdG5ld0NhY2hlZC5zcGxpY2UoaW5kZXgsIDAsIHtcclxuXHRcdFx0XHRcdGF0dHJzOiB7a2V5OiBkYXRhW2luZGV4XS5hdHRycy5rZXl9LFxyXG5cdFx0XHRcdFx0bm9kZXM6IFtkdW1teV1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRuZXdDYWNoZWQubm9kZXNbaW5kZXhdID0gZHVtbXk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmIChjaGFuZ2UuYWN0aW9uID09PSBNT1ZFKSB7XHJcblx0XHRcdFx0dmFyIGNoYW5nZUVsZW1lbnQgPSBjaGFuZ2UuZWxlbWVudDtcclxuXHRcdFx0XHR2YXIgbWF5YmVDaGFuZ2VkID0gcGFyZW50RWxlbWVudC5jaGlsZE5vZGVzW2luZGV4XTtcclxuXHRcdFx0XHRpZiAobWF5YmVDaGFuZ2VkICE9PSBjaGFuZ2VFbGVtZW50ICYmIGNoYW5nZUVsZW1lbnQgIT09IG51bGwpIHtcclxuXHRcdFx0XHRcdHBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKGNoYW5nZUVsZW1lbnQsIG1heWJlQ2hhbmdlZCB8fCBudWxsKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0bmV3Q2FjaGVkW2luZGV4XSA9IGNhY2hlZFtjaGFuZ2UuZnJvbV07XHJcblx0XHRcdFx0bmV3Q2FjaGVkLm5vZGVzW2luZGV4XSA9IGNoYW5nZUVsZW1lbnQ7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cclxuXHRcdHJldHVybiBuZXdDYWNoZWQ7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkaWZmS2V5cyhkYXRhLCBjYWNoZWQsIGV4aXN0aW5nLCBwYXJlbnRFbGVtZW50KSB7XHJcblx0XHR2YXIga2V5c0RpZmZlciA9IGRhdGEubGVuZ3RoICE9PSBjYWNoZWQubGVuZ3RoO1xyXG5cdFx0aWYgKCFrZXlzRGlmZmVyKSB7XHJcblx0XHRcdGZvcktleXMoZGF0YSwgZnVuY3Rpb24gKGF0dHJzLCBpKSB7XHJcblx0XHRcdFx0dmFyIGNhY2hlZENlbGwgPSBjYWNoZWRbaV07XHJcblx0XHRcdFx0cmV0dXJuIGtleXNEaWZmZXIgPSBjYWNoZWRDZWxsICYmIGNhY2hlZENlbGwuYXR0cnMgJiYgY2FjaGVkQ2VsbC5hdHRycy5rZXkgIT09IGF0dHJzLmtleTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGtleXNEaWZmZXIgPyBoYW5kbGVLZXlzRGlmZmVyKGRhdGEsIGV4aXN0aW5nLCBjYWNoZWQsIHBhcmVudEVsZW1lbnQpIDogY2FjaGVkO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gZGlmZkFycmF5KGRhdGEsIGNhY2hlZCwgbm9kZXMpIHtcclxuXHRcdC8vZGlmZiB0aGUgYXJyYXkgaXRzZWxmXHJcblxyXG5cdFx0Ly91cGRhdGUgdGhlIGxpc3Qgb2YgRE9NIG5vZGVzIGJ5IGNvbGxlY3RpbmcgdGhlIG5vZGVzIGZyb20gZWFjaCBpdGVtXHJcblx0XHRmb3JFYWNoKGRhdGEsIGZ1bmN0aW9uIChfLCBpKSB7XHJcblx0XHRcdGlmIChjYWNoZWRbaV0gIT0gbnVsbCkgbm9kZXMucHVzaC5hcHBseShub2RlcywgY2FjaGVkW2ldLm5vZGVzKTtcclxuXHRcdH0pXHJcblx0XHQvL3JlbW92ZSBpdGVtcyBmcm9tIHRoZSBlbmQgb2YgdGhlIGFycmF5IGlmIHRoZSBuZXcgYXJyYXkgaXMgc2hvcnRlciB0aGFuIHRoZSBvbGQgb25lLiBpZiBlcnJvcnMgZXZlciBoYXBwZW4gaGVyZSwgdGhlIGlzc3VlIGlzIG1vc3QgbGlrZWx5XHJcblx0XHQvL2EgYnVnIGluIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlIGBjYWNoZWRgIGRhdGEgc3RydWN0dXJlIHNvbWV3aGVyZSBlYXJsaWVyIGluIHRoZSBwcm9ncmFtXHJcblx0XHRmb3JFYWNoKGNhY2hlZC5ub2RlcywgZnVuY3Rpb24gKG5vZGUsIGkpIHtcclxuXHRcdFx0aWYgKG5vZGUucGFyZW50Tm9kZSAhPSBudWxsICYmIG5vZGVzLmluZGV4T2Yobm9kZSkgPCAwKSBjbGVhcihbbm9kZV0sIFtjYWNoZWRbaV1dKTtcclxuXHRcdH0pXHJcblx0XHRpZiAoZGF0YS5sZW5ndGggPCBjYWNoZWQubGVuZ3RoKSBjYWNoZWQubGVuZ3RoID0gZGF0YS5sZW5ndGg7XHJcblx0XHRjYWNoZWQubm9kZXMgPSBub2RlcztcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGJ1aWxkQXJyYXlLZXlzKGRhdGEpIHtcclxuXHRcdHZhciBndWlkID0gMDtcclxuXHRcdGZvcktleXMoZGF0YSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRmb3JFYWNoKGRhdGEsIGZ1bmN0aW9uIChhdHRycykge1xyXG5cdFx0XHRcdGlmICgoYXR0cnMgPSBhdHRycyAmJiBhdHRycy5hdHRycykgJiYgYXR0cnMua2V5ID09IG51bGwpIGF0dHJzLmtleSA9IFwiX19taXRocmlsX19cIiArIGd1aWQrKztcclxuXHRcdFx0fSlcclxuXHRcdFx0cmV0dXJuIDE7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIG1heWJlUmVjcmVhdGVPYmplY3QoZGF0YSwgY2FjaGVkLCBkYXRhQXR0cktleXMpIHtcclxuXHRcdC8vaWYgYW4gZWxlbWVudCBpcyBkaWZmZXJlbnQgZW5vdWdoIGZyb20gdGhlIG9uZSBpbiBjYWNoZSwgcmVjcmVhdGUgaXRcclxuXHRcdGlmIChkYXRhLnRhZyAhPT0gY2FjaGVkLnRhZyB8fFxyXG5cdFx0XHRcdGRhdGFBdHRyS2V5cy5zb3J0KCkuam9pbigpICE9PSBPYmplY3Qua2V5cyhjYWNoZWQuYXR0cnMpLnNvcnQoKS5qb2luKCkgfHxcclxuXHRcdFx0XHRkYXRhLmF0dHJzLmlkICE9PSBjYWNoZWQuYXR0cnMuaWQgfHxcclxuXHRcdFx0XHRkYXRhLmF0dHJzLmtleSAhPT0gY2FjaGVkLmF0dHJzLmtleSB8fFxyXG5cdFx0XHRcdChtLnJlZHJhdy5zdHJhdGVneSgpID09PSBcImFsbFwiICYmICghY2FjaGVkLmNvbmZpZ0NvbnRleHQgfHwgY2FjaGVkLmNvbmZpZ0NvbnRleHQucmV0YWluICE9PSB0cnVlKSkgfHxcclxuXHRcdFx0XHQobS5yZWRyYXcuc3RyYXRlZ3koKSA9PT0gXCJkaWZmXCIgJiYgY2FjaGVkLmNvbmZpZ0NvbnRleHQgJiYgY2FjaGVkLmNvbmZpZ0NvbnRleHQucmV0YWluID09PSBmYWxzZSkpIHtcclxuXHRcdFx0aWYgKGNhY2hlZC5ub2Rlcy5sZW5ndGgpIGNsZWFyKGNhY2hlZC5ub2Rlcyk7XHJcblx0XHRcdGlmIChjYWNoZWQuY29uZmlnQ29udGV4dCAmJiBpc0Z1bmN0aW9uKGNhY2hlZC5jb25maWdDb250ZXh0Lm9udW5sb2FkKSkgY2FjaGVkLmNvbmZpZ0NvbnRleHQub251bmxvYWQoKTtcclxuXHRcdFx0aWYgKGNhY2hlZC5jb250cm9sbGVycykge1xyXG5cdFx0XHRcdGZvckVhY2goY2FjaGVkLmNvbnRyb2xsZXJzLCBmdW5jdGlvbiAoY29udHJvbGxlcikge1xyXG5cdFx0XHRcdFx0aWYgKGNvbnRyb2xsZXIudW5sb2FkKSBjb250cm9sbGVyLm9udW5sb2FkKHtwcmV2ZW50RGVmYXVsdDogbm9vcH0pO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBnZXRPYmplY3ROYW1lc3BhY2UoZGF0YSwgbmFtZXNwYWNlKSB7XHJcblx0XHRyZXR1cm4gZGF0YS5hdHRycy54bWxucyA/IGRhdGEuYXR0cnMueG1sbnMgOlxyXG5cdFx0XHRkYXRhLnRhZyA9PT0gXCJzdmdcIiA/IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiA6XHJcblx0XHRcdGRhdGEudGFnID09PSBcIm1hdGhcIiA/IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiIDpcclxuXHRcdFx0bmFtZXNwYWNlO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gdW5sb2FkQ2FjaGVkQ29udHJvbGxlcnMoY2FjaGVkLCB2aWV3cywgY29udHJvbGxlcnMpIHtcclxuXHRcdGlmIChjb250cm9sbGVycy5sZW5ndGgpIHtcclxuXHRcdFx0Y2FjaGVkLnZpZXdzID0gdmlld3M7XHJcblx0XHRcdGNhY2hlZC5jb250cm9sbGVycyA9IGNvbnRyb2xsZXJzO1xyXG5cdFx0XHRmb3JFYWNoKGNvbnRyb2xsZXJzLCBmdW5jdGlvbiAoY29udHJvbGxlcikge1xyXG5cdFx0XHRcdGlmIChjb250cm9sbGVyLm9udW5sb2FkICYmIGNvbnRyb2xsZXIub251bmxvYWQuJG9sZCkgY29udHJvbGxlci5vbnVubG9hZCA9IGNvbnRyb2xsZXIub251bmxvYWQuJG9sZDtcclxuXHRcdFx0XHRpZiAocGVuZGluZ1JlcXVlc3RzICYmIGNvbnRyb2xsZXIub251bmxvYWQpIHtcclxuXHRcdFx0XHRcdHZhciBvbnVubG9hZCA9IGNvbnRyb2xsZXIub251bmxvYWQ7XHJcblx0XHRcdFx0XHRjb250cm9sbGVyLm9udW5sb2FkID0gbm9vcDtcclxuXHRcdFx0XHRcdGNvbnRyb2xsZXIub251bmxvYWQuJG9sZCA9IG9udW5sb2FkO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBzY2hlZHVsZUNvbmZpZ3NUb0JlQ2FsbGVkKGNvbmZpZ3MsIGRhdGEsIG5vZGUsIGlzTmV3LCBjYWNoZWQpIHtcclxuXHRcdC8vc2NoZWR1bGUgY29uZmlncyB0byBiZSBjYWxsZWQuIFRoZXkgYXJlIGNhbGxlZCBhZnRlciBgYnVpbGRgXHJcblx0XHQvL2ZpbmlzaGVzIHJ1bm5pbmdcclxuXHRcdGlmIChpc0Z1bmN0aW9uKGRhdGEuYXR0cnMuY29uZmlnKSkge1xyXG5cdFx0XHR2YXIgY29udGV4dCA9IGNhY2hlZC5jb25maWdDb250ZXh0ID0gY2FjaGVkLmNvbmZpZ0NvbnRleHQgfHwge307XHJcblxyXG5cdFx0XHQvL2JpbmRcclxuXHRcdFx0Y29uZmlncy5wdXNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBkYXRhLmF0dHJzLmNvbmZpZy5jYWxsKGRhdGEsIG5vZGUsICFpc05ldywgY29udGV4dCwgY2FjaGVkKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBidWlsZFVwZGF0ZWROb2RlKGNhY2hlZCwgZGF0YSwgZWRpdGFibGUsIGhhc0tleXMsIG5hbWVzcGFjZSwgdmlld3MsIGNvbmZpZ3MsIGNvbnRyb2xsZXJzKSB7XHJcblx0XHR2YXIgbm9kZSA9IGNhY2hlZC5ub2Rlc1swXTtcclxuXHRcdGlmIChoYXNLZXlzKSBzZXRBdHRyaWJ1dGVzKG5vZGUsIGRhdGEudGFnLCBkYXRhLmF0dHJzLCBjYWNoZWQuYXR0cnMsIG5hbWVzcGFjZSk7XHJcblx0XHRjYWNoZWQuY2hpbGRyZW4gPSBidWlsZChub2RlLCBkYXRhLnRhZywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGRhdGEuY2hpbGRyZW4sIGNhY2hlZC5jaGlsZHJlbiwgZmFsc2UsIDAsIGRhdGEuYXR0cnMuY29udGVudGVkaXRhYmxlID8gbm9kZSA6IGVkaXRhYmxlLCBuYW1lc3BhY2UsIGNvbmZpZ3MpO1xyXG5cdFx0Y2FjaGVkLm5vZGVzLmludGFjdCA9IHRydWU7XHJcblxyXG5cdFx0aWYgKGNvbnRyb2xsZXJzLmxlbmd0aCkge1xyXG5cdFx0XHRjYWNoZWQudmlld3MgPSB2aWV3cztcclxuXHRcdFx0Y2FjaGVkLmNvbnRyb2xsZXJzID0gY29udHJvbGxlcnM7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIG5vZGU7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBoYW5kbGVOb25leGlzdGVudE5vZGVzKGRhdGEsIHBhcmVudEVsZW1lbnQsIGluZGV4KSB7XHJcblx0XHR2YXIgbm9kZXM7XHJcblx0XHRpZiAoZGF0YS4kdHJ1c3RlZCkge1xyXG5cdFx0XHRub2RlcyA9IGluamVjdEhUTUwocGFyZW50RWxlbWVudCwgaW5kZXgsIGRhdGEpO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdG5vZGVzID0gWyRkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShkYXRhKV07XHJcblx0XHRcdGlmICghcGFyZW50RWxlbWVudC5ub2RlTmFtZS5tYXRjaCh2b2lkRWxlbWVudHMpKSBpbnNlcnROb2RlKHBhcmVudEVsZW1lbnQsIG5vZGVzWzBdLCBpbmRleCk7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGNhY2hlZCA9IHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiIHx8IHR5cGVvZiBkYXRhID09PSBcIm51bWJlclwiIHx8IHR5cGVvZiBkYXRhID09PSBcImJvb2xlYW5cIiA/IG5ldyBkYXRhLmNvbnN0cnVjdG9yKGRhdGEpIDogZGF0YTtcclxuXHRcdGNhY2hlZC5ub2RlcyA9IG5vZGVzO1xyXG5cdFx0cmV0dXJuIGNhY2hlZDtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHJlYXR0YWNoTm9kZXMoZGF0YSwgY2FjaGVkLCBwYXJlbnRFbGVtZW50LCBlZGl0YWJsZSwgaW5kZXgsIHBhcmVudFRhZykge1xyXG5cdFx0dmFyIG5vZGVzID0gY2FjaGVkLm5vZGVzO1xyXG5cdFx0aWYgKCFlZGl0YWJsZSB8fCBlZGl0YWJsZSAhPT0gJGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHtcclxuXHRcdFx0aWYgKGRhdGEuJHRydXN0ZWQpIHtcclxuXHRcdFx0XHRjbGVhcihub2RlcywgY2FjaGVkKVxyXG5cdFx0XHRcdG5vZGVzID0gaW5qZWN0SFRNTChwYXJlbnRFbGVtZW50LCBpbmRleCwgZGF0YSlcclxuXHRcdFx0fSBlbHNlIGlmIChwYXJlbnRUYWcgPT09IFwidGV4dGFyZWFcIikge1xyXG5cdFx0XHRcdC8vIDx0ZXh0YXJlYT4gdXNlcyBgdmFsdWVgIGluc3RlYWQgb2YgYG5vZGVWYWx1ZWAuXHJcblx0XHRcdFx0cGFyZW50RWxlbWVudC52YWx1ZSA9IGRhdGFcclxuXHRcdFx0fSBlbHNlIGlmIChlZGl0YWJsZSkge1xyXG5cdFx0XHRcdC8vIGNvbnRlbnRlZGl0YWJsZSBub2RlcyB1c2UgYGlubmVySFRNTGAgaW5zdGVhZCBvZiBgbm9kZVZhbHVlYC5cclxuXHRcdFx0XHRlZGl0YWJsZS5pbm5lckhUTUwgPSBkYXRhXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0Ly8gd2FzIGEgdHJ1c3RlZCBzdHJpbmdcclxuXHRcdFx0XHRpZiAobm9kZXNbMF0ubm9kZVR5cGUgPT09IDEgfHwgbm9kZXMubGVuZ3RoID4gMSB8fCAobm9kZXNbMF0ubm9kZVZhbHVlLnRyaW0gJiYgIW5vZGVzWzBdLm5vZGVWYWx1ZS50cmltKCkpKSB7XHJcblx0XHRcdFx0XHRjbGVhcihjYWNoZWQubm9kZXMsIGNhY2hlZClcclxuXHRcdFx0XHRcdG5vZGVzID0gWyRkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShkYXRhKV1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aW5qZWN0VGV4dE5vZGUocGFyZW50RWxlbWVudCwgbm9kZXNbMF0sIGluZGV4LCBkYXRhKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Y2FjaGVkID0gbmV3IGRhdGEuY29uc3RydWN0b3IoZGF0YSk7XHJcblx0XHRjYWNoZWQubm9kZXMgPSBub2RlcztcclxuXHRcdHJldHVybiBjYWNoZWQ7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBoYW5kbGVUZXh0KGNhY2hlZCwgZGF0YSwgaW5kZXgsIHBhcmVudEVsZW1lbnQsIHNob3VsZFJlYXR0YWNoLCBlZGl0YWJsZSwgcGFyZW50VGFnKSB7XHJcblx0XHQvL2hhbmRsZSB0ZXh0IG5vZGVzXHJcblx0XHRyZXR1cm4gY2FjaGVkLm5vZGVzLmxlbmd0aCA9PT0gMCA/IGhhbmRsZU5vbmV4aXN0ZW50Tm9kZXMoZGF0YSwgcGFyZW50RWxlbWVudCwgaW5kZXgpIDpcclxuXHRcdFx0Y2FjaGVkLnZhbHVlT2YoKSAhPT0gZGF0YS52YWx1ZU9mKCkgfHwgc2hvdWxkUmVhdHRhY2ggPT09IHRydWUgP1xyXG5cdFx0XHRcdHJlYXR0YWNoTm9kZXMoZGF0YSwgY2FjaGVkLCBwYXJlbnRFbGVtZW50LCBlZGl0YWJsZSwgaW5kZXgsIHBhcmVudFRhZykgOlxyXG5cdFx0XHQoY2FjaGVkLm5vZGVzLmludGFjdCA9IHRydWUsIGNhY2hlZCk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBnZXRTdWJBcnJheUNvdW50KGl0ZW0pIHtcclxuXHRcdGlmIChpdGVtLiR0cnVzdGVkKSB7XHJcblx0XHRcdC8vZml4IG9mZnNldCBvZiBuZXh0IGVsZW1lbnQgaWYgaXRlbSB3YXMgYSB0cnVzdGVkIHN0cmluZyB3LyBtb3JlIHRoYW4gb25lIGh0bWwgZWxlbWVudFxyXG5cdFx0XHQvL3RoZSBmaXJzdCBjbGF1c2UgaW4gdGhlIHJlZ2V4cCBtYXRjaGVzIGVsZW1lbnRzXHJcblx0XHRcdC8vdGhlIHNlY29uZCBjbGF1c2UgKGFmdGVyIHRoZSBwaXBlKSBtYXRjaGVzIHRleHQgbm9kZXNcclxuXHRcdFx0dmFyIG1hdGNoID0gaXRlbS5tYXRjaCgvPFteXFwvXXxcXD5cXHMqW148XS9nKTtcclxuXHRcdFx0aWYgKG1hdGNoICE9IG51bGwpIHJldHVybiBtYXRjaC5sZW5ndGg7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmIChpc0FycmF5KGl0ZW0pKSB7XHJcblx0XHRcdHJldHVybiBpdGVtLmxlbmd0aDtcclxuXHRcdH1cclxuXHRcdHJldHVybiAxO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gYnVpbGRBcnJheShkYXRhLCBjYWNoZWQsIHBhcmVudEVsZW1lbnQsIGluZGV4LCBwYXJlbnRUYWcsIHNob3VsZFJlYXR0YWNoLCBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKSB7XHJcblx0XHRkYXRhID0gZmxhdHRlbihkYXRhKTtcclxuXHRcdHZhciBub2RlcyA9IFtdLCBpbnRhY3QgPSBjYWNoZWQubGVuZ3RoID09PSBkYXRhLmxlbmd0aCwgc3ViQXJyYXlDb3VudCA9IDA7XHJcblxyXG5cdFx0Ly9rZXlzIGFsZ29yaXRobTogc29ydCBlbGVtZW50cyB3aXRob3V0IHJlY3JlYXRpbmcgdGhlbSBpZiBrZXlzIGFyZSBwcmVzZW50XHJcblx0XHQvLzEpIGNyZWF0ZSBhIG1hcCBvZiBhbGwgZXhpc3Rpbmcga2V5cywgYW5kIG1hcmsgYWxsIGZvciBkZWxldGlvblxyXG5cdFx0Ly8yKSBhZGQgbmV3IGtleXMgdG8gbWFwIGFuZCBtYXJrIHRoZW0gZm9yIGFkZGl0aW9uXHJcblx0XHQvLzMpIGlmIGtleSBleGlzdHMgaW4gbmV3IGxpc3QsIGNoYW5nZSBhY3Rpb24gZnJvbSBkZWxldGlvbiB0byBhIG1vdmVcclxuXHRcdC8vNCkgZm9yIGVhY2gga2V5LCBoYW5kbGUgaXRzIGNvcnJlc3BvbmRpbmcgYWN0aW9uIGFzIG1hcmtlZCBpbiBwcmV2aW91cyBzdGVwc1xyXG5cdFx0dmFyIGV4aXN0aW5nID0ge30sIHNob3VsZE1haW50YWluSWRlbnRpdGllcyA9IGZhbHNlO1xyXG5cdFx0Zm9yS2V5cyhjYWNoZWQsIGZ1bmN0aW9uIChhdHRycywgaSkge1xyXG5cdFx0XHRzaG91bGRNYWludGFpbklkZW50aXRpZXMgPSB0cnVlO1xyXG5cdFx0XHRleGlzdGluZ1tjYWNoZWRbaV0uYXR0cnMua2V5XSA9IHthY3Rpb246IERFTEVUSU9OLCBpbmRleDogaX07XHJcblx0XHR9KTtcclxuXHJcblx0XHRidWlsZEFycmF5S2V5cyhkYXRhKTtcclxuXHRcdGlmIChzaG91bGRNYWludGFpbklkZW50aXRpZXMpIGNhY2hlZCA9IGRpZmZLZXlzKGRhdGEsIGNhY2hlZCwgZXhpc3RpbmcsIHBhcmVudEVsZW1lbnQpO1xyXG5cdFx0Ly9lbmQga2V5IGFsZ29yaXRobVxyXG5cclxuXHRcdHZhciBjYWNoZUNvdW50ID0gMDtcclxuXHRcdC8vZmFzdGVyIGV4cGxpY2l0bHkgd3JpdHRlblxyXG5cdFx0Zm9yICh2YXIgaSA9IDAsIGxlbiA9IGRhdGEubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcclxuXHRcdFx0Ly9kaWZmIGVhY2ggaXRlbSBpbiB0aGUgYXJyYXlcclxuXHRcdFx0dmFyIGl0ZW0gPSBidWlsZChwYXJlbnRFbGVtZW50LCBwYXJlbnRUYWcsIGNhY2hlZCwgaW5kZXgsIGRhdGFbaV0sIGNhY2hlZFtjYWNoZUNvdW50XSwgc2hvdWxkUmVhdHRhY2gsIGluZGV4ICsgc3ViQXJyYXlDb3VudCB8fCBzdWJBcnJheUNvdW50LCBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKTtcclxuXHJcblx0XHRcdGlmIChpdGVtICE9PSB1bmRlZmluZWQpIHtcclxuXHRcdFx0XHRpbnRhY3QgPSBpbnRhY3QgJiYgaXRlbS5ub2Rlcy5pbnRhY3Q7XHJcblx0XHRcdFx0c3ViQXJyYXlDb3VudCArPSBnZXRTdWJBcnJheUNvdW50KGl0ZW0pO1xyXG5cdFx0XHRcdGNhY2hlZFtjYWNoZUNvdW50KytdID0gaXRlbTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmICghaW50YWN0KSBkaWZmQXJyYXkoZGF0YSwgY2FjaGVkLCBub2Rlcyk7XHJcblx0XHRyZXR1cm4gY2FjaGVkXHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBtYWtlQ2FjaGUoZGF0YSwgY2FjaGVkLCBpbmRleCwgcGFyZW50SW5kZXgsIHBhcmVudENhY2hlKSB7XHJcblx0XHRpZiAoY2FjaGVkICE9IG51bGwpIHtcclxuXHRcdFx0aWYgKHR5cGUuY2FsbChjYWNoZWQpID09PSB0eXBlLmNhbGwoZGF0YSkpIHJldHVybiBjYWNoZWQ7XHJcblxyXG5cdFx0XHRpZiAocGFyZW50Q2FjaGUgJiYgcGFyZW50Q2FjaGUubm9kZXMpIHtcclxuXHRcdFx0XHR2YXIgb2Zmc2V0ID0gaW5kZXggLSBwYXJlbnRJbmRleCwgZW5kID0gb2Zmc2V0ICsgKGlzQXJyYXkoZGF0YSkgPyBkYXRhIDogY2FjaGVkLm5vZGVzKS5sZW5ndGg7XHJcblx0XHRcdFx0Y2xlYXIocGFyZW50Q2FjaGUubm9kZXMuc2xpY2Uob2Zmc2V0LCBlbmQpLCBwYXJlbnRDYWNoZS5zbGljZShvZmZzZXQsIGVuZCkpO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGNhY2hlZC5ub2Rlcykge1xyXG5cdFx0XHRcdGNsZWFyKGNhY2hlZC5ub2RlcywgY2FjaGVkKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGNhY2hlZCA9IG5ldyBkYXRhLmNvbnN0cnVjdG9yKCk7XHJcblx0XHQvL2lmIGNvbnN0cnVjdG9yIGNyZWF0ZXMgYSB2aXJ0dWFsIGRvbSBlbGVtZW50LCB1c2UgYSBibGFuayBvYmplY3RcclxuXHRcdC8vYXMgdGhlIGJhc2UgY2FjaGVkIG5vZGUgaW5zdGVhZCBvZiBjb3B5aW5nIHRoZSB2aXJ0dWFsIGVsICgjMjc3KVxyXG5cdFx0aWYgKGNhY2hlZC50YWcpIGNhY2hlZCA9IHt9O1xyXG5cdFx0Y2FjaGVkLm5vZGVzID0gW107XHJcblx0XHRyZXR1cm4gY2FjaGVkO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gY29uc3RydWN0Tm9kZShkYXRhLCBuYW1lc3BhY2UpIHtcclxuXHRcdHJldHVybiBuYW1lc3BhY2UgPT09IHVuZGVmaW5lZCA/XHJcblx0XHRcdGRhdGEuYXR0cnMuaXMgPyAkZG9jdW1lbnQuY3JlYXRlRWxlbWVudChkYXRhLnRhZywgZGF0YS5hdHRycy5pcykgOiAkZG9jdW1lbnQuY3JlYXRlRWxlbWVudChkYXRhLnRhZykgOlxyXG5cdFx0XHRkYXRhLmF0dHJzLmlzID8gJGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhuYW1lc3BhY2UsIGRhdGEudGFnLCBkYXRhLmF0dHJzLmlzKSA6ICRkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMobmFtZXNwYWNlLCBkYXRhLnRhZyk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBjb25zdHJ1Y3RBdHRycyhkYXRhLCBub2RlLCBuYW1lc3BhY2UsIGhhc0tleXMpIHtcclxuXHRcdHJldHVybiBoYXNLZXlzID8gc2V0QXR0cmlidXRlcyhub2RlLCBkYXRhLnRhZywgZGF0YS5hdHRycywge30sIG5hbWVzcGFjZSkgOiBkYXRhLmF0dHJzO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gY29uc3RydWN0Q2hpbGRyZW4oZGF0YSwgbm9kZSwgY2FjaGVkLCBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKSB7XHJcblx0XHRyZXR1cm4gZGF0YS5jaGlsZHJlbiAhPSBudWxsICYmIGRhdGEuY2hpbGRyZW4ubGVuZ3RoID4gMCA/XHJcblx0XHRcdGJ1aWxkKG5vZGUsIGRhdGEudGFnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgZGF0YS5jaGlsZHJlbiwgY2FjaGVkLmNoaWxkcmVuLCB0cnVlLCAwLCBkYXRhLmF0dHJzLmNvbnRlbnRlZGl0YWJsZSA/IG5vZGUgOiBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKSA6XHJcblx0XHRcdGRhdGEuY2hpbGRyZW47XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiByZWNvbnN0cnVjdENhY2hlZChkYXRhLCBhdHRycywgY2hpbGRyZW4sIG5vZGUsIG5hbWVzcGFjZSwgdmlld3MsIGNvbnRyb2xsZXJzKSB7XHJcblx0XHR2YXIgY2FjaGVkID0ge3RhZzogZGF0YS50YWcsIGF0dHJzOiBhdHRycywgY2hpbGRyZW46IGNoaWxkcmVuLCBub2RlczogW25vZGVdfTtcclxuXHRcdHVubG9hZENhY2hlZENvbnRyb2xsZXJzKGNhY2hlZCwgdmlld3MsIGNvbnRyb2xsZXJzKTtcclxuXHRcdGlmIChjYWNoZWQuY2hpbGRyZW4gJiYgIWNhY2hlZC5jaGlsZHJlbi5ub2RlcykgY2FjaGVkLmNoaWxkcmVuLm5vZGVzID0gW107XHJcblx0XHQvL2VkZ2UgY2FzZTogc2V0dGluZyB2YWx1ZSBvbiA8c2VsZWN0PiBkb2Vzbid0IHdvcmsgYmVmb3JlIGNoaWxkcmVuIGV4aXN0LCBzbyBzZXQgaXQgYWdhaW4gYWZ0ZXIgY2hpbGRyZW4gaGF2ZSBiZWVuIGNyZWF0ZWRcclxuXHRcdGlmIChkYXRhLnRhZyA9PT0gXCJzZWxlY3RcIiAmJiBcInZhbHVlXCIgaW4gZGF0YS5hdHRycykgc2V0QXR0cmlidXRlcyhub2RlLCBkYXRhLnRhZywge3ZhbHVlOiBkYXRhLmF0dHJzLnZhbHVlfSwge30sIG5hbWVzcGFjZSk7XHJcblx0XHRyZXR1cm4gY2FjaGVkXHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBnZXRDb250cm9sbGVyKHZpZXdzLCB2aWV3LCBjYWNoZWRDb250cm9sbGVycywgY29udHJvbGxlcikge1xyXG5cdFx0dmFyIGNvbnRyb2xsZXJJbmRleCA9IG0ucmVkcmF3LnN0cmF0ZWd5KCkgPT09IFwiZGlmZlwiICYmIHZpZXdzID8gdmlld3MuaW5kZXhPZih2aWV3KSA6IC0xO1xyXG5cdFx0cmV0dXJuIGNvbnRyb2xsZXJJbmRleCA+IC0xID8gY2FjaGVkQ29udHJvbGxlcnNbY29udHJvbGxlckluZGV4XSA6XHJcblx0XHRcdHR5cGVvZiBjb250cm9sbGVyID09PSBcImZ1bmN0aW9uXCIgPyBuZXcgY29udHJvbGxlcigpIDoge307XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiB1cGRhdGVMaXN0cyh2aWV3cywgY29udHJvbGxlcnMsIHZpZXcsIGNvbnRyb2xsZXIpIHtcclxuXHRcdGlmIChjb250cm9sbGVyLm9udW5sb2FkICE9IG51bGwpIHVubG9hZGVycy5wdXNoKHtjb250cm9sbGVyOiBjb250cm9sbGVyLCBoYW5kbGVyOiBjb250cm9sbGVyLm9udW5sb2FkfSk7XHJcblx0XHR2aWV3cy5wdXNoKHZpZXcpO1xyXG5cdFx0Y29udHJvbGxlcnMucHVzaChjb250cm9sbGVyKTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGNoZWNrVmlldyhkYXRhLCB2aWV3LCBjYWNoZWQsIGNhY2hlZENvbnRyb2xsZXJzLCBjb250cm9sbGVycywgdmlld3MpIHtcclxuXHRcdHZhciBjb250cm9sbGVyID0gZ2V0Q29udHJvbGxlcihjYWNoZWQudmlld3MsIHZpZXcsIGNhY2hlZENvbnRyb2xsZXJzLCBkYXRhLmNvbnRyb2xsZXIpO1xyXG5cdFx0Ly9GYXN0ZXIgdG8gY29lcmNlIHRvIG51bWJlciBhbmQgY2hlY2sgZm9yIE5hTlxyXG5cdFx0dmFyIGtleSA9ICsoZGF0YSAmJiBkYXRhLmF0dHJzICYmIGRhdGEuYXR0cnMua2V5KTtcclxuXHRcdGRhdGEgPSBwZW5kaW5nUmVxdWVzdHMgPT09IDAgfHwgZm9yY2luZyB8fCBjYWNoZWRDb250cm9sbGVycyAmJiBjYWNoZWRDb250cm9sbGVycy5pbmRleE9mKGNvbnRyb2xsZXIpID4gLTEgPyBkYXRhLnZpZXcoY29udHJvbGxlcikgOiB7dGFnOiBcInBsYWNlaG9sZGVyXCJ9O1xyXG5cdFx0aWYgKGRhdGEuc3VidHJlZSA9PT0gXCJyZXRhaW5cIikgcmV0dXJuIGNhY2hlZDtcclxuXHRcdGlmIChrZXkgPT09IGtleSkgKGRhdGEuYXR0cnMgPSBkYXRhLmF0dHJzIHx8IHt9KS5rZXkgPSBrZXk7XHJcblx0XHR1cGRhdGVMaXN0cyh2aWV3cywgY29udHJvbGxlcnMsIHZpZXcsIGNvbnRyb2xsZXIpO1xyXG5cdFx0cmV0dXJuIGRhdGE7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBtYXJrVmlld3MoZGF0YSwgY2FjaGVkLCB2aWV3cywgY29udHJvbGxlcnMpIHtcclxuXHRcdHZhciBjYWNoZWRDb250cm9sbGVycyA9IGNhY2hlZCAmJiBjYWNoZWQuY29udHJvbGxlcnM7XHJcblx0XHR3aGlsZSAoZGF0YS52aWV3ICE9IG51bGwpIGRhdGEgPSBjaGVja1ZpZXcoZGF0YSwgZGF0YS52aWV3LiRvcmlnaW5hbCB8fCBkYXRhLnZpZXcsIGNhY2hlZCwgY2FjaGVkQ29udHJvbGxlcnMsIGNvbnRyb2xsZXJzLCB2aWV3cyk7XHJcblx0XHRyZXR1cm4gZGF0YTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGJ1aWxkT2JqZWN0KGRhdGEsIGNhY2hlZCwgZWRpdGFibGUsIHBhcmVudEVsZW1lbnQsIGluZGV4LCBzaG91bGRSZWF0dGFjaCwgbmFtZXNwYWNlLCBjb25maWdzKSB7XHJcblx0XHR2YXIgdmlld3MgPSBbXSwgY29udHJvbGxlcnMgPSBbXTtcclxuXHRcdGRhdGEgPSBtYXJrVmlld3MoZGF0YSwgY2FjaGVkLCB2aWV3cywgY29udHJvbGxlcnMpO1xyXG5cdFx0aWYgKCFkYXRhLnRhZyAmJiBjb250cm9sbGVycy5sZW5ndGgpIHRocm93IG5ldyBFcnJvcihcIkNvbXBvbmVudCB0ZW1wbGF0ZSBtdXN0IHJldHVybiBhIHZpcnR1YWwgZWxlbWVudCwgbm90IGFuIGFycmF5LCBzdHJpbmcsIGV0Yy5cIik7XHJcblx0XHRkYXRhLmF0dHJzID0gZGF0YS5hdHRycyB8fCB7fTtcclxuXHRcdGNhY2hlZC5hdHRycyA9IGNhY2hlZC5hdHRycyB8fCB7fTtcclxuXHRcdHZhciBkYXRhQXR0cktleXMgPSBPYmplY3Qua2V5cyhkYXRhLmF0dHJzKTtcclxuXHRcdHZhciBoYXNLZXlzID0gZGF0YUF0dHJLZXlzLmxlbmd0aCA+IChcImtleVwiIGluIGRhdGEuYXR0cnMgPyAxIDogMCk7XHJcblx0XHRtYXliZVJlY3JlYXRlT2JqZWN0KGRhdGEsIGNhY2hlZCwgZGF0YUF0dHJLZXlzKTtcclxuXHRcdGlmICghaXNTdHJpbmcoZGF0YS50YWcpKSByZXR1cm47XHJcblx0XHR2YXIgaXNOZXcgPSBjYWNoZWQubm9kZXMubGVuZ3RoID09PSAwO1xyXG5cdFx0bmFtZXNwYWNlID0gZ2V0T2JqZWN0TmFtZXNwYWNlKGRhdGEsIG5hbWVzcGFjZSk7XHJcblx0XHR2YXIgbm9kZTtcclxuXHRcdGlmIChpc05ldykge1xyXG5cdFx0XHRub2RlID0gY29uc3RydWN0Tm9kZShkYXRhLCBuYW1lc3BhY2UpO1xyXG5cdFx0XHQvL3NldCBhdHRyaWJ1dGVzIGZpcnN0LCB0aGVuIGNyZWF0ZSBjaGlsZHJlblxyXG5cdFx0XHR2YXIgYXR0cnMgPSBjb25zdHJ1Y3RBdHRycyhkYXRhLCBub2RlLCBuYW1lc3BhY2UsIGhhc0tleXMpXHJcblx0XHRcdHZhciBjaGlsZHJlbiA9IGNvbnN0cnVjdENoaWxkcmVuKGRhdGEsIG5vZGUsIGNhY2hlZCwgZWRpdGFibGUsIG5hbWVzcGFjZSwgY29uZmlncyk7XHJcblx0XHRcdGNhY2hlZCA9IHJlY29uc3RydWN0Q2FjaGVkKGRhdGEsIGF0dHJzLCBjaGlsZHJlbiwgbm9kZSwgbmFtZXNwYWNlLCB2aWV3cywgY29udHJvbGxlcnMpO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdG5vZGUgPSBidWlsZFVwZGF0ZWROb2RlKGNhY2hlZCwgZGF0YSwgZWRpdGFibGUsIGhhc0tleXMsIG5hbWVzcGFjZSwgdmlld3MsIGNvbmZpZ3MsIGNvbnRyb2xsZXJzKTtcclxuXHRcdH1cclxuXHRcdGlmIChpc05ldyB8fCBzaG91bGRSZWF0dGFjaCA9PT0gdHJ1ZSAmJiBub2RlICE9IG51bGwpIGluc2VydE5vZGUocGFyZW50RWxlbWVudCwgbm9kZSwgaW5kZXgpO1xyXG5cdFx0Ly9zY2hlZHVsZSBjb25maWdzIHRvIGJlIGNhbGxlZC4gVGhleSBhcmUgY2FsbGVkIGFmdGVyIGBidWlsZGBcclxuXHRcdC8vZmluaXNoZXMgcnVubmluZ1xyXG5cdFx0c2NoZWR1bGVDb25maWdzVG9CZUNhbGxlZChjb25maWdzLCBkYXRhLCBub2RlLCBpc05ldywgY2FjaGVkKTtcclxuXHRcdHJldHVybiBjYWNoZWRcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGJ1aWxkKHBhcmVudEVsZW1lbnQsIHBhcmVudFRhZywgcGFyZW50Q2FjaGUsIHBhcmVudEluZGV4LCBkYXRhLCBjYWNoZWQsIHNob3VsZFJlYXR0YWNoLCBpbmRleCwgZWRpdGFibGUsIG5hbWVzcGFjZSwgY29uZmlncykge1xyXG5cdFx0Ly9gYnVpbGRgIGlzIGEgcmVjdXJzaXZlIGZ1bmN0aW9uIHRoYXQgbWFuYWdlcyBjcmVhdGlvbi9kaWZmaW5nL3JlbW92YWxcclxuXHRcdC8vb2YgRE9NIGVsZW1lbnRzIGJhc2VkIG9uIGNvbXBhcmlzb24gYmV0d2VlbiBgZGF0YWAgYW5kIGBjYWNoZWRgXHJcblx0XHQvL3RoZSBkaWZmIGFsZ29yaXRobSBjYW4gYmUgc3VtbWFyaXplZCBhcyB0aGlzOlxyXG5cdFx0Ly8xIC0gY29tcGFyZSBgZGF0YWAgYW5kIGBjYWNoZWRgXHJcblx0XHQvLzIgLSBpZiB0aGV5IGFyZSBkaWZmZXJlbnQsIGNvcHkgYGRhdGFgIHRvIGBjYWNoZWRgIGFuZCB1cGRhdGUgdGhlIERPTVxyXG5cdFx0Ly8gICAgYmFzZWQgb24gd2hhdCB0aGUgZGlmZmVyZW5jZSBpc1xyXG5cdFx0Ly8zIC0gcmVjdXJzaXZlbHkgYXBwbHkgdGhpcyBhbGdvcml0aG0gZm9yIGV2ZXJ5IGFycmF5IGFuZCBmb3IgdGhlXHJcblx0XHQvLyAgICBjaGlsZHJlbiBvZiBldmVyeSB2aXJ0dWFsIGVsZW1lbnRcclxuXHJcblx0XHQvL3RoZSBgY2FjaGVkYCBkYXRhIHN0cnVjdHVyZSBpcyBlc3NlbnRpYWxseSB0aGUgc2FtZSBhcyB0aGUgcHJldmlvdXNcclxuXHRcdC8vcmVkcmF3J3MgYGRhdGFgIGRhdGEgc3RydWN0dXJlLCB3aXRoIGEgZmV3IGFkZGl0aW9uczpcclxuXHRcdC8vLSBgY2FjaGVkYCBhbHdheXMgaGFzIGEgcHJvcGVydHkgY2FsbGVkIGBub2Rlc2AsIHdoaWNoIGlzIGEgbGlzdCBvZlxyXG5cdFx0Ly8gICBET00gZWxlbWVudHMgdGhhdCBjb3JyZXNwb25kIHRvIHRoZSBkYXRhIHJlcHJlc2VudGVkIGJ5IHRoZVxyXG5cdFx0Ly8gICByZXNwZWN0aXZlIHZpcnR1YWwgZWxlbWVudFxyXG5cdFx0Ly8tIGluIG9yZGVyIHRvIHN1cHBvcnQgYXR0YWNoaW5nIGBub2Rlc2AgYXMgYSBwcm9wZXJ0eSBvZiBgY2FjaGVkYCxcclxuXHRcdC8vICAgYGNhY2hlZGAgaXMgKmFsd2F5cyogYSBub24tcHJpbWl0aXZlIG9iamVjdCwgaS5lLiBpZiB0aGUgZGF0YSB3YXNcclxuXHRcdC8vICAgYSBzdHJpbmcsIHRoZW4gY2FjaGVkIGlzIGEgU3RyaW5nIGluc3RhbmNlLiBJZiBkYXRhIHdhcyBgbnVsbGAgb3JcclxuXHRcdC8vICAgYHVuZGVmaW5lZGAsIGNhY2hlZCBpcyBgbmV3IFN0cmluZyhcIlwiKWBcclxuXHRcdC8vLSBgY2FjaGVkIGFsc28gaGFzIGEgYGNvbmZpZ0NvbnRleHRgIHByb3BlcnR5LCB3aGljaCBpcyB0aGUgc3RhdGVcclxuXHRcdC8vICAgc3RvcmFnZSBvYmplY3QgZXhwb3NlZCBieSBjb25maWcoZWxlbWVudCwgaXNJbml0aWFsaXplZCwgY29udGV4dClcclxuXHRcdC8vLSB3aGVuIGBjYWNoZWRgIGlzIGFuIE9iamVjdCwgaXQgcmVwcmVzZW50cyBhIHZpcnR1YWwgZWxlbWVudDsgd2hlblxyXG5cdFx0Ly8gICBpdCdzIGFuIEFycmF5LCBpdCByZXByZXNlbnRzIGEgbGlzdCBvZiBlbGVtZW50czsgd2hlbiBpdCdzIGFcclxuXHRcdC8vICAgU3RyaW5nLCBOdW1iZXIgb3IgQm9vbGVhbiwgaXQgcmVwcmVzZW50cyBhIHRleHQgbm9kZVxyXG5cclxuXHRcdC8vYHBhcmVudEVsZW1lbnRgIGlzIGEgRE9NIGVsZW1lbnQgdXNlZCBmb3IgVzNDIERPTSBBUEkgY2FsbHNcclxuXHRcdC8vYHBhcmVudFRhZ2AgaXMgb25seSB1c2VkIGZvciBoYW5kbGluZyBhIGNvcm5lciBjYXNlIGZvciB0ZXh0YXJlYVxyXG5cdFx0Ly92YWx1ZXNcclxuXHRcdC8vYHBhcmVudENhY2hlYCBpcyB1c2VkIHRvIHJlbW92ZSBub2RlcyBpbiBzb21lIG11bHRpLW5vZGUgY2FzZXNcclxuXHRcdC8vYHBhcmVudEluZGV4YCBhbmQgYGluZGV4YCBhcmUgdXNlZCB0byBmaWd1cmUgb3V0IHRoZSBvZmZzZXQgb2Ygbm9kZXMuXHJcblx0XHQvL1RoZXkncmUgYXJ0aWZhY3RzIGZyb20gYmVmb3JlIGFycmF5cyBzdGFydGVkIGJlaW5nIGZsYXR0ZW5lZCBhbmQgYXJlXHJcblx0XHQvL2xpa2VseSByZWZhY3RvcmFibGVcclxuXHRcdC8vYGRhdGFgIGFuZCBgY2FjaGVkYCBhcmUsIHJlc3BlY3RpdmVseSwgdGhlIG5ldyBhbmQgb2xkIG5vZGVzIGJlaW5nXHJcblx0XHQvL2RpZmZlZFxyXG5cdFx0Ly9gc2hvdWxkUmVhdHRhY2hgIGlzIGEgZmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgYSBwYXJlbnQgbm9kZSB3YXNcclxuXHRcdC8vcmVjcmVhdGVkIChpZiBzbywgYW5kIGlmIHRoaXMgbm9kZSBpcyByZXVzZWQsIHRoZW4gdGhpcyBub2RlIG11c3RcclxuXHRcdC8vcmVhdHRhY2ggaXRzZWxmIHRvIHRoZSBuZXcgcGFyZW50KVxyXG5cdFx0Ly9gZWRpdGFibGVgIGlzIGEgZmxhZyB0aGF0IGluZGljYXRlcyB3aGV0aGVyIGFuIGFuY2VzdG9yIGlzXHJcblx0XHQvL2NvbnRlbnRlZGl0YWJsZVxyXG5cdFx0Ly9gbmFtZXNwYWNlYCBpbmRpY2F0ZXMgdGhlIGNsb3Nlc3QgSFRNTCBuYW1lc3BhY2UgYXMgaXQgY2FzY2FkZXMgZG93blxyXG5cdFx0Ly9mcm9tIGFuIGFuY2VzdG9yXHJcblx0XHQvL2Bjb25maWdzYCBpcyBhIGxpc3Qgb2YgY29uZmlnIGZ1bmN0aW9ucyB0byBydW4gYWZ0ZXIgdGhlIHRvcG1vc3RcclxuXHRcdC8vYGJ1aWxkYCBjYWxsIGZpbmlzaGVzIHJ1bm5pbmdcclxuXHJcblx0XHQvL3RoZXJlJ3MgbG9naWMgdGhhdCByZWxpZXMgb24gdGhlIGFzc3VtcHRpb24gdGhhdCBudWxsIGFuZCB1bmRlZmluZWRcclxuXHRcdC8vZGF0YSBhcmUgZXF1aXZhbGVudCB0byBlbXB0eSBzdHJpbmdzXHJcblx0XHQvLy0gdGhpcyBwcmV2ZW50cyBsaWZlY3ljbGUgc3VycHJpc2VzIGZyb20gcHJvY2VkdXJhbCBoZWxwZXJzIHRoYXQgbWl4XHJcblx0XHQvLyAgaW1wbGljaXQgYW5kIGV4cGxpY2l0IHJldHVybiBzdGF0ZW1lbnRzIChlLmcuXHJcblx0XHQvLyAgZnVuY3Rpb24gZm9vKCkge2lmIChjb25kKSByZXR1cm4gbShcImRpdlwiKX1cclxuXHRcdC8vLSBpdCBzaW1wbGlmaWVzIGRpZmZpbmcgY29kZVxyXG5cdFx0ZGF0YSA9IGRhdGFUb1N0cmluZyhkYXRhKTtcclxuXHRcdGlmIChkYXRhLnN1YnRyZWUgPT09IFwicmV0YWluXCIpIHJldHVybiBjYWNoZWQ7XHJcblx0XHRjYWNoZWQgPSBtYWtlQ2FjaGUoZGF0YSwgY2FjaGVkLCBpbmRleCwgcGFyZW50SW5kZXgsIHBhcmVudENhY2hlKTtcclxuXHRcdHJldHVybiBpc0FycmF5KGRhdGEpID8gYnVpbGRBcnJheShkYXRhLCBjYWNoZWQsIHBhcmVudEVsZW1lbnQsIGluZGV4LCBwYXJlbnRUYWcsIHNob3VsZFJlYXR0YWNoLCBlZGl0YWJsZSwgbmFtZXNwYWNlLCBjb25maWdzKSA6XHJcblx0XHRcdGRhdGEgIT0gbnVsbCAmJiBpc09iamVjdChkYXRhKSA/IGJ1aWxkT2JqZWN0KGRhdGEsIGNhY2hlZCwgZWRpdGFibGUsIHBhcmVudEVsZW1lbnQsIGluZGV4LCBzaG91bGRSZWF0dGFjaCwgbmFtZXNwYWNlLCBjb25maWdzKSA6XHJcblx0XHRcdCFpc0Z1bmN0aW9uKGRhdGEpID8gaGFuZGxlVGV4dChjYWNoZWQsIGRhdGEsIGluZGV4LCBwYXJlbnRFbGVtZW50LCBzaG91bGRSZWF0dGFjaCwgZWRpdGFibGUsIHBhcmVudFRhZykgOlxyXG5cdFx0XHRjYWNoZWQ7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIHNvcnRDaGFuZ2VzKGEsIGIpIHsgcmV0dXJuIGEuYWN0aW9uIC0gYi5hY3Rpb24gfHwgYS5pbmRleCAtIGIuaW5kZXg7IH1cclxuXHRmdW5jdGlvbiBzZXRBdHRyaWJ1dGVzKG5vZGUsIHRhZywgZGF0YUF0dHJzLCBjYWNoZWRBdHRycywgbmFtZXNwYWNlKSB7XHJcblx0XHRmb3IgKHZhciBhdHRyTmFtZSBpbiBkYXRhQXR0cnMpIHtcclxuXHRcdFx0dmFyIGRhdGFBdHRyID0gZGF0YUF0dHJzW2F0dHJOYW1lXTtcclxuXHRcdFx0dmFyIGNhY2hlZEF0dHIgPSBjYWNoZWRBdHRyc1thdHRyTmFtZV07XHJcblx0XHRcdGlmICghKGF0dHJOYW1lIGluIGNhY2hlZEF0dHJzKSB8fCAoY2FjaGVkQXR0ciAhPT0gZGF0YUF0dHIpKSB7XHJcblx0XHRcdFx0Y2FjaGVkQXR0cnNbYXR0ck5hbWVdID0gZGF0YUF0dHI7XHJcblx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdC8vYGNvbmZpZ2AgaXNuJ3QgYSByZWFsIGF0dHJpYnV0ZXMsIHNvIGlnbm9yZSBpdFxyXG5cdFx0XHRcdFx0aWYgKGF0dHJOYW1lID09PSBcImNvbmZpZ1wiIHx8IGF0dHJOYW1lID09PSBcImtleVwiKSBjb250aW51ZTtcclxuXHRcdFx0XHRcdC8vaG9vayBldmVudCBoYW5kbGVycyB0byB0aGUgYXV0by1yZWRyYXdpbmcgc3lzdGVtXHJcblx0XHRcdFx0XHRlbHNlIGlmIChpc0Z1bmN0aW9uKGRhdGFBdHRyKSAmJiBhdHRyTmFtZS5zbGljZSgwLCAyKSA9PT0gXCJvblwiKSB7XHJcblx0XHRcdFx0XHRcdG5vZGVbYXR0ck5hbWVdID0gYXV0b3JlZHJhdyhkYXRhQXR0ciwgbm9kZSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQvL2hhbmRsZSBgc3R5bGU6IHsuLi59YFxyXG5cdFx0XHRcdFx0ZWxzZSBpZiAoYXR0ck5hbWUgPT09IFwic3R5bGVcIiAmJiBkYXRhQXR0ciAhPSBudWxsICYmIGlzT2JqZWN0KGRhdGFBdHRyKSkge1xyXG5cdFx0XHRcdFx0XHRmb3IgKHZhciBydWxlIGluIGRhdGFBdHRyKSB7XHJcblx0XHRcdFx0XHRcdFx0aWYgKGNhY2hlZEF0dHIgPT0gbnVsbCB8fCBjYWNoZWRBdHRyW3J1bGVdICE9PSBkYXRhQXR0cltydWxlXSkgbm9kZS5zdHlsZVtydWxlXSA9IGRhdGFBdHRyW3J1bGVdO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGZvciAodmFyIHJ1bGUgaW4gY2FjaGVkQXR0cikge1xyXG5cdFx0XHRcdFx0XHRcdGlmICghKHJ1bGUgaW4gZGF0YUF0dHIpKSBub2RlLnN0eWxlW3J1bGVdID0gXCJcIjtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0Ly9oYW5kbGUgU1ZHXHJcblx0XHRcdFx0XHRlbHNlIGlmIChuYW1lc3BhY2UgIT0gbnVsbCkge1xyXG5cdFx0XHRcdFx0XHRpZiAoYXR0ck5hbWUgPT09IFwiaHJlZlwiKSBub2RlLnNldEF0dHJpYnV0ZU5TKFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCBcImhyZWZcIiwgZGF0YUF0dHIpO1xyXG5cdFx0XHRcdFx0XHRlbHNlIG5vZGUuc2V0QXR0cmlidXRlKGF0dHJOYW1lID09PSBcImNsYXNzTmFtZVwiID8gXCJjbGFzc1wiIDogYXR0ck5hbWUsIGRhdGFBdHRyKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdC8vaGFuZGxlIGNhc2VzIHRoYXQgYXJlIHByb3BlcnRpZXMgKGJ1dCBpZ25vcmUgY2FzZXMgd2hlcmUgd2Ugc2hvdWxkIHVzZSBzZXRBdHRyaWJ1dGUgaW5zdGVhZClcclxuXHRcdFx0XHRcdC8vLSBsaXN0IGFuZCBmb3JtIGFyZSB0eXBpY2FsbHkgdXNlZCBhcyBzdHJpbmdzLCBidXQgYXJlIERPTSBlbGVtZW50IHJlZmVyZW5jZXMgaW4ganNcclxuXHRcdFx0XHRcdC8vLSB3aGVuIHVzaW5nIENTUyBzZWxlY3RvcnMgKGUuZy4gYG0oXCJbc3R5bGU9JyddXCIpYCksIHN0eWxlIGlzIHVzZWQgYXMgYSBzdHJpbmcsIGJ1dCBpdCdzIGFuIG9iamVjdCBpbiBqc1xyXG5cdFx0XHRcdFx0ZWxzZSBpZiAoYXR0ck5hbWUgaW4gbm9kZSAmJiBhdHRyTmFtZSAhPT0gXCJsaXN0XCIgJiYgYXR0ck5hbWUgIT09IFwic3R5bGVcIiAmJiBhdHRyTmFtZSAhPT0gXCJmb3JtXCIgJiYgYXR0ck5hbWUgIT09IFwidHlwZVwiICYmIGF0dHJOYW1lICE9PSBcIndpZHRoXCIgJiYgYXR0ck5hbWUgIT09IFwiaGVpZ2h0XCIpIHtcclxuXHRcdFx0XHRcdFx0Ly8jMzQ4IGRvbid0IHNldCB0aGUgdmFsdWUgaWYgbm90IG5lZWRlZCBvdGhlcndpc2UgY3Vyc29yIHBsYWNlbWVudCBicmVha3MgaW4gQ2hyb21lXHJcblx0XHRcdFx0XHRcdGlmICh0YWcgIT09IFwiaW5wdXRcIiB8fCBub2RlW2F0dHJOYW1lXSAhPT0gZGF0YUF0dHIpIG5vZGVbYXR0ck5hbWVdID0gZGF0YUF0dHI7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRlbHNlIG5vZGUuc2V0QXR0cmlidXRlKGF0dHJOYW1lLCBkYXRhQXR0cik7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNhdGNoIChlKSB7XHJcblx0XHRcdFx0XHQvL3N3YWxsb3cgSUUncyBpbnZhbGlkIGFyZ3VtZW50IGVycm9ycyB0byBtaW1pYyBIVE1MJ3MgZmFsbGJhY2stdG8tZG9pbmctbm90aGluZy1vbi1pbnZhbGlkLWF0dHJpYnV0ZXMgYmVoYXZpb3JcclxuXHRcdFx0XHRcdGlmIChlLm1lc3NhZ2UuaW5kZXhPZihcIkludmFsaWQgYXJndW1lbnRcIikgPCAwKSB0aHJvdyBlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHQvLyMzNDggZGF0YUF0dHIgbWF5IG5vdCBiZSBhIHN0cmluZywgc28gdXNlIGxvb3NlIGNvbXBhcmlzb24gKGRvdWJsZSBlcXVhbCkgaW5zdGVhZCBvZiBzdHJpY3QgKHRyaXBsZSBlcXVhbClcclxuXHRcdFx0ZWxzZSBpZiAoYXR0ck5hbWUgPT09IFwidmFsdWVcIiAmJiB0YWcgPT09IFwiaW5wdXRcIiAmJiBub2RlLnZhbHVlICE9IGRhdGFBdHRyKSB7XHJcblx0XHRcdFx0bm9kZS52YWx1ZSA9IGRhdGFBdHRyO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gY2FjaGVkQXR0cnM7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIGNsZWFyKG5vZGVzLCBjYWNoZWQpIHtcclxuXHRcdGZvciAodmFyIGkgPSBub2Rlcy5sZW5ndGggLSAxOyBpID4gLTE7IGktLSkge1xyXG5cdFx0XHRpZiAobm9kZXNbaV0gJiYgbm9kZXNbaV0ucGFyZW50Tm9kZSkge1xyXG5cdFx0XHRcdHRyeSB7IG5vZGVzW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZXNbaV0pOyB9XHJcblx0XHRcdFx0Y2F0Y2ggKGUpIHt9IC8vaWdub3JlIGlmIHRoaXMgZmFpbHMgZHVlIHRvIG9yZGVyIG9mIGV2ZW50cyAoc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjE5MjYwODMvZmFpbGVkLXRvLWV4ZWN1dGUtcmVtb3ZlY2hpbGQtb24tbm9kZSlcclxuXHRcdFx0XHRjYWNoZWQgPSBbXS5jb25jYXQoY2FjaGVkKTtcclxuXHRcdFx0XHRpZiAoY2FjaGVkW2ldKSB1bmxvYWQoY2FjaGVkW2ldKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Ly9yZWxlYXNlIG1lbW9yeSBpZiBub2RlcyBpcyBhbiBhcnJheS4gVGhpcyBjaGVjayBzaG91bGQgZmFpbCBpZiBub2RlcyBpcyBhIE5vZGVMaXN0IChzZWUgbG9vcCBhYm92ZSlcclxuXHRcdGlmIChub2Rlcy5sZW5ndGgpIG5vZGVzLmxlbmd0aCA9IDA7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIHVubG9hZChjYWNoZWQpIHtcclxuXHRcdGlmIChjYWNoZWQuY29uZmlnQ29udGV4dCAmJiBpc0Z1bmN0aW9uKGNhY2hlZC5jb25maWdDb250ZXh0Lm9udW5sb2FkKSkge1xyXG5cdFx0XHRjYWNoZWQuY29uZmlnQ29udGV4dC5vbnVubG9hZCgpO1xyXG5cdFx0XHRjYWNoZWQuY29uZmlnQ29udGV4dC5vbnVubG9hZCA9IG51bGw7XHJcblx0XHR9XHJcblx0XHRpZiAoY2FjaGVkLmNvbnRyb2xsZXJzKSB7XHJcblx0XHRcdGZvckVhY2goY2FjaGVkLmNvbnRyb2xsZXJzLCBmdW5jdGlvbiAoY29udHJvbGxlcikge1xyXG5cdFx0XHRcdGlmIChpc0Z1bmN0aW9uKGNvbnRyb2xsZXIub251bmxvYWQpKSBjb250cm9sbGVyLm9udW5sb2FkKHtwcmV2ZW50RGVmYXVsdDogbm9vcH0pO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGlmIChjYWNoZWQuY2hpbGRyZW4pIHtcclxuXHRcdFx0aWYgKGlzQXJyYXkoY2FjaGVkLmNoaWxkcmVuKSkgZm9yRWFjaChjYWNoZWQuY2hpbGRyZW4sIHVubG9hZCk7XHJcblx0XHRcdGVsc2UgaWYgKGNhY2hlZC5jaGlsZHJlbi50YWcpIHVubG9hZChjYWNoZWQuY2hpbGRyZW4pO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRmdW5jdGlvbiBpbmplY3RIVE1MKHBhcmVudEVsZW1lbnQsIGluZGV4LCBkYXRhKSB7XHJcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBwYXJlbnRFbGVtZW50LmNoaWxkTm9kZXNbaW5kZXhdO1xyXG5cdFx0aWYgKG5leHRTaWJsaW5nKSB7XHJcblx0XHRcdHZhciBpc0VsZW1lbnQgPSBuZXh0U2libGluZy5ub2RlVHlwZSAhPT0gMTtcclxuXHRcdFx0dmFyIHBsYWNlaG9sZGVyID0gJGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG5cdFx0XHRpZiAoaXNFbGVtZW50KSB7XHJcblx0XHRcdFx0cGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUocGxhY2Vob2xkZXIsIG5leHRTaWJsaW5nIHx8IG51bGwpO1xyXG5cdFx0XHRcdHBsYWNlaG9sZGVyLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWJlZ2luXCIsIGRhdGEpO1xyXG5cdFx0XHRcdHBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQocGxhY2Vob2xkZXIpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgbmV4dFNpYmxpbmcuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlYmVnaW5cIiwgZGF0YSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0aWYgKHdpbmRvdy5SYW5nZSAmJiB3aW5kb3cuUmFuZ2UucHJvdG90eXBlLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudCkge1xyXG5cdFx0XHRcdHBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoJGRvY3VtZW50LmNyZWF0ZVJhbmdlKCkuY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KGRhdGEpKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHBhcmVudEVsZW1lbnQuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIGRhdGEpO1xyXG5cdFx0fVxyXG5cdFx0dmFyIG5vZGVzID0gW107XHJcblx0XHR3aGlsZSAocGFyZW50RWxlbWVudC5jaGlsZE5vZGVzW2luZGV4XSAhPT0gbmV4dFNpYmxpbmcpIHtcclxuXHRcdFx0bm9kZXMucHVzaChwYXJlbnRFbGVtZW50LmNoaWxkTm9kZXNbaW5kZXhdKTtcclxuXHRcdFx0aW5kZXgrKztcclxuXHRcdH1cclxuXHRcdHJldHVybiBub2RlcztcclxuXHR9XHJcblx0ZnVuY3Rpb24gYXV0b3JlZHJhdyhjYWxsYmFjaywgb2JqZWN0KSB7XHJcblx0XHRyZXR1cm4gZnVuY3Rpb24oZSkge1xyXG5cdFx0XHRlID0gZSB8fCBldmVudDtcclxuXHRcdFx0bS5yZWRyYXcuc3RyYXRlZ3koXCJkaWZmXCIpO1xyXG5cdFx0XHRtLnN0YXJ0Q29tcHV0YXRpb24oKTtcclxuXHRcdFx0dHJ5IHsgcmV0dXJuIGNhbGxiYWNrLmNhbGwob2JqZWN0LCBlKTsgfVxyXG5cdFx0XHRmaW5hbGx5IHtcclxuXHRcdFx0XHRlbmRGaXJzdENvbXB1dGF0aW9uKCk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHR2YXIgaHRtbDtcclxuXHR2YXIgZG9jdW1lbnROb2RlID0ge1xyXG5cdFx0YXBwZW5kQ2hpbGQ6IGZ1bmN0aW9uKG5vZGUpIHtcclxuXHRcdFx0aWYgKGh0bWwgPT09IHVuZGVmaW5lZCkgaHRtbCA9ICRkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaHRtbFwiKTtcclxuXHRcdFx0aWYgKCRkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgJiYgJGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAhPT0gbm9kZSkge1xyXG5cdFx0XHRcdCRkb2N1bWVudC5yZXBsYWNlQ2hpbGQobm9kZSwgJGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSAkZG9jdW1lbnQuYXBwZW5kQ2hpbGQobm9kZSk7XHJcblx0XHRcdHRoaXMuY2hpbGROb2RlcyA9ICRkb2N1bWVudC5jaGlsZE5vZGVzO1xyXG5cdFx0fSxcclxuXHRcdGluc2VydEJlZm9yZTogZnVuY3Rpb24obm9kZSkge1xyXG5cdFx0XHR0aGlzLmFwcGVuZENoaWxkKG5vZGUpO1xyXG5cdFx0fSxcclxuXHRcdGNoaWxkTm9kZXM6IFtdXHJcblx0fTtcclxuXHR2YXIgbm9kZUNhY2hlID0gW10sIGNlbGxDYWNoZSA9IHt9O1xyXG5cdG0ucmVuZGVyID0gZnVuY3Rpb24ocm9vdCwgY2VsbCwgZm9yY2VSZWNyZWF0aW9uKSB7XHJcblx0XHR2YXIgY29uZmlncyA9IFtdO1xyXG5cdFx0aWYgKCFyb290KSB0aHJvdyBuZXcgRXJyb3IoXCJFbnN1cmUgdGhlIERPTSBlbGVtZW50IGJlaW5nIHBhc3NlZCB0byBtLnJvdXRlL20ubW91bnQvbS5yZW5kZXIgaXMgbm90IHVuZGVmaW5lZC5cIik7XHJcblx0XHR2YXIgaWQgPSBnZXRDZWxsQ2FjaGVLZXkocm9vdCk7XHJcblx0XHR2YXIgaXNEb2N1bWVudFJvb3QgPSByb290ID09PSAkZG9jdW1lbnQ7XHJcblx0XHR2YXIgbm9kZSA9IGlzRG9jdW1lbnRSb290IHx8IHJvb3QgPT09ICRkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgPyBkb2N1bWVudE5vZGUgOiByb290O1xyXG5cdFx0aWYgKGlzRG9jdW1lbnRSb290ICYmIGNlbGwudGFnICE9PSBcImh0bWxcIikgY2VsbCA9IHt0YWc6IFwiaHRtbFwiLCBhdHRyczoge30sIGNoaWxkcmVuOiBjZWxsfTtcclxuXHRcdGlmIChjZWxsQ2FjaGVbaWRdID09PSB1bmRlZmluZWQpIGNsZWFyKG5vZGUuY2hpbGROb2Rlcyk7XHJcblx0XHRpZiAoZm9yY2VSZWNyZWF0aW9uID09PSB0cnVlKSByZXNldChyb290KTtcclxuXHRcdGNlbGxDYWNoZVtpZF0gPSBidWlsZChub2RlLCBudWxsLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgY2VsbCwgY2VsbENhY2hlW2lkXSwgZmFsc2UsIDAsIG51bGwsIHVuZGVmaW5lZCwgY29uZmlncyk7XHJcblx0XHRmb3JFYWNoKGNvbmZpZ3MsIGZ1bmN0aW9uIChjb25maWcpIHsgY29uZmlnKCk7IH0pO1xyXG5cdH07XHJcblx0ZnVuY3Rpb24gZ2V0Q2VsbENhY2hlS2V5KGVsZW1lbnQpIHtcclxuXHRcdHZhciBpbmRleCA9IG5vZGVDYWNoZS5pbmRleE9mKGVsZW1lbnQpO1xyXG5cdFx0cmV0dXJuIGluZGV4IDwgMCA/IG5vZGVDYWNoZS5wdXNoKGVsZW1lbnQpIC0gMSA6IGluZGV4O1xyXG5cdH1cclxuXHJcblx0bS50cnVzdCA9IGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHR2YWx1ZSA9IG5ldyBTdHJpbmcodmFsdWUpO1xyXG5cdFx0dmFsdWUuJHRydXN0ZWQgPSB0cnVlO1xyXG5cdFx0cmV0dXJuIHZhbHVlO1xyXG5cdH07XHJcblxyXG5cdGZ1bmN0aW9uIGdldHRlcnNldHRlcihzdG9yZSkge1xyXG5cdFx0dmFyIHByb3AgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0aWYgKGFyZ3VtZW50cy5sZW5ndGgpIHN0b3JlID0gYXJndW1lbnRzWzBdO1xyXG5cdFx0XHRyZXR1cm4gc3RvcmU7XHJcblx0XHR9O1xyXG5cclxuXHRcdHByb3AudG9KU09OID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdHJldHVybiBzdG9yZTtcclxuXHRcdH07XHJcblxyXG5cdFx0cmV0dXJuIHByb3A7XHJcblx0fVxyXG5cclxuXHRtLnByb3AgPSBmdW5jdGlvbiAoc3RvcmUpIHtcclxuXHRcdC8vbm90ZTogdXNpbmcgbm9uLXN0cmljdCBlcXVhbGl0eSBjaGVjayBoZXJlIGJlY2F1c2Ugd2UncmUgY2hlY2tpbmcgaWYgc3RvcmUgaXMgbnVsbCBPUiB1bmRlZmluZWRcclxuXHRcdGlmICgoc3RvcmUgIT0gbnVsbCAmJiBpc09iamVjdChzdG9yZSkgfHwgaXNGdW5jdGlvbihzdG9yZSkpICYmIGlzRnVuY3Rpb24oc3RvcmUudGhlbikpIHtcclxuXHRcdFx0cmV0dXJuIHByb3BpZnkoc3RvcmUpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBnZXR0ZXJzZXR0ZXIoc3RvcmUpO1xyXG5cdH07XHJcblxyXG5cdHZhciByb290cyA9IFtdLCBjb21wb25lbnRzID0gW10sIGNvbnRyb2xsZXJzID0gW10sIGxhc3RSZWRyYXdJZCA9IG51bGwsIGxhc3RSZWRyYXdDYWxsVGltZSA9IDAsIGNvbXB1dGVQcmVSZWRyYXdIb29rID0gbnVsbCwgY29tcHV0ZVBvc3RSZWRyYXdIb29rID0gbnVsbCwgdG9wQ29tcG9uZW50LCB1bmxvYWRlcnMgPSBbXTtcclxuXHR2YXIgRlJBTUVfQlVER0VUID0gMTY7IC8vNjAgZnJhbWVzIHBlciBzZWNvbmQgPSAxIGNhbGwgcGVyIDE2IG1zXHJcblx0ZnVuY3Rpb24gcGFyYW1ldGVyaXplKGNvbXBvbmVudCwgYXJncykge1xyXG5cdFx0dmFyIGNvbnRyb2xsZXIgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0cmV0dXJuIChjb21wb25lbnQuY29udHJvbGxlciB8fCBub29wKS5hcHBseSh0aGlzLCBhcmdzKSB8fCB0aGlzO1xyXG5cdFx0fTtcclxuXHRcdGlmIChjb21wb25lbnQuY29udHJvbGxlcikgY29udHJvbGxlci5wcm90b3R5cGUgPSBjb21wb25lbnQuY29udHJvbGxlci5wcm90b3R5cGU7XHJcblx0XHR2YXIgdmlldyA9IGZ1bmN0aW9uKGN0cmwpIHtcclxuXHRcdFx0dmFyIGN1cnJlbnRBcmdzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmdzLmNvbmNhdChbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpIDogYXJncztcclxuXHRcdFx0cmV0dXJuIGNvbXBvbmVudC52aWV3LmFwcGx5KGNvbXBvbmVudCwgY3VycmVudEFyZ3MgPyBbY3RybF0uY29uY2F0KGN1cnJlbnRBcmdzKSA6IFtjdHJsXSk7XHJcblx0XHR9O1xyXG5cdFx0dmlldy4kb3JpZ2luYWwgPSBjb21wb25lbnQudmlldztcclxuXHRcdHZhciBvdXRwdXQgPSB7Y29udHJvbGxlcjogY29udHJvbGxlciwgdmlldzogdmlld307XHJcblx0XHRpZiAoYXJnc1swXSAmJiBhcmdzWzBdLmtleSAhPSBudWxsKSBvdXRwdXQuYXR0cnMgPSB7a2V5OiBhcmdzWzBdLmtleX07XHJcblx0XHRyZXR1cm4gb3V0cHV0O1xyXG5cdH1cclxuXHRtLmNvbXBvbmVudCA9IGZ1bmN0aW9uKGNvbXBvbmVudCkge1xyXG5cdFx0Zm9yICh2YXIgYXJncyA9IFtdLCBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XHJcblx0XHRyZXR1cm4gcGFyYW1ldGVyaXplKGNvbXBvbmVudCwgYXJncyk7XHJcblx0fTtcclxuXHRtLm1vdW50ID0gbS5tb2R1bGUgPSBmdW5jdGlvbihyb290LCBjb21wb25lbnQpIHtcclxuXHRcdGlmICghcm9vdCkgdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIGVuc3VyZSB0aGUgRE9NIGVsZW1lbnQgZXhpc3RzIGJlZm9yZSByZW5kZXJpbmcgYSB0ZW1wbGF0ZSBpbnRvIGl0LlwiKTtcclxuXHRcdHZhciBpbmRleCA9IHJvb3RzLmluZGV4T2Yocm9vdCk7XHJcblx0XHRpZiAoaW5kZXggPCAwKSBpbmRleCA9IHJvb3RzLmxlbmd0aDtcclxuXHJcblx0XHR2YXIgaXNQcmV2ZW50ZWQgPSBmYWxzZTtcclxuXHRcdHZhciBldmVudCA9IHtwcmV2ZW50RGVmYXVsdDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlzUHJldmVudGVkID0gdHJ1ZTtcclxuXHRcdFx0Y29tcHV0ZVByZVJlZHJhd0hvb2sgPSBjb21wdXRlUG9zdFJlZHJhd0hvb2sgPSBudWxsO1xyXG5cdFx0fX07XHJcblxyXG5cdFx0Zm9yRWFjaCh1bmxvYWRlcnMsIGZ1bmN0aW9uICh1bmxvYWRlcikge1xyXG5cdFx0XHR1bmxvYWRlci5oYW5kbGVyLmNhbGwodW5sb2FkZXIuY29udHJvbGxlciwgZXZlbnQpO1xyXG5cdFx0XHR1bmxvYWRlci5jb250cm9sbGVyLm9udW5sb2FkID0gbnVsbDtcclxuXHRcdH0pO1xyXG5cclxuXHRcdGlmIChpc1ByZXZlbnRlZCkge1xyXG5cdFx0XHRmb3JFYWNoKHVubG9hZGVycywgZnVuY3Rpb24gKHVubG9hZGVyKSB7XHJcblx0XHRcdFx0dW5sb2FkZXIuY29udHJvbGxlci5vbnVubG9hZCA9IHVubG9hZGVyLmhhbmRsZXI7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSB1bmxvYWRlcnMgPSBbXTtcclxuXHJcblx0XHRpZiAoY29udHJvbGxlcnNbaW5kZXhdICYmIGlzRnVuY3Rpb24oY29udHJvbGxlcnNbaW5kZXhdLm9udW5sb2FkKSkge1xyXG5cdFx0XHRjb250cm9sbGVyc1tpbmRleF0ub251bmxvYWQoZXZlbnQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBpc051bGxDb21wb25lbnQgPSBjb21wb25lbnQgPT09IG51bGw7XHJcblxyXG5cdFx0aWYgKCFpc1ByZXZlbnRlZCkge1xyXG5cdFx0XHRtLnJlZHJhdy5zdHJhdGVneShcImFsbFwiKTtcclxuXHRcdFx0bS5zdGFydENvbXB1dGF0aW9uKCk7XHJcblx0XHRcdHJvb3RzW2luZGV4XSA9IHJvb3Q7XHJcblx0XHRcdHZhciBjdXJyZW50Q29tcG9uZW50ID0gY29tcG9uZW50ID8gKHRvcENvbXBvbmVudCA9IGNvbXBvbmVudCkgOiAodG9wQ29tcG9uZW50ID0gY29tcG9uZW50ID0ge2NvbnRyb2xsZXI6IG5vb3B9KTtcclxuXHRcdFx0dmFyIGNvbnRyb2xsZXIgPSBuZXcgKGNvbXBvbmVudC5jb250cm9sbGVyIHx8IG5vb3ApKCk7XHJcblx0XHRcdC8vY29udHJvbGxlcnMgbWF5IGNhbGwgbS5tb3VudCByZWN1cnNpdmVseSAodmlhIG0ucm91dGUgcmVkaXJlY3RzLCBmb3IgZXhhbXBsZSlcclxuXHRcdFx0Ly90aGlzIGNvbmRpdGlvbmFsIGVuc3VyZXMgb25seSB0aGUgbGFzdCByZWN1cnNpdmUgbS5tb3VudCBjYWxsIGlzIGFwcGxpZWRcclxuXHRcdFx0aWYgKGN1cnJlbnRDb21wb25lbnQgPT09IHRvcENvbXBvbmVudCkge1xyXG5cdFx0XHRcdGNvbnRyb2xsZXJzW2luZGV4XSA9IGNvbnRyb2xsZXI7XHJcblx0XHRcdFx0Y29tcG9uZW50c1tpbmRleF0gPSBjb21wb25lbnQ7XHJcblx0XHRcdH1cclxuXHRcdFx0ZW5kRmlyc3RDb21wdXRhdGlvbigpO1xyXG5cdFx0XHRpZiAoaXNOdWxsQ29tcG9uZW50KSB7XHJcblx0XHRcdFx0cmVtb3ZlUm9vdEVsZW1lbnQocm9vdCwgaW5kZXgpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBjb250cm9sbGVyc1tpbmRleF07XHJcblx0XHR9XHJcblx0XHRpZiAoaXNOdWxsQ29tcG9uZW50KSB7XHJcblx0XHRcdHJlbW92ZVJvb3RFbGVtZW50KHJvb3QsIGluZGV4KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRmdW5jdGlvbiByZW1vdmVSb290RWxlbWVudChyb290LCBpbmRleCkge1xyXG5cdFx0cm9vdHMuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdGNvbnRyb2xsZXJzLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRjb21wb25lbnRzLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRyZXNldChyb290KTtcclxuXHRcdG5vZGVDYWNoZS5zcGxpY2UoZ2V0Q2VsbENhY2hlS2V5KHJvb3QpLCAxKTtcclxuXHR9XHJcblxyXG5cdHZhciByZWRyYXdpbmcgPSBmYWxzZSwgZm9yY2luZyA9IGZhbHNlO1xyXG5cdG0ucmVkcmF3ID0gZnVuY3Rpb24oZm9yY2UpIHtcclxuXHRcdGlmIChyZWRyYXdpbmcpIHJldHVybjtcclxuXHRcdHJlZHJhd2luZyA9IHRydWU7XHJcblx0XHRpZiAoZm9yY2UpIGZvcmNpbmcgPSB0cnVlO1xyXG5cdFx0dHJ5IHtcclxuXHRcdFx0Ly9sYXN0UmVkcmF3SWQgaXMgYSBwb3NpdGl2ZSBudW1iZXIgaWYgYSBzZWNvbmQgcmVkcmF3IGlzIHJlcXVlc3RlZCBiZWZvcmUgdGhlIG5leHQgYW5pbWF0aW9uIGZyYW1lXHJcblx0XHRcdC8vbGFzdFJlZHJhd0lEIGlzIG51bGwgaWYgaXQncyB0aGUgZmlyc3QgcmVkcmF3IGFuZCBub3QgYW4gZXZlbnQgaGFuZGxlclxyXG5cdFx0XHRpZiAobGFzdFJlZHJhd0lkICYmICFmb3JjZSkge1xyXG5cdFx0XHRcdC8vd2hlbiBzZXRUaW1lb3V0OiBvbmx5IHJlc2NoZWR1bGUgcmVkcmF3IGlmIHRpbWUgYmV0d2VlbiBub3cgYW5kIHByZXZpb3VzIHJlZHJhdyBpcyBiaWdnZXIgdGhhbiBhIGZyYW1lLCBvdGhlcndpc2Uga2VlcCBjdXJyZW50bHkgc2NoZWR1bGVkIHRpbWVvdXRcclxuXHRcdFx0XHQvL3doZW4gckFGOiBhbHdheXMgcmVzY2hlZHVsZSByZWRyYXdcclxuXHRcdFx0XHRpZiAoJHJlcXVlc3RBbmltYXRpb25GcmFtZSA9PT0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCBuZXcgRGF0ZSAtIGxhc3RSZWRyYXdDYWxsVGltZSA+IEZSQU1FX0JVREdFVCkge1xyXG5cdFx0XHRcdFx0aWYgKGxhc3RSZWRyYXdJZCA+IDApICRjYW5jZWxBbmltYXRpb25GcmFtZShsYXN0UmVkcmF3SWQpO1xyXG5cdFx0XHRcdFx0bGFzdFJlZHJhd0lkID0gJHJlcXVlc3RBbmltYXRpb25GcmFtZShyZWRyYXcsIEZSQU1FX0JVREdFVCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdHJlZHJhdygpO1xyXG5cdFx0XHRcdGxhc3RSZWRyYXdJZCA9ICRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKSB7IGxhc3RSZWRyYXdJZCA9IG51bGw7IH0sIEZSQU1FX0JVREdFVCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGZpbmFsbHkge1xyXG5cdFx0XHRyZWRyYXdpbmcgPSBmb3JjaW5nID0gZmFsc2U7XHJcblx0XHR9XHJcblx0fTtcclxuXHRtLnJlZHJhdy5zdHJhdGVneSA9IG0ucHJvcCgpO1xyXG5cdGZ1bmN0aW9uIHJlZHJhdygpIHtcclxuXHRcdGlmIChjb21wdXRlUHJlUmVkcmF3SG9vaykge1xyXG5cdFx0XHRjb21wdXRlUHJlUmVkcmF3SG9vaygpO1xyXG5cdFx0XHRjb21wdXRlUHJlUmVkcmF3SG9vayA9IG51bGw7XHJcblx0XHR9XHJcblx0XHRmb3JFYWNoKHJvb3RzLCBmdW5jdGlvbiAocm9vdCwgaSkge1xyXG5cdFx0XHR2YXIgY29tcG9uZW50ID0gY29tcG9uZW50c1tpXTtcclxuXHRcdFx0aWYgKGNvbnRyb2xsZXJzW2ldKSB7XHJcblx0XHRcdFx0dmFyIGFyZ3MgPSBbY29udHJvbGxlcnNbaV1dO1xyXG5cdFx0XHRcdG0ucmVuZGVyKHJvb3QsIGNvbXBvbmVudC52aWV3ID8gY29tcG9uZW50LnZpZXcoY29udHJvbGxlcnNbaV0sIGFyZ3MpIDogXCJcIik7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0Ly9hZnRlciByZW5kZXJpbmcgd2l0aGluIGEgcm91dGVkIGNvbnRleHQsIHdlIG5lZWQgdG8gc2Nyb2xsIGJhY2sgdG8gdGhlIHRvcCwgYW5kIGZldGNoIHRoZSBkb2N1bWVudCB0aXRsZSBmb3IgaGlzdG9yeS5wdXNoU3RhdGVcclxuXHRcdGlmIChjb21wdXRlUG9zdFJlZHJhd0hvb2spIHtcclxuXHRcdFx0Y29tcHV0ZVBvc3RSZWRyYXdIb29rKCk7XHJcblx0XHRcdGNvbXB1dGVQb3N0UmVkcmF3SG9vayA9IG51bGw7XHJcblx0XHR9XHJcblx0XHRsYXN0UmVkcmF3SWQgPSBudWxsO1xyXG5cdFx0bGFzdFJlZHJhd0NhbGxUaW1lID0gbmV3IERhdGU7XHJcblx0XHRtLnJlZHJhdy5zdHJhdGVneShcImRpZmZcIik7XHJcblx0fVxyXG5cclxuXHR2YXIgcGVuZGluZ1JlcXVlc3RzID0gMDtcclxuXHRtLnN0YXJ0Q29tcHV0YXRpb24gPSBmdW5jdGlvbigpIHsgcGVuZGluZ1JlcXVlc3RzKys7IH07XHJcblx0bS5lbmRDb21wdXRhdGlvbiA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0aWYgKHBlbmRpbmdSZXF1ZXN0cyA+IDEpIHBlbmRpbmdSZXF1ZXN0cy0tO1xyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdHBlbmRpbmdSZXF1ZXN0cyA9IDA7XHJcblx0XHRcdG0ucmVkcmF3KCk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBlbmRGaXJzdENvbXB1dGF0aW9uKCkge1xyXG5cdFx0aWYgKG0ucmVkcmF3LnN0cmF0ZWd5KCkgPT09IFwibm9uZVwiKSB7XHJcblx0XHRcdHBlbmRpbmdSZXF1ZXN0cy0tO1xyXG5cdFx0XHRtLnJlZHJhdy5zdHJhdGVneShcImRpZmZcIik7XHJcblx0XHR9XHJcblx0XHRlbHNlIG0uZW5kQ29tcHV0YXRpb24oKTtcclxuXHR9XHJcblxyXG5cdG0ud2l0aEF0dHIgPSBmdW5jdGlvbihwcm9wLCB3aXRoQXR0ckNhbGxiYWNrLCBjYWxsYmFja1RoaXMpIHtcclxuXHRcdHJldHVybiBmdW5jdGlvbihlKSB7XHJcblx0XHRcdGUgPSBlIHx8IGV2ZW50O1xyXG5cdFx0XHR2YXIgY3VycmVudFRhcmdldCA9IGUuY3VycmVudFRhcmdldCB8fCB0aGlzO1xyXG5cdFx0XHR2YXIgX3RoaXMgPSBjYWxsYmFja1RoaXMgfHwgdGhpcztcclxuXHRcdFx0d2l0aEF0dHJDYWxsYmFjay5jYWxsKF90aGlzLCBwcm9wIGluIGN1cnJlbnRUYXJnZXQgPyBjdXJyZW50VGFyZ2V0W3Byb3BdIDogY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUocHJvcCkpO1xyXG5cdFx0fTtcclxuXHR9O1xyXG5cclxuXHQvL3JvdXRpbmdcclxuXHR2YXIgbW9kZXMgPSB7cGF0aG5hbWU6IFwiXCIsIGhhc2g6IFwiI1wiLCBzZWFyY2g6IFwiP1wifTtcclxuXHR2YXIgcmVkaXJlY3QgPSBub29wLCByb3V0ZVBhcmFtcywgY3VycmVudFJvdXRlLCBpc0RlZmF1bHRSb3V0ZSA9IGZhbHNlO1xyXG5cdG0ucm91dGUgPSBmdW5jdGlvbihyb290LCBhcmcxLCBhcmcyLCB2ZG9tKSB7XHJcblx0XHQvL20ucm91dGUoKVxyXG5cdFx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHJldHVybiBjdXJyZW50Um91dGU7XHJcblx0XHQvL20ucm91dGUoZWwsIGRlZmF1bHRSb3V0ZSwgcm91dGVzKVxyXG5cdFx0ZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMyAmJiBpc1N0cmluZyhhcmcxKSkge1xyXG5cdFx0XHRyZWRpcmVjdCA9IGZ1bmN0aW9uKHNvdXJjZSkge1xyXG5cdFx0XHRcdHZhciBwYXRoID0gY3VycmVudFJvdXRlID0gbm9ybWFsaXplUm91dGUoc291cmNlKTtcclxuXHRcdFx0XHRpZiAoIXJvdXRlQnlWYWx1ZShyb290LCBhcmcyLCBwYXRoKSkge1xyXG5cdFx0XHRcdFx0aWYgKGlzRGVmYXVsdFJvdXRlKSB0aHJvdyBuZXcgRXJyb3IoXCJFbnN1cmUgdGhlIGRlZmF1bHQgcm91dGUgbWF0Y2hlcyBvbmUgb2YgdGhlIHJvdXRlcyBkZWZpbmVkIGluIG0ucm91dGVcIik7XHJcblx0XHRcdFx0XHRpc0RlZmF1bHRSb3V0ZSA9IHRydWU7XHJcblx0XHRcdFx0XHRtLnJvdXRlKGFyZzEsIHRydWUpO1xyXG5cdFx0XHRcdFx0aXNEZWZhdWx0Um91dGUgPSBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblx0XHRcdHZhciBsaXN0ZW5lciA9IG0ucm91dGUubW9kZSA9PT0gXCJoYXNoXCIgPyBcIm9uaGFzaGNoYW5nZVwiIDogXCJvbnBvcHN0YXRlXCI7XHJcblx0XHRcdHdpbmRvd1tsaXN0ZW5lcl0gPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHR2YXIgcGF0aCA9ICRsb2NhdGlvblttLnJvdXRlLm1vZGVdO1xyXG5cdFx0XHRcdGlmIChtLnJvdXRlLm1vZGUgPT09IFwicGF0aG5hbWVcIikgcGF0aCArPSAkbG9jYXRpb24uc2VhcmNoO1xyXG5cdFx0XHRcdGlmIChjdXJyZW50Um91dGUgIT09IG5vcm1hbGl6ZVJvdXRlKHBhdGgpKSByZWRpcmVjdChwYXRoKTtcclxuXHRcdFx0fTtcclxuXHJcblx0XHRcdGNvbXB1dGVQcmVSZWRyYXdIb29rID0gc2V0U2Nyb2xsO1xyXG5cdFx0XHR3aW5kb3dbbGlzdGVuZXJdKCk7XHJcblx0XHR9XHJcblx0XHQvL2NvbmZpZzogbS5yb3V0ZVxyXG5cdFx0ZWxzZSBpZiAocm9vdC5hZGRFdmVudExpc3RlbmVyIHx8IHJvb3QuYXR0YWNoRXZlbnQpIHtcclxuXHRcdFx0cm9vdC5ocmVmID0gKG0ucm91dGUubW9kZSAhPT0gJ3BhdGhuYW1lJyA/ICRsb2NhdGlvbi5wYXRobmFtZSA6ICcnKSArIG1vZGVzW20ucm91dGUubW9kZV0gKyB2ZG9tLmF0dHJzLmhyZWY7XHJcblx0XHRcdGlmIChyb290LmFkZEV2ZW50TGlzdGVuZXIpIHtcclxuXHRcdFx0XHRyb290LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCByb3V0ZVVub2J0cnVzaXZlKTtcclxuXHRcdFx0XHRyb290LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCByb3V0ZVVub2J0cnVzaXZlKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRyb290LmRldGFjaEV2ZW50KFwib25jbGlja1wiLCByb3V0ZVVub2J0cnVzaXZlKTtcclxuXHRcdFx0XHRyb290LmF0dGFjaEV2ZW50KFwib25jbGlja1wiLCByb3V0ZVVub2J0cnVzaXZlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Ly9tLnJvdXRlKHJvdXRlLCBwYXJhbXMsIHNob3VsZFJlcGxhY2VIaXN0b3J5RW50cnkpXHJcblx0XHRlbHNlIGlmIChpc1N0cmluZyhyb290KSkge1xyXG5cdFx0XHR2YXIgb2xkUm91dGUgPSBjdXJyZW50Um91dGU7XHJcblx0XHRcdGN1cnJlbnRSb3V0ZSA9IHJvb3Q7XHJcblx0XHRcdHZhciBhcmdzID0gYXJnMSB8fCB7fTtcclxuXHRcdFx0dmFyIHF1ZXJ5SW5kZXggPSBjdXJyZW50Um91dGUuaW5kZXhPZihcIj9cIik7XHJcblx0XHRcdHZhciBwYXJhbXMgPSBxdWVyeUluZGV4ID4gLTEgPyBwYXJzZVF1ZXJ5U3RyaW5nKGN1cnJlbnRSb3V0ZS5zbGljZShxdWVyeUluZGV4ICsgMSkpIDoge307XHJcblx0XHRcdGZvciAodmFyIGkgaW4gYXJncykgcGFyYW1zW2ldID0gYXJnc1tpXTtcclxuXHRcdFx0dmFyIHF1ZXJ5c3RyaW5nID0gYnVpbGRRdWVyeVN0cmluZyhwYXJhbXMpO1xyXG5cdFx0XHR2YXIgY3VycmVudFBhdGggPSBxdWVyeUluZGV4ID4gLTEgPyBjdXJyZW50Um91dGUuc2xpY2UoMCwgcXVlcnlJbmRleCkgOiBjdXJyZW50Um91dGU7XHJcblx0XHRcdGlmIChxdWVyeXN0cmluZykgY3VycmVudFJvdXRlID0gY3VycmVudFBhdGggKyAoY3VycmVudFBhdGguaW5kZXhPZihcIj9cIikgPT09IC0xID8gXCI/XCIgOiBcIiZcIikgKyBxdWVyeXN0cmluZztcclxuXHJcblx0XHRcdHZhciBzaG91bGRSZXBsYWNlSGlzdG9yeUVudHJ5ID0gKGFyZ3VtZW50cy5sZW5ndGggPT09IDMgPyBhcmcyIDogYXJnMSkgPT09IHRydWUgfHwgb2xkUm91dGUgPT09IHJvb3Q7XHJcblxyXG5cdFx0XHRpZiAod2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKSB7XHJcblx0XHRcdFx0Y29tcHV0ZVByZVJlZHJhd0hvb2sgPSBzZXRTY3JvbGw7XHJcblx0XHRcdFx0Y29tcHV0ZVBvc3RSZWRyYXdIb29rID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHR3aW5kb3cuaGlzdG9yeVtzaG91bGRSZXBsYWNlSGlzdG9yeUVudHJ5ID8gXCJyZXBsYWNlU3RhdGVcIiA6IFwicHVzaFN0YXRlXCJdKG51bGwsICRkb2N1bWVudC50aXRsZSwgbW9kZXNbbS5yb3V0ZS5tb2RlXSArIGN1cnJlbnRSb3V0ZSk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0XHRyZWRpcmVjdChtb2Rlc1ttLnJvdXRlLm1vZGVdICsgY3VycmVudFJvdXRlKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHQkbG9jYXRpb25bbS5yb3V0ZS5tb2RlXSA9IGN1cnJlbnRSb3V0ZTtcclxuXHRcdFx0XHRyZWRpcmVjdChtb2Rlc1ttLnJvdXRlLm1vZGVdICsgY3VycmVudFJvdXRlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblx0bS5yb3V0ZS5wYXJhbSA9IGZ1bmN0aW9uKGtleSkge1xyXG5cdFx0aWYgKCFyb3V0ZVBhcmFtcykgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgY2FsbCBtLnJvdXRlKGVsZW1lbnQsIGRlZmF1bHRSb3V0ZSwgcm91dGVzKSBiZWZvcmUgY2FsbGluZyBtLnJvdXRlLnBhcmFtKClcIik7XHJcblx0XHRpZiggIWtleSApe1xyXG5cdFx0XHRyZXR1cm4gcm91dGVQYXJhbXM7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gcm91dGVQYXJhbXNba2V5XTtcclxuXHR9O1xyXG5cdG0ucm91dGUubW9kZSA9IFwic2VhcmNoXCI7XHJcblx0ZnVuY3Rpb24gbm9ybWFsaXplUm91dGUocm91dGUpIHtcclxuXHRcdHJldHVybiByb3V0ZS5zbGljZShtb2Rlc1ttLnJvdXRlLm1vZGVdLmxlbmd0aCk7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIHJvdXRlQnlWYWx1ZShyb290LCByb3V0ZXIsIHBhdGgpIHtcclxuXHRcdHJvdXRlUGFyYW1zID0ge307XHJcblxyXG5cdFx0dmFyIHF1ZXJ5U3RhcnQgPSBwYXRoLmluZGV4T2YoXCI/XCIpO1xyXG5cdFx0aWYgKHF1ZXJ5U3RhcnQgIT09IC0xKSB7XHJcblx0XHRcdHJvdXRlUGFyYW1zID0gcGFyc2VRdWVyeVN0cmluZyhwYXRoLnN1YnN0cihxdWVyeVN0YXJ0ICsgMSwgcGF0aC5sZW5ndGgpKTtcclxuXHRcdFx0cGF0aCA9IHBhdGguc3Vic3RyKDAsIHF1ZXJ5U3RhcnQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEdldCBhbGwgcm91dGVzIGFuZCBjaGVjayBpZiB0aGVyZSdzXHJcblx0XHQvLyBhbiBleGFjdCBtYXRjaCBmb3IgdGhlIGN1cnJlbnQgcGF0aFxyXG5cdFx0dmFyIGtleXMgPSBPYmplY3Qua2V5cyhyb3V0ZXIpO1xyXG5cdFx0dmFyIGluZGV4ID0ga2V5cy5pbmRleE9mKHBhdGgpO1xyXG5cdFx0aWYoaW5kZXggIT09IC0xKXtcclxuXHRcdFx0bS5tb3VudChyb290LCByb3V0ZXJba2V5cyBbaW5kZXhdXSk7XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZvciAodmFyIHJvdXRlIGluIHJvdXRlcikge1xyXG5cdFx0XHRpZiAocm91dGUgPT09IHBhdGgpIHtcclxuXHRcdFx0XHRtLm1vdW50KHJvb3QsIHJvdXRlcltyb3V0ZV0pO1xyXG5cdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR2YXIgbWF0Y2hlciA9IG5ldyBSZWdFeHAoXCJeXCIgKyByb3V0ZS5yZXBsYWNlKC86W15cXC9dKz9cXC57M30vZywgXCIoLio/KVwiKS5yZXBsYWNlKC86W15cXC9dKy9nLCBcIihbXlxcXFwvXSspXCIpICsgXCJcXC8/JFwiKTtcclxuXHJcblx0XHRcdGlmIChtYXRjaGVyLnRlc3QocGF0aCkpIHtcclxuXHRcdFx0XHRwYXRoLnJlcGxhY2UobWF0Y2hlciwgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHR2YXIga2V5cyA9IHJvdXRlLm1hdGNoKC86W15cXC9dKy9nKSB8fCBbXTtcclxuXHRcdFx0XHRcdHZhciB2YWx1ZXMgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSwgLTIpO1xyXG5cdFx0XHRcdFx0Zm9yRWFjaChrZXlzLCBmdW5jdGlvbiAoa2V5LCBpKSB7XHJcblx0XHRcdFx0XHRcdHJvdXRlUGFyYW1zW2tleS5yZXBsYWNlKC86fFxcLi9nLCBcIlwiKV0gPSBkZWNvZGVVUklDb21wb25lbnQodmFsdWVzW2ldKTtcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRtLm1vdW50KHJvb3QsIHJvdXRlcltyb3V0ZV0pO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cdGZ1bmN0aW9uIHJvdXRlVW5vYnRydXNpdmUoZSkge1xyXG5cdFx0ZSA9IGUgfHwgZXZlbnQ7XHJcblxyXG5cdFx0aWYgKGUuY3RybEtleSB8fCBlLm1ldGFLZXkgfHwgZS53aGljaCA9PT0gMikgcmV0dXJuO1xyXG5cclxuXHRcdGlmIChlLnByZXZlbnREZWZhdWx0KSBlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRlbHNlIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcclxuXHJcblx0XHR2YXIgY3VycmVudFRhcmdldCA9IGUuY3VycmVudFRhcmdldCB8fCBlLnNyY0VsZW1lbnQ7XHJcblx0XHR2YXIgYXJncyA9IG0ucm91dGUubW9kZSA9PT0gXCJwYXRobmFtZVwiICYmIGN1cnJlbnRUYXJnZXQuc2VhcmNoID8gcGFyc2VRdWVyeVN0cmluZyhjdXJyZW50VGFyZ2V0LnNlYXJjaC5zbGljZSgxKSkgOiB7fTtcclxuXHRcdHdoaWxlIChjdXJyZW50VGFyZ2V0ICYmIGN1cnJlbnRUYXJnZXQubm9kZU5hbWUudG9VcHBlckNhc2UoKSAhPT0gXCJBXCIpIGN1cnJlbnRUYXJnZXQgPSBjdXJyZW50VGFyZ2V0LnBhcmVudE5vZGU7XHJcblx0XHQvLyBjbGVhciBwZW5kaW5nUmVxdWVzdHMgYmVjYXVzZSB3ZSB3YW50IGFuIGltbWVkaWF0ZSByb3V0ZSBjaGFuZ2VcclxuXHRcdHBlbmRpbmdSZXF1ZXN0cyA9IDA7XHJcblx0XHRtLnJvdXRlKGN1cnJlbnRUYXJnZXRbbS5yb3V0ZS5tb2RlXS5zbGljZShtb2Rlc1ttLnJvdXRlLm1vZGVdLmxlbmd0aCksIGFyZ3MpO1xyXG5cdH1cclxuXHRmdW5jdGlvbiBzZXRTY3JvbGwoKSB7XHJcblx0XHRpZiAobS5yb3V0ZS5tb2RlICE9PSBcImhhc2hcIiAmJiAkbG9jYXRpb24uaGFzaCkgJGxvY2F0aW9uLmhhc2ggPSAkbG9jYXRpb24uaGFzaDtcclxuXHRcdGVsc2Ugd2luZG93LnNjcm9sbFRvKDAsIDApO1xyXG5cdH1cclxuXHRmdW5jdGlvbiBidWlsZFF1ZXJ5U3RyaW5nKG9iamVjdCwgcHJlZml4KSB7XHJcblx0XHR2YXIgZHVwbGljYXRlcyA9IHt9O1xyXG5cdFx0dmFyIHN0ciA9IFtdO1xyXG5cdFx0Zm9yICh2YXIgcHJvcCBpbiBvYmplY3QpIHtcclxuXHRcdFx0dmFyIGtleSA9IHByZWZpeCA/IHByZWZpeCArIFwiW1wiICsgcHJvcCArIFwiXVwiIDogcHJvcDtcclxuXHRcdFx0dmFyIHZhbHVlID0gb2JqZWN0W3Byb3BdO1xyXG5cclxuXHRcdFx0aWYgKHZhbHVlID09PSBudWxsKSB7XHJcblx0XHRcdFx0c3RyLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkpO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xyXG5cdFx0XHRcdHN0ci5wdXNoKGJ1aWxkUXVlcnlTdHJpbmcodmFsdWUsIGtleSkpO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpKSB7XHJcblx0XHRcdFx0dmFyIGtleXMgPSBbXTtcclxuXHRcdFx0XHRkdXBsaWNhdGVzW2tleV0gPSBkdXBsaWNhdGVzW2tleV0gfHwge307XHJcblx0XHRcdFx0Zm9yRWFjaCh2YWx1ZSwgZnVuY3Rpb24gKGl0ZW0pIHtcclxuXHRcdFx0XHRcdGlmICghZHVwbGljYXRlc1trZXldW2l0ZW1dKSB7XHJcblx0XHRcdFx0XHRcdGR1cGxpY2F0ZXNba2V5XVtpdGVtXSA9IHRydWU7XHJcblx0XHRcdFx0XHRcdGtleXMucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KGl0ZW0pKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRzdHIucHVzaChrZXlzLmpvaW4oXCImXCIpKTtcclxuXHRcdFx0fSBlbHNlIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdFx0c3RyLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gc3RyLmpvaW4oXCImXCIpO1xyXG5cdH1cclxuXHRmdW5jdGlvbiBwYXJzZVF1ZXJ5U3RyaW5nKHN0cikge1xyXG5cdFx0aWYgKHN0ciA9PT0gXCJcIiB8fCBzdHIgPT0gbnVsbCkgcmV0dXJuIHt9O1xyXG5cdFx0aWYgKHN0ci5jaGFyQXQoMCkgPT09IFwiP1wiKSBzdHIgPSBzdHIuc2xpY2UoMSk7XHJcblxyXG5cdFx0dmFyIHBhaXJzID0gc3RyLnNwbGl0KFwiJlwiKSwgcGFyYW1zID0ge307XHJcblx0XHRmb3JFYWNoKHBhaXJzLCBmdW5jdGlvbiAoc3RyaW5nKSB7XHJcblx0XHRcdHZhciBwYWlyID0gc3RyaW5nLnNwbGl0KFwiPVwiKTtcclxuXHRcdFx0dmFyIGtleSA9IGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzBdKTtcclxuXHRcdFx0dmFyIHZhbHVlID0gcGFpci5sZW5ndGggPT09IDIgPyBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSkgOiBudWxsO1xyXG5cdFx0XHRpZiAocGFyYW1zW2tleV0gIT0gbnVsbCkge1xyXG5cdFx0XHRcdGlmICghaXNBcnJheShwYXJhbXNba2V5XSkpIHBhcmFtc1trZXldID0gW3BhcmFtc1trZXldXTtcclxuXHRcdFx0XHRwYXJhbXNba2V5XS5wdXNoKHZhbHVlKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHBhcmFtc1trZXldID0gdmFsdWU7XHJcblx0XHR9KTtcclxuXHJcblx0XHRyZXR1cm4gcGFyYW1zO1xyXG5cdH1cclxuXHRtLnJvdXRlLmJ1aWxkUXVlcnlTdHJpbmcgPSBidWlsZFF1ZXJ5U3RyaW5nO1xyXG5cdG0ucm91dGUucGFyc2VRdWVyeVN0cmluZyA9IHBhcnNlUXVlcnlTdHJpbmc7XHJcblxyXG5cdGZ1bmN0aW9uIHJlc2V0KHJvb3QpIHtcclxuXHRcdHZhciBjYWNoZUtleSA9IGdldENlbGxDYWNoZUtleShyb290KTtcclxuXHRcdGNsZWFyKHJvb3QuY2hpbGROb2RlcywgY2VsbENhY2hlW2NhY2hlS2V5XSk7XHJcblx0XHRjZWxsQ2FjaGVbY2FjaGVLZXldID0gdW5kZWZpbmVkO1xyXG5cdH1cclxuXHJcblx0bS5kZWZlcnJlZCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdHZhciBkZWZlcnJlZCA9IG5ldyBEZWZlcnJlZCgpO1xyXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSA9IHByb3BpZnkoZGVmZXJyZWQucHJvbWlzZSk7XHJcblx0XHRyZXR1cm4gZGVmZXJyZWQ7XHJcblx0fTtcclxuXHRmdW5jdGlvbiBwcm9waWZ5KHByb21pc2UsIGluaXRpYWxWYWx1ZSkge1xyXG5cdFx0dmFyIHByb3AgPSBtLnByb3AoaW5pdGlhbFZhbHVlKTtcclxuXHRcdHByb21pc2UudGhlbihwcm9wKTtcclxuXHRcdHByb3AudGhlbiA9IGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xyXG5cdFx0XHRyZXR1cm4gcHJvcGlmeShwcm9taXNlLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KSwgaW5pdGlhbFZhbHVlKTtcclxuXHRcdH07XHJcblx0XHRwcm9wW1wiY2F0Y2hcIl0gPSBwcm9wLnRoZW4uYmluZChudWxsLCBudWxsKTtcclxuXHRcdHJldHVybiBwcm9wO1xyXG5cdH1cclxuXHQvL1Byb21pei5taXRocmlsLmpzIHwgWm9sbWVpc3RlciB8IE1JVFxyXG5cdC8vYSBtb2RpZmllZCB2ZXJzaW9uIG9mIFByb21pei5qcywgd2hpY2ggZG9lcyBub3QgY29uZm9ybSB0byBQcm9taXNlcy9BKyBmb3IgdHdvIHJlYXNvbnM6XHJcblx0Ly8xKSBgdGhlbmAgY2FsbGJhY2tzIGFyZSBjYWxsZWQgc3luY2hyb25vdXNseSAoYmVjYXVzZSBzZXRUaW1lb3V0IGlzIHRvbyBzbG93LCBhbmQgdGhlIHNldEltbWVkaWF0ZSBwb2x5ZmlsbCBpcyB0b28gYmlnXHJcblx0Ly8yKSB0aHJvd2luZyBzdWJjbGFzc2VzIG9mIEVycm9yIGNhdXNlIHRoZSBlcnJvciB0byBiZSBidWJibGVkIHVwIGluc3RlYWQgb2YgdHJpZ2dlcmluZyByZWplY3Rpb24gKGJlY2F1c2UgdGhlIHNwZWMgZG9lcyBub3QgYWNjb3VudCBmb3IgdGhlIGltcG9ydGFudCB1c2UgY2FzZSBvZiBkZWZhdWx0IGJyb3dzZXIgZXJyb3IgaGFuZGxpbmcsIGkuZS4gbWVzc2FnZSB3LyBsaW5lIG51bWJlcilcclxuXHRmdW5jdGlvbiBEZWZlcnJlZChzdWNjZXNzQ2FsbGJhY2ssIGZhaWx1cmVDYWxsYmFjaykge1xyXG5cdFx0dmFyIFJFU09MVklORyA9IDEsIFJFSkVDVElORyA9IDIsIFJFU09MVkVEID0gMywgUkVKRUNURUQgPSA0O1xyXG5cdFx0dmFyIHNlbGYgPSB0aGlzLCBzdGF0ZSA9IDAsIHByb21pc2VWYWx1ZSA9IDAsIG5leHQgPSBbXTtcclxuXHJcblx0XHRzZWxmLnByb21pc2UgPSB7fTtcclxuXHJcblx0XHRzZWxmLnJlc29sdmUgPSBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRpZiAoIXN0YXRlKSB7XHJcblx0XHRcdFx0cHJvbWlzZVZhbHVlID0gdmFsdWU7XHJcblx0XHRcdFx0c3RhdGUgPSBSRVNPTFZJTkc7XHJcblxyXG5cdFx0XHRcdGZpcmUoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH07XHJcblxyXG5cdFx0c2VsZi5yZWplY3QgPSBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRpZiAoIXN0YXRlKSB7XHJcblx0XHRcdFx0cHJvbWlzZVZhbHVlID0gdmFsdWU7XHJcblx0XHRcdFx0c3RhdGUgPSBSRUpFQ1RJTkc7XHJcblxyXG5cdFx0XHRcdGZpcmUoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH07XHJcblxyXG5cdFx0c2VsZi5wcm9taXNlLnRoZW4gPSBmdW5jdGlvbihzdWNjZXNzQ2FsbGJhY2ssIGZhaWx1cmVDYWxsYmFjaykge1xyXG5cdFx0XHR2YXIgZGVmZXJyZWQgPSBuZXcgRGVmZXJyZWQoc3VjY2Vzc0NhbGxiYWNrLCBmYWlsdXJlQ2FsbGJhY2spXHJcblx0XHRcdGlmIChzdGF0ZSA9PT0gUkVTT0xWRUQpIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKHByb21pc2VWYWx1ZSk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZiAoc3RhdGUgPT09IFJFSkVDVEVEKSB7XHJcblx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KHByb21pc2VWYWx1ZSk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0bmV4dC5wdXNoKGRlZmVycmVkKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZVxyXG5cdFx0fTtcclxuXHJcblx0XHRmdW5jdGlvbiBmaW5pc2godHlwZSkge1xyXG5cdFx0XHRzdGF0ZSA9IHR5cGUgfHwgUkVKRUNURUQ7XHJcblx0XHRcdG5leHQubWFwKGZ1bmN0aW9uKGRlZmVycmVkKSB7XHJcblx0XHRcdFx0c3RhdGUgPT09IFJFU09MVkVEID8gZGVmZXJyZWQucmVzb2x2ZShwcm9taXNlVmFsdWUpIDogZGVmZXJyZWQucmVqZWN0KHByb21pc2VWYWx1ZSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHRoZW5uYWJsZSh0aGVuLCBzdWNjZXNzQ2FsbGJhY2ssIGZhaWx1cmVDYWxsYmFjaywgbm90VGhlbm5hYmxlQ2FsbGJhY2spIHtcclxuXHRcdFx0aWYgKCgocHJvbWlzZVZhbHVlICE9IG51bGwgJiYgaXNPYmplY3QocHJvbWlzZVZhbHVlKSkgfHwgaXNGdW5jdGlvbihwcm9taXNlVmFsdWUpKSAmJiBpc0Z1bmN0aW9uKHRoZW4pKSB7XHJcblx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdC8vIGNvdW50IHByb3RlY3RzIGFnYWluc3QgYWJ1c2UgY2FsbHMgZnJvbSBzcGVjIGNoZWNrZXJcclxuXHRcdFx0XHRcdHZhciBjb3VudCA9IDA7XHJcblx0XHRcdFx0XHR0aGVuLmNhbGwocHJvbWlzZVZhbHVlLCBmdW5jdGlvbih2YWx1ZSkge1xyXG5cdFx0XHRcdFx0XHRpZiAoY291bnQrKykgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRwcm9taXNlVmFsdWUgPSB2YWx1ZTtcclxuXHRcdFx0XHRcdFx0c3VjY2Vzc0NhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHR9LCBmdW5jdGlvbiAodmFsdWUpIHtcclxuXHRcdFx0XHRcdFx0aWYgKGNvdW50KyspIHJldHVybjtcclxuXHRcdFx0XHRcdFx0cHJvbWlzZVZhbHVlID0gdmFsdWU7XHJcblx0XHRcdFx0XHRcdGZhaWx1cmVDYWxsYmFjaygpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNhdGNoIChlKSB7XHJcblx0XHRcdFx0XHRtLmRlZmVycmVkLm9uZXJyb3IoZSk7XHJcblx0XHRcdFx0XHRwcm9taXNlVmFsdWUgPSBlO1xyXG5cdFx0XHRcdFx0ZmFpbHVyZUNhbGxiYWNrKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdG5vdFRoZW5uYWJsZUNhbGxiYWNrKCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBmaXJlKCkge1xyXG5cdFx0XHQvLyBjaGVjayBpZiBpdCdzIGEgdGhlbmFibGVcclxuXHRcdFx0dmFyIHRoZW47XHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0dGhlbiA9IHByb21pc2VWYWx1ZSAmJiBwcm9taXNlVmFsdWUudGhlbjtcclxuXHRcdFx0fVxyXG5cdFx0XHRjYXRjaCAoZSkge1xyXG5cdFx0XHRcdG0uZGVmZXJyZWQub25lcnJvcihlKTtcclxuXHRcdFx0XHRwcm9taXNlVmFsdWUgPSBlO1xyXG5cdFx0XHRcdHN0YXRlID0gUkVKRUNUSU5HO1xyXG5cdFx0XHRcdHJldHVybiBmaXJlKCk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmIChzdGF0ZSA9PT0gUkVKRUNUSU5HKSB7XHJcblx0XHRcdFx0bS5kZWZlcnJlZC5vbmVycm9yKHByb21pc2VWYWx1ZSlcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dGhlbm5hYmxlKHRoZW4sIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRzdGF0ZSA9IFJFU09MVklOR1xyXG5cdFx0XHRcdGZpcmUoKVxyXG5cdFx0XHR9LCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0c3RhdGUgPSBSRUpFQ1RJTkdcclxuXHRcdFx0XHRmaXJlKClcclxuXHRcdFx0fSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHRpZiAoc3RhdGUgPT09IFJFU09MVklORyAmJiBpc0Z1bmN0aW9uKHN1Y2Nlc3NDYWxsYmFjaykpIHtcclxuXHRcdFx0XHRcdFx0cHJvbWlzZVZhbHVlID0gc3VjY2Vzc0NhbGxiYWNrKHByb21pc2VWYWx1ZSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRlbHNlIGlmIChzdGF0ZSA9PT0gUkVKRUNUSU5HICYmIGlzRnVuY3Rpb24oZmFpbHVyZUNhbGxiYWNrKSkge1xyXG5cdFx0XHRcdFx0XHRwcm9taXNlVmFsdWUgPSBmYWlsdXJlQ2FsbGJhY2socHJvbWlzZVZhbHVlKTtcclxuXHRcdFx0XHRcdFx0c3RhdGUgPSBSRVNPTFZJTkc7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNhdGNoIChlKSB7XHJcblx0XHRcdFx0XHRtLmRlZmVycmVkLm9uZXJyb3IoZSk7XHJcblx0XHRcdFx0XHRwcm9taXNlVmFsdWUgPSBlO1xyXG5cdFx0XHRcdFx0cmV0dXJuIGZpbmlzaCgpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKHByb21pc2VWYWx1ZSA9PT0gc2VsZikge1xyXG5cdFx0XHRcdFx0cHJvbWlzZVZhbHVlID0gVHlwZUVycm9yKCk7XHJcblx0XHRcdFx0XHRmaW5pc2goKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dGhlbm5hYmxlKHRoZW4sIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0ZmluaXNoKFJFU09MVkVEKTtcclxuXHRcdFx0XHRcdH0sIGZpbmlzaCwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRmaW5pc2goc3RhdGUgPT09IFJFU09MVklORyAmJiBSRVNPTFZFRCk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRtLmRlZmVycmVkLm9uZXJyb3IgPSBmdW5jdGlvbihlKSB7XHJcblx0XHRpZiAodHlwZS5jYWxsKGUpID09PSBcIltvYmplY3QgRXJyb3JdXCIgJiYgIWUuY29uc3RydWN0b3IudG9TdHJpbmcoKS5tYXRjaCgvIEVycm9yLykpIHtcclxuXHRcdFx0cGVuZGluZ1JlcXVlc3RzID0gMDtcclxuXHRcdFx0dGhyb3cgZTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRtLnN5bmMgPSBmdW5jdGlvbihhcmdzKSB7XHJcblx0XHR2YXIgbWV0aG9kID0gXCJyZXNvbHZlXCI7XHJcblxyXG5cdFx0ZnVuY3Rpb24gc3luY2hyb25pemVyKHBvcywgcmVzb2x2ZWQpIHtcclxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XHJcblx0XHRcdFx0cmVzdWx0c1twb3NdID0gdmFsdWU7XHJcblx0XHRcdFx0aWYgKCFyZXNvbHZlZCkgbWV0aG9kID0gXCJyZWplY3RcIjtcclxuXHRcdFx0XHRpZiAoLS1vdXRzdGFuZGluZyA9PT0gMCkge1xyXG5cdFx0XHRcdFx0ZGVmZXJyZWQucHJvbWlzZShyZXN1bHRzKTtcclxuXHRcdFx0XHRcdGRlZmVycmVkW21ldGhvZF0ocmVzdWx0cyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiB2YWx1ZTtcclxuXHRcdFx0fTtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgZGVmZXJyZWQgPSBtLmRlZmVycmVkKCk7XHJcblx0XHR2YXIgb3V0c3RhbmRpbmcgPSBhcmdzLmxlbmd0aDtcclxuXHRcdHZhciByZXN1bHRzID0gbmV3IEFycmF5KG91dHN0YW5kaW5nKTtcclxuXHRcdGlmIChhcmdzLmxlbmd0aCA+IDApIHtcclxuXHRcdFx0Zm9yRWFjaChhcmdzLCBmdW5jdGlvbiAoYXJnLCBpKSB7XHJcblx0XHRcdFx0YXJnLnRoZW4oc3luY2hyb25pemVyKGksIHRydWUpLCBzeW5jaHJvbml6ZXIoaSwgZmFsc2UpKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIGRlZmVycmVkLnJlc29sdmUoW10pO1xyXG5cclxuXHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG5cdH07XHJcblx0ZnVuY3Rpb24gaWRlbnRpdHkodmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9XHJcblxyXG5cdGZ1bmN0aW9uIGFqYXgob3B0aW9ucykge1xyXG5cdFx0aWYgKG9wdGlvbnMuZGF0YVR5cGUgJiYgb3B0aW9ucy5kYXRhVHlwZS50b0xvd2VyQ2FzZSgpID09PSBcImpzb25wXCIpIHtcclxuXHRcdFx0dmFyIGNhbGxiYWNrS2V5ID0gXCJtaXRocmlsX2NhbGxiYWNrX1wiICsgbmV3IERhdGUoKS5nZXRUaW1lKCkgKyBcIl9cIiArIChNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxZTE2KSkudG9TdHJpbmcoMzYpXHJcblx0XHRcdHZhciBzY3JpcHQgPSAkZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcclxuXHJcblx0XHRcdHdpbmRvd1tjYWxsYmFja0tleV0gPSBmdW5jdGlvbihyZXNwKSB7XHJcblx0XHRcdFx0c2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcclxuXHRcdFx0XHRvcHRpb25zLm9ubG9hZCh7XHJcblx0XHRcdFx0XHR0eXBlOiBcImxvYWRcIixcclxuXHRcdFx0XHRcdHRhcmdldDoge1xyXG5cdFx0XHRcdFx0XHRyZXNwb25zZVRleHQ6IHJlc3BcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHR3aW5kb3dbY2FsbGJhY2tLZXldID0gdW5kZWZpbmVkO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0c2NyaXB0Lm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xyXG5cclxuXHRcdFx0XHRvcHRpb25zLm9uZXJyb3Ioe1xyXG5cdFx0XHRcdFx0dHlwZTogXCJlcnJvclwiLFxyXG5cdFx0XHRcdFx0dGFyZ2V0OiB7XHJcblx0XHRcdFx0XHRcdHN0YXR1czogNTAwLFxyXG5cdFx0XHRcdFx0XHRyZXNwb25zZVRleHQ6IEpTT04uc3RyaW5naWZ5KHtcclxuXHRcdFx0XHRcdFx0XHRlcnJvcjogXCJFcnJvciBtYWtpbmcganNvbnAgcmVxdWVzdFwiXHJcblx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0d2luZG93W2NhbGxiYWNrS2V5XSA9IHVuZGVmaW5lZDtcclxuXHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRzY3JpcHQub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0c2NyaXB0LnNyYyA9IG9wdGlvbnMudXJsXHJcblx0XHRcdFx0KyAob3B0aW9ucy51cmwuaW5kZXhPZihcIj9cIikgPiAwID8gXCImXCIgOiBcIj9cIilcclxuXHRcdFx0XHQrIChvcHRpb25zLmNhbGxiYWNrS2V5ID8gb3B0aW9ucy5jYWxsYmFja0tleSA6IFwiY2FsbGJhY2tcIilcclxuXHRcdFx0XHQrIFwiPVwiICsgY2FsbGJhY2tLZXlcclxuXHRcdFx0XHQrIFwiJlwiICsgYnVpbGRRdWVyeVN0cmluZyhvcHRpb25zLmRhdGEgfHwge30pO1xyXG5cdFx0XHQkZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdHZhciB4aHIgPSBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XHJcblx0XHRcdHhoci5vcGVuKG9wdGlvbnMubWV0aG9kLCBvcHRpb25zLnVybCwgdHJ1ZSwgb3B0aW9ucy51c2VyLCBvcHRpb25zLnBhc3N3b3JkKTtcclxuXHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCkge1xyXG5cdFx0XHRcdFx0aWYgKHhoci5zdGF0dXMgPj0gMjAwICYmIHhoci5zdGF0dXMgPCAzMDApIG9wdGlvbnMub25sb2FkKHt0eXBlOiBcImxvYWRcIiwgdGFyZ2V0OiB4aHJ9KTtcclxuXHRcdFx0XHRcdGVsc2Ugb3B0aW9ucy5vbmVycm9yKHt0eXBlOiBcImVycm9yXCIsIHRhcmdldDogeGhyfSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRpZiAob3B0aW9ucy5zZXJpYWxpemUgPT09IEpTT04uc3RyaW5naWZ5ICYmIG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLm1ldGhvZCAhPT0gXCJHRVRcIikge1xyXG5cdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOFwiKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAob3B0aW9ucy5kZXNlcmlhbGl6ZSA9PT0gSlNPTi5wYXJzZSkge1xyXG5cdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0XCIsIFwiYXBwbGljYXRpb24vanNvbiwgdGV4dC8qXCIpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChpc0Z1bmN0aW9uKG9wdGlvbnMuY29uZmlnKSkge1xyXG5cdFx0XHRcdHZhciBtYXliZVhociA9IG9wdGlvbnMuY29uZmlnKHhociwgb3B0aW9ucyk7XHJcblx0XHRcdFx0aWYgKG1heWJlWGhyICE9IG51bGwpIHhociA9IG1heWJlWGhyO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR2YXIgZGF0YSA9IG9wdGlvbnMubWV0aG9kID09PSBcIkdFVFwiIHx8ICFvcHRpb25zLmRhdGEgPyBcIlwiIDogb3B0aW9ucy5kYXRhO1xyXG5cdFx0XHRpZiAoZGF0YSAmJiAoIWlzU3RyaW5nKGRhdGEpICYmIGRhdGEuY29uc3RydWN0b3IgIT09IHdpbmRvdy5Gb3JtRGF0YSkpIHtcclxuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJSZXF1ZXN0IGRhdGEgc2hvdWxkIGJlIGVpdGhlciBiZSBhIHN0cmluZyBvciBGb3JtRGF0YS4gQ2hlY2sgdGhlIGBzZXJpYWxpemVgIG9wdGlvbiBpbiBgbS5yZXF1ZXN0YFwiKTtcclxuXHRcdFx0fVxyXG5cdFx0XHR4aHIuc2VuZChkYXRhKTtcclxuXHRcdFx0cmV0dXJuIHhocjtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGJpbmREYXRhKHhock9wdGlvbnMsIGRhdGEsIHNlcmlhbGl6ZSkge1xyXG5cdFx0aWYgKHhock9wdGlvbnMubWV0aG9kID09PSBcIkdFVFwiICYmIHhock9wdGlvbnMuZGF0YVR5cGUgIT09IFwianNvbnBcIikge1xyXG5cdFx0XHR2YXIgcHJlZml4ID0geGhyT3B0aW9ucy51cmwuaW5kZXhPZihcIj9cIikgPCAwID8gXCI/XCIgOiBcIiZcIjtcclxuXHRcdFx0dmFyIHF1ZXJ5c3RyaW5nID0gYnVpbGRRdWVyeVN0cmluZyhkYXRhKTtcclxuXHRcdFx0eGhyT3B0aW9ucy51cmwgPSB4aHJPcHRpb25zLnVybCArIChxdWVyeXN0cmluZyA/IHByZWZpeCArIHF1ZXJ5c3RyaW5nIDogXCJcIik7XHJcblx0XHR9XHJcblx0XHRlbHNlIHhock9wdGlvbnMuZGF0YSA9IHNlcmlhbGl6ZShkYXRhKTtcclxuXHRcdHJldHVybiB4aHJPcHRpb25zO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gcGFyYW1ldGVyaXplVXJsKHVybCwgZGF0YSkge1xyXG5cdFx0dmFyIHRva2VucyA9IHVybC5tYXRjaCgvOlthLXpdXFx3Ky9naSk7XHJcblx0XHRpZiAodG9rZW5zICYmIGRhdGEpIHtcclxuXHRcdFx0Zm9yRWFjaCh0b2tlbnMsIGZ1bmN0aW9uICh0b2tlbikge1xyXG5cdFx0XHRcdHZhciBrZXkgPSB0b2tlbi5zbGljZSgxKTtcclxuXHRcdFx0XHR1cmwgPSB1cmwucmVwbGFjZSh0b2tlbiwgZGF0YVtrZXldKTtcclxuXHRcdFx0XHRkZWxldGUgZGF0YVtrZXldO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdHJldHVybiB1cmw7XHJcblx0fVxyXG5cclxuXHRtLnJlcXVlc3QgPSBmdW5jdGlvbih4aHJPcHRpb25zKSB7XHJcblx0XHRpZiAoeGhyT3B0aW9ucy5iYWNrZ3JvdW5kICE9PSB0cnVlKSBtLnN0YXJ0Q29tcHV0YXRpb24oKTtcclxuXHRcdHZhciBkZWZlcnJlZCA9IG5ldyBEZWZlcnJlZCgpO1xyXG5cdFx0dmFyIGlzSlNPTlAgPSB4aHJPcHRpb25zLmRhdGFUeXBlICYmIHhock9wdGlvbnMuZGF0YVR5cGUudG9Mb3dlckNhc2UoKSA9PT0gXCJqc29ucFwiXHJcblx0XHR2YXIgc2VyaWFsaXplID0geGhyT3B0aW9ucy5zZXJpYWxpemUgPSBpc0pTT05QID8gaWRlbnRpdHkgOiB4aHJPcHRpb25zLnNlcmlhbGl6ZSB8fCBKU09OLnN0cmluZ2lmeTtcclxuXHRcdHZhciBkZXNlcmlhbGl6ZSA9IHhock9wdGlvbnMuZGVzZXJpYWxpemUgPSBpc0pTT05QID8gaWRlbnRpdHkgOiB4aHJPcHRpb25zLmRlc2VyaWFsaXplIHx8IEpTT04ucGFyc2U7XHJcblx0XHR2YXIgZXh0cmFjdCA9IGlzSlNPTlAgPyBmdW5jdGlvbihqc29ucCkgeyByZXR1cm4ganNvbnAucmVzcG9uc2VUZXh0IH0gOiB4aHJPcHRpb25zLmV4dHJhY3QgfHwgZnVuY3Rpb24oeGhyKSB7XHJcblx0XHRcdGlmICh4aHIucmVzcG9uc2VUZXh0Lmxlbmd0aCA9PT0gMCAmJiBkZXNlcmlhbGl6ZSA9PT0gSlNPTi5wYXJzZSkge1xyXG5cdFx0XHRcdHJldHVybiBudWxsXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuIHhoci5yZXNwb25zZVRleHRcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdHhock9wdGlvbnMubWV0aG9kID0gKHhock9wdGlvbnMubWV0aG9kIHx8IFwiR0VUXCIpLnRvVXBwZXJDYXNlKCk7XHJcblx0XHR4aHJPcHRpb25zLnVybCA9IHBhcmFtZXRlcml6ZVVybCh4aHJPcHRpb25zLnVybCwgeGhyT3B0aW9ucy5kYXRhKTtcclxuXHRcdHhock9wdGlvbnMgPSBiaW5kRGF0YSh4aHJPcHRpb25zLCB4aHJPcHRpb25zLmRhdGEsIHNlcmlhbGl6ZSk7XHJcblx0XHR4aHJPcHRpb25zLm9ubG9hZCA9IHhock9wdGlvbnMub25lcnJvciA9IGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRlID0gZSB8fCBldmVudDtcclxuXHRcdFx0XHR2YXIgdW53cmFwID0gKGUudHlwZSA9PT0gXCJsb2FkXCIgPyB4aHJPcHRpb25zLnVud3JhcFN1Y2Nlc3MgOiB4aHJPcHRpb25zLnVud3JhcEVycm9yKSB8fCBpZGVudGl0eTtcclxuXHRcdFx0XHR2YXIgcmVzcG9uc2UgPSB1bndyYXAoZGVzZXJpYWxpemUoZXh0cmFjdChlLnRhcmdldCwgeGhyT3B0aW9ucykpLCBlLnRhcmdldCk7XHJcblx0XHRcdFx0aWYgKGUudHlwZSA9PT0gXCJsb2FkXCIpIHtcclxuXHRcdFx0XHRcdGlmIChpc0FycmF5KHJlc3BvbnNlKSAmJiB4aHJPcHRpb25zLnR5cGUpIHtcclxuXHRcdFx0XHRcdFx0Zm9yRWFjaChyZXNwb25zZSwgZnVuY3Rpb24gKHJlcywgaSkge1xyXG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlW2ldID0gbmV3IHhock9wdGlvbnMudHlwZShyZXMpO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoeGhyT3B0aW9ucy50eXBlKSB7XHJcblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gbmV3IHhock9wdGlvbnMudHlwZShyZXNwb25zZSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QocmVzcG9uc2UpXHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRkZWZlcnJlZFtlLnR5cGUgPT09IFwibG9hZFwiID8gXCJyZXNvbHZlXCIgOiBcInJlamVjdFwiXShyZXNwb25zZSk7XHJcblx0XHRcdH1cclxuXHRcdFx0Y2F0Y2ggKGUpIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoZSk7XHJcblx0XHRcdH1cclxuXHRcdFx0ZmluYWxseSB7XHJcblx0XHRcdFx0aWYgKHhock9wdGlvbnMuYmFja2dyb3VuZCAhPT0gdHJ1ZSkgbS5lbmRDb21wdXRhdGlvbigpXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRhamF4KHhock9wdGlvbnMpO1xyXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSA9IHByb3BpZnkoZGVmZXJyZWQucHJvbWlzZSwgeGhyT3B0aW9ucy5pbml0aWFsVmFsdWUpO1xyXG5cdFx0cmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcblx0fTtcclxuXHJcblx0Ly90ZXN0aW5nIEFQSVxyXG5cdG0uZGVwcyA9IGZ1bmN0aW9uKG1vY2spIHtcclxuXHRcdGluaXRpYWxpemUod2luZG93ID0gbW9jayB8fCB3aW5kb3cpO1xyXG5cdFx0cmV0dXJuIHdpbmRvdztcclxuXHR9O1xyXG5cdC8vZm9yIGludGVybmFsIHRlc3Rpbmcgb25seSwgZG8gbm90IHVzZSBgbS5kZXBzLmZhY3RvcnlgXHJcblx0bS5kZXBzLmZhY3RvcnkgPSBhcHA7XHJcblxyXG5cdHJldHVybiBtO1xyXG59KSh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pO1xyXG5cclxuaWYgKHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgbW9kdWxlICE9IG51bGwgJiYgbW9kdWxlLmV4cG9ydHMpIG1vZHVsZS5leHBvcnRzID0gbTtcclxuZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIGRlZmluZShmdW5jdGlvbigpIHsgcmV0dXJuIG0gfSk7XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L21pdGhyaWwvbWl0aHJpbC5qc1xuICoqIG1vZHVsZSBpZCA9IDNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=');
},function(module,exports){eval('"use strict";\n\nmodule.exports = function (k) {\n  return function (o) {\n    return o[k];\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvaGVscGVycy9nZXQuanM/MGRkYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsV0FBQztTQUFJLFdBQUM7V0FBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0dBQUE7Q0FBQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBrID0+IG8gPT4gb1trXVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9hcHAvanMvaGVscGVycy9nZXQuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval("'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n	if (typeof Array.isArray === 'function') {\n		return Array.isArray(arr);\n	}\n\n	return toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n	if (!obj || toStr.call(obj) !== '[object Object]') {\n		return false;\n	}\n\n	var hasOwnConstructor = hasOwn.call(obj, 'constructor');\n	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n	// Not own constructor property must be Object\n	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n		return false;\n	}\n\n	// Own properties are enumerated firstly, so to speed up,\n	// if last one is own, then all properties are own.\n	var key;\n	for (key in obj) {/**/}\n\n	return typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n	var options, name, src, copy, copyIsArray, clone,\n		target = arguments[0],\n		i = 1,\n		length = arguments.length,\n		deep = false;\n\n	// Handle a deep copy situation\n	if (typeof target === 'boolean') {\n		deep = target;\n		target = arguments[1] || {};\n		// skip the boolean and the target\n		i = 2;\n	} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n		target = {};\n	}\n\n	for (; i < length; ++i) {\n		options = arguments[i];\n		// Only deal with non-null/undefined values\n		if (options != null) {\n			// Extend the base object\n			for (name in options) {\n				src = target[name];\n				copy = options[name];\n\n				// Prevent never-ending loop\n				if (target !== copy) {\n					// Recurse if we're merging plain objects or arrays\n					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n						if (copyIsArray) {\n							copyIsArray = false;\n							clone = src && isArray(src) ? src : [];\n						} else {\n							clone = src && isPlainObject(src) ? src : {};\n						}\n\n						// Never move original objects, clone them\n						target[name] = extend(deep, clone, copy);\n\n					// Don't bring in undefined values\n					} else if (typeof copy !== 'undefined') {\n						target[name] = copy;\n					}\n				}\n			}\n		}\n	}\n\n	// Return the modified object\n	return target;\n};\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2V4dGVuZC9pbmRleC5qcz8zNmM4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1COztBQUVuQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTs7QUFFQSxPQUFPLFlBQVk7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG52YXIgaXNBcnJheSA9IGZ1bmN0aW9uIGlzQXJyYXkoYXJyKSB7XG5cdGlmICh0eXBlb2YgQXJyYXkuaXNBcnJheSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHJldHVybiBBcnJheS5pc0FycmF5KGFycik7XG5cdH1cblxuXHRyZXR1cm4gdG9TdHIuY2FsbChhcnIpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcblxudmFyIGlzUGxhaW5PYmplY3QgPSBmdW5jdGlvbiBpc1BsYWluT2JqZWN0KG9iaikge1xuXHRpZiAoIW9iaiB8fCB0b1N0ci5jYWxsKG9iaikgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0dmFyIGhhc093bkNvbnN0cnVjdG9yID0gaGFzT3duLmNhbGwob2JqLCAnY29uc3RydWN0b3InKTtcblx0dmFyIGhhc0lzUHJvdG90eXBlT2YgPSBvYmouY29uc3RydWN0b3IgJiYgb2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSAmJiBoYXNPd24uY2FsbChvYmouY29uc3RydWN0b3IucHJvdG90eXBlLCAnaXNQcm90b3R5cGVPZicpO1xuXHQvLyBOb3Qgb3duIGNvbnN0cnVjdG9yIHByb3BlcnR5IG11c3QgYmUgT2JqZWN0XG5cdGlmIChvYmouY29uc3RydWN0b3IgJiYgIWhhc093bkNvbnN0cnVjdG9yICYmICFoYXNJc1Byb3RvdHlwZU9mKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0Ly8gT3duIHByb3BlcnRpZXMgYXJlIGVudW1lcmF0ZWQgZmlyc3RseSwgc28gdG8gc3BlZWQgdXAsXG5cdC8vIGlmIGxhc3Qgb25lIGlzIG93biwgdGhlbiBhbGwgcHJvcGVydGllcyBhcmUgb3duLlxuXHR2YXIga2V5O1xuXHRmb3IgKGtleSBpbiBvYmopIHsvKiovfVxuXG5cdHJldHVybiB0eXBlb2Yga2V5ID09PSAndW5kZWZpbmVkJyB8fCBoYXNPd24uY2FsbChvYmosIGtleSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGV4dGVuZCgpIHtcblx0dmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1swXSxcblx0XHRpID0gMSxcblx0XHRsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuXHRcdGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnYm9vbGVhbicpIHtcblx0XHRkZWVwID0gdGFyZ2V0O1xuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sxXSB8fCB7fTtcblx0XHQvLyBza2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XG5cdFx0aSA9IDI7XG5cdH0gZWxzZSBpZiAoKHR5cGVvZiB0YXJnZXQgIT09ICdvYmplY3QnICYmIHR5cGVvZiB0YXJnZXQgIT09ICdmdW5jdGlvbicpIHx8IHRhcmdldCA9PSBudWxsKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHRmb3IgKDsgaSA8IGxlbmd0aDsgKytpKSB7XG5cdFx0b3B0aW9ucyA9IGFyZ3VtZW50c1tpXTtcblx0XHQvLyBPbmx5IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzXG5cdFx0aWYgKG9wdGlvbnMgIT0gbnVsbCkge1xuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yIChuYW1lIGluIG9wdGlvbnMpIHtcblx0XHRcdFx0c3JjID0gdGFyZ2V0W25hbWVdO1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1tuYW1lXTtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXG5cdFx0XHRcdGlmICh0YXJnZXQgIT09IGNvcHkpIHtcblx0XHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0XHRpZiAoZGVlcCAmJiBjb3B5ICYmIChpc1BsYWluT2JqZWN0KGNvcHkpIHx8IChjb3B5SXNBcnJheSA9IGlzQXJyYXkoY29weSkpKSkge1xuXHRcdFx0XHRcdFx0aWYgKGNvcHlJc0FycmF5KSB7XG5cdFx0XHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIGlzQXJyYXkoc3JjKSA/IHNyYyA6IFtdO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgaXNQbGFpbk9iamVjdChzcmMpID8gc3JjIDoge307XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdFx0dGFyZ2V0W25hbWVdID0gZXh0ZW5kKGRlZXAsIGNsb25lLCBjb3B5KTtcblxuXHRcdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcblx0XHRcdFx0XHR9IGVsc2UgaWYgKHR5cGVvZiBjb3B5ICE9PSAndW5kZWZpbmVkJykge1xuXHRcdFx0XHRcdFx0dGFyZ2V0W25hbWVdID0gY29weTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZXh0ZW5kL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval('"use strict";\n\nvar status = {\n	PASS: "pass",\n	YUMMY: "yummy",\n	YUCK: "yuck",\n	ENABLED: "enabled",\n	DISABLED: "disabled"\n};\n\nmodule.exports = {\n	status: status\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvY29uc3RhbnRzLmpzPzQxMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE1BQU0sR0FBRztBQUNaLEtBQUksRUFBRSxNQUFNO0FBQ1osTUFBSyxFQUFFLE9BQU87QUFDZCxLQUFJLEVBQUUsTUFBTTtBQUNaLFFBQU8sRUFBRSxTQUFTO0FBQ2xCLFNBQVEsRUFBRSxVQUFVO0NBQ3BCOztBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUc7QUFDaEIsT0FBTSxFQUFDLE1BQU07Q0FDYiIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHN0YXR1cyA9IHtcblx0UEFTUzogJ3Bhc3MnLFxuXHRZVU1NWTogJ3l1bW15Jyxcblx0WVVDSzogJ3l1Y2snLFxuXHRFTkFCTEVEOiAnZW5hYmxlZCcsXG5cdERJU0FCTEVEOiAnZGlzYWJsZWQnXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXHRzdGF0dXM6c3RhdHVzXG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2FwcC9qcy9jb25zdGFudHMuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('"use strict";\n\nmodule.exports = function (value, errorText) {\n	var sprintfValues = Array.prototype.slice.call(arguments, 2);\n	if (!value) {\n		var text = errorText.replace(/%s/g, function (_) {\n			return sprintfValues.shift();\n		});\n		throw new Error(text);\n	}\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvaGVscGVycy9hc3NlcnQuanM/NjIxOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUUsU0FBUyxFQUFFO0FBQzNDLEtBQUksYUFBYSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBQzVELEtBQUksQ0FBRSxLQUFLLEVBQUU7QUFDWixNQUFJLElBQUksR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxXQUFDO1VBQUksYUFBYSxDQUFDLEtBQUssRUFBRTtHQUFBLENBQUM7QUFDL0QsUUFBTSxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDckI7Q0FDRCIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbHVlLCBlcnJvclRleHQpIHtcblx0bGV0IHNwcmludGZWYWx1ZXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpXG5cdGlmICghIHZhbHVlKSB7XG5cdFx0bGV0IHRleHQgPSBlcnJvclRleHQucmVwbGFjZSgvJXMvZywgXyA9PiBzcHJpbnRmVmFsdWVzLnNoaWZ0KCkpXG5cdFx0dGhyb3cgbmV3IEVycm9yKHRleHQpXG5cdH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2pzL2hlbHBlcnMvYXNzZXJ0LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports){eval('"use strict";\n\nmodule.exports = function interleave(list, glue) {\n	if (list.length === 0) {\n		return [];\n	}if (list.length === 1) {\n		return list[0];\n	}var newList = [list[0]],\n	    len = list.length,\n	    i = undefined;\n	for (i = 1; i < len; i++) {\n		newList.push(glue);\n		newList.push(list[i]);\n	}\n	return newList;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvaGVscGVycy9pbnRlcmxlYXZlLmpzPzFkZjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUU7QUFDaEQsS0FBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUM7QUFBRSxTQUFPLEVBQUU7RUFDaEMsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUM7QUFBRSxTQUFPLElBQUksQ0FBQyxDQUFDLENBQUM7RUFDckMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU07S0FBRSxDQUFDO0FBQzdDLE1BQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3pCLFNBQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ2xCLFNBQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ3JCO0FBQ0QsUUFBTyxPQUFPO0NBQ2QiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbnRlcmxlYXZlKGxpc3QsIGdsdWUpIHtcblx0aWYgKGxpc3QubGVuZ3RoID09PSAwKSByZXR1cm4gW11cblx0aWYgKGxpc3QubGVuZ3RoID09PSAxKSByZXR1cm4gbGlzdFswXVxuXHRsZXQgbmV3TGlzdCA9IFtsaXN0WzBdXSwgbGVuID0gbGlzdC5sZW5ndGgsIGlcblx0Zm9yIChpID0gMTsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0bmV3TGlzdC5wdXNoKGdsdWUpXG5cdFx0bmV3TGlzdC5wdXNoKGxpc3RbaV0pXG5cdH1cblx0cmV0dXJuIG5ld0xpc3Rcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2pzL2hlbHBlcnMvaW50ZXJsZWF2ZS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval('"use strict";\n\nmodule.exports = function (o, f) {\n	var o2 = {};\n	Object.keys(o).forEach(function (k) {\n		o2[k] = f(o[k], k, o);\n	});\n	return o2;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvaGVscGVycy9vbWFwLmpzPzkwYzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsQ0FBQyxFQUFFLENBQUMsRUFBSztBQUMxQixLQUFJLEVBQUUsR0FBRyxFQUFFO0FBQ1gsT0FBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBUyxDQUFDLEVBQUM7QUFDaEMsSUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUN0QixDQUFDO0FBQ0YsUUFBTyxFQUFFO0NBQ1QiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKG8sIGYpID0+IHtcblx0bGV0IG8yID0ge31cblx0T2JqZWN0LmtleXMobykuZm9yRWFjaChmdW5jdGlvbihrKXtcblx0XHQgbzJba10gPSBmKG9ba10sIGssIG8pXG5cdH0pXG5cdHJldHVybiBvMlxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9hcHAvanMvaGVscGVycy9vbWFwLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports){eval('"use strict";\n\nvar id = function (it) {\n	return it;\n};\n\n// returns all own properties of an object\nmodule.exports = function (o, f) {\n	f = f || id;\n	return Object.keys(o).map(function (k) {\n		return f(o[k], k);\n	});\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvaGVscGVycy9vdmFscy5qcz9jZWNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsSUFBSSxFQUFFLEdBQUcsWUFBRTtRQUFJLEVBQUU7Q0FBQTs7O0FBR2pCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ2hDLEVBQUMsR0FBRyxDQUFDLElBQUksRUFBRTtBQUNYLFFBQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsV0FBQztTQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBQUEsQ0FBQztDQUMxQyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxubGV0IGlkID0gaXQgPT4gaXRcblxuLy8gcmV0dXJucyBhbGwgb3duIHByb3BlcnRpZXMgb2YgYW4gb2JqZWN0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvLCBmKSB7XG5cdGYgPSBmIHx8IGlkXG5cdHJldHVybiBPYmplY3Qua2V5cyhvKS5tYXAoayA9PiBmKG9ba10sIGspKVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9hcHAvanMvaGVscGVycy9vdmFscy5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval("\"use strict\";\n\nvar get = __webpack_require__(4);\n\nfunction maybeWrap(callback) {\n	return typeof callback === \"string\" ? get(callback) : callback;\n}\n\nfunction reverse(callback) {\n	callback.__sortDesc = true;\n	return callback;\n}\n\nfunction sortBy() {\n	var funs = Array.prototype.slice.call(arguments).map(maybeWrap);\n	var sorter = function sorter(objA, objB) {\n		// console.log('iter -----------')\n		var i = 0,\n		    f;\n		while (funs[i]) {\n			f = funs[i];\n			// console.log('using fun ', i)\n			var a, b;\n			if (f.__sortDesc) {\n				b = f(objA);\n				a = f(objB);\n			} else {\n				a = f(objA);\n				b = f(objB);\n			}\n			// console.log('comparing ', a, b)\n			// if (a < b) console.log('result ', -1, objA, objB)\n			// if (a > b) console.log('result ', 1, objA, objB)\n			if (a < b) {\n				return -1;\n			}if (a > b) {\n				return 1;\n			} // try another callback\n			// console.log('equals')\n			i += 1;\n		}\n		return 0;\n	};\n	sorter.desc = function (callback) {\n		funs.push(reverse(maybeWrap(callback)));\n		return sorter;\n	};\n	sorter.asc = function (callback) {\n		funs.push(maybeWrap(callback));\n		return sorter;\n	};\n	return sorter;\n}\n\n// var test = [\n// 	{x:2.5,key:3000,name:'dddd'},\n// 	{x:2.5,key:4000,name:'cccc'},\n// 	{x:3.5,key:2000,name:'bbbb'},\n// 	{x:3.5,key:1000,name:'aaaa'}\n// ]\n\n// function dump(it) {\n// 	return [it.key,it.name,'x='+it.x].join(':')\n// }\n\n// function ftest (code, expect) {\n// 	// console.log('-------------------------------------')\n// 	// console.log('test ' + code)\n// 	var sorted = eval(code)\n// 	// console.log(sorted.map(dump))\n// 	var f1000 = x => x / 1000\n// 	var result = sorted.map(get('key')).map(f1000).join('')\n// 	if (result !== expect) {\n// 		console.log('FAIL')\n// 		console.log('expected ', expect)\n// 		console.log('result ', result)\n// 	}\n// }\n\n// ftest(\"test.sort(sortBy('key'))\", '1234')\n// ftest(\"test.sort(sortBy().asc('key'))\", '1234')\n// ftest(\"test.sort(sortBy().desc('x').desc('name'))\", '2134')\n// ftest(\"test.sort(sortBy().desc('x').asc('name'))\", '1243')\n// ftest(\"test.sort(sortBy('x').asc('name'))\", '4312')\n// ftest(\"test.sort(sortBy('x').desc('name'))\", '3421')\n// ftest(\"test.sort(sortBy('name').desc('x'))\", '1243')\n\nmodule.exports = sortBy;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvaGVscGVycy9zb3J0YnkuanM/NjIwZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksR0FBRyxHQUFHLG1CQUFPLENBQUMsQ0FBYSxDQUFDOztBQUVoQyxTQUFTLFNBQVMsQ0FBQyxRQUFRLEVBQUU7QUFDNUIsUUFBUSxPQUFPLFFBQVEsS0FBSyxRQUFRLEdBQUksR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLFFBQVE7Q0FDaEU7O0FBRUQsU0FBUyxPQUFPLENBQUMsUUFBUSxFQUFFO0FBQzFCLFNBQVEsQ0FBQyxVQUFVLEdBQUcsSUFBSTtBQUMxQixRQUFPLFFBQVE7Q0FDZjs7QUFFRCxTQUFTLE1BQU0sR0FBRztBQUNqQixLQUFJLElBQUksR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUMvRCxLQUFJLE1BQU0sR0FBRyxnQkFBUyxJQUFJLEVBQUUsSUFBSSxFQUFFOztBQUVqQyxNQUFJLENBQUMsR0FBRyxDQUFDO01BQUUsQ0FBQztBQUNaLFNBQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2QsSUFBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7O0FBRVgsT0FBSSxDQUFDLEVBQUUsQ0FBQztBQUNSLE9BQUksQ0FBQyxDQUFDLFVBQVUsRUFBRTtBQUNqQixLQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNYLEtBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ1gsTUFBTTtBQUNOLEtBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ1gsS0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDWDs7OztBQUlELE9BQUksQ0FBQyxHQUFHLENBQUM7QUFBRSxXQUFPLENBQUMsQ0FBQztJQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDO0FBQUUsV0FBTyxDQUFDO0lBQUE7O0FBR25CLElBQUMsSUFBSSxDQUFDO0dBQ047QUFDRCxTQUFPLENBQUM7RUFDUjtBQUNELE9BQU0sQ0FBQyxJQUFJLEdBQUcsVUFBUyxRQUFRLEVBQUU7QUFDaEMsTUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDdkMsU0FBTyxNQUFNO0VBQ2I7QUFDRCxPQUFNLENBQUMsR0FBRyxHQUFHLFVBQVMsUUFBUSxFQUFFO0FBQy9CLE1BQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzlCLFNBQU8sTUFBTTtFQUNiO0FBQ0QsUUFBTyxNQUFNO0NBQ2I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNELE1BQU0sQ0FBQyxPQUFPLEdBQUcsTUFBTSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnZXQgPSByZXF1aXJlKCdoZWxwZXJzL2dldCcpXG5cbmZ1bmN0aW9uIG1heWJlV3JhcChjYWxsYmFjaykge1xuXHRyZXR1cm4gKHR5cGVvZiBjYWxsYmFjayA9PT0gJ3N0cmluZycpID8gZ2V0KGNhbGxiYWNrKSA6IGNhbGxiYWNrXG59XG5cbmZ1bmN0aW9uIHJldmVyc2UoY2FsbGJhY2spIHtcblx0Y2FsbGJhY2suX19zb3J0RGVzYyA9IHRydWVcblx0cmV0dXJuIGNhbGxiYWNrXG59XG5cbmZ1bmN0aW9uIHNvcnRCeSgpIHtcblx0dmFyIGZ1bnMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLm1hcChtYXliZVdyYXApXG5cdHZhciBzb3J0ZXIgPSBmdW5jdGlvbihvYmpBLCBvYmpCKSB7XG5cdFx0Ly8gY29uc29sZS5sb2coJ2l0ZXIgLS0tLS0tLS0tLS0nKVxuXHRcdHZhciBpID0gMCwgZlxuXHRcdHdoaWxlKGZ1bnNbaV0pIHtcblx0XHRcdGYgPSBmdW5zW2ldXG5cdFx0XHQvLyBjb25zb2xlLmxvZygndXNpbmcgZnVuICcsIGkpXG5cdFx0XHR2YXIgYSwgYlxuXHRcdFx0aWYgKGYuX19zb3J0RGVzYykge1xuXHRcdFx0XHRiID0gZihvYmpBKVxuXHRcdFx0XHRhID0gZihvYmpCKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YSA9IGYob2JqQSlcblx0XHRcdFx0YiA9IGYob2JqQilcblx0XHRcdH1cblx0XHRcdC8vIGNvbnNvbGUubG9nKCdjb21wYXJpbmcgJywgYSwgYilcblx0XHRcdC8vIGlmIChhIDwgYikgY29uc29sZS5sb2coJ3Jlc3VsdCAnLCAtMSwgb2JqQSwgb2JqQilcblx0XHRcdC8vIGlmIChhID4gYikgY29uc29sZS5sb2coJ3Jlc3VsdCAnLCAxLCBvYmpBLCBvYmpCKVxuXHRcdFx0aWYgKGEgPCBiKSByZXR1cm4gLTFcblx0XHRcdGlmIChhID4gYikgcmV0dXJuIDFcblx0XHRcdC8vIHRyeSBhbm90aGVyIGNhbGxiYWNrXG5cdFx0XHQvLyBjb25zb2xlLmxvZygnZXF1YWxzJylcblx0XHRcdGkgKz0gMVxuXHRcdH1cblx0XHRyZXR1cm4gMFxuXHR9XG5cdHNvcnRlci5kZXNjID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHRmdW5zLnB1c2gocmV2ZXJzZShtYXliZVdyYXAoY2FsbGJhY2spKSlcblx0XHRyZXR1cm4gc29ydGVyXG5cdH1cblx0c29ydGVyLmFzYyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0ZnVucy5wdXNoKG1heWJlV3JhcChjYWxsYmFjaykpXG5cdFx0cmV0dXJuIHNvcnRlclxuXHR9XG5cdHJldHVybiBzb3J0ZXJcbn1cblxuXG4vLyB2YXIgdGVzdCA9IFtcbi8vIFx0e3g6Mi41LGtleTozMDAwLG5hbWU6J2RkZGQnfSxcbi8vIFx0e3g6Mi41LGtleTo0MDAwLG5hbWU6J2NjY2MnfSxcbi8vIFx0e3g6My41LGtleToyMDAwLG5hbWU6J2JiYmInfSxcbi8vIFx0e3g6My41LGtleToxMDAwLG5hbWU6J2FhYWEnfVxuLy8gXVxuXG5cbi8vIGZ1bmN0aW9uIGR1bXAoaXQpIHtcbi8vIFx0cmV0dXJuIFtpdC5rZXksaXQubmFtZSwneD0nK2l0LnhdLmpvaW4oJzonKVxuLy8gfVxuXG5cbi8vIGZ1bmN0aW9uIGZ0ZXN0IChjb2RlLCBleHBlY3QpIHtcbi8vIFx0Ly8gY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKVxuLy8gXHQvLyBjb25zb2xlLmxvZygndGVzdCAnICsgY29kZSlcbi8vIFx0dmFyIHNvcnRlZCA9IGV2YWwoY29kZSlcbi8vIFx0Ly8gY29uc29sZS5sb2coc29ydGVkLm1hcChkdW1wKSlcbi8vIFx0dmFyIGYxMDAwID0geCA9PiB4IC8gMTAwMFxuLy8gXHR2YXIgcmVzdWx0ID0gc29ydGVkLm1hcChnZXQoJ2tleScpKS5tYXAoZjEwMDApLmpvaW4oJycpXG4vLyBcdGlmIChyZXN1bHQgIT09IGV4cGVjdCkge1xuLy8gXHRcdGNvbnNvbGUubG9nKCdGQUlMJylcbi8vIFx0XHRjb25zb2xlLmxvZygnZXhwZWN0ZWQgJywgZXhwZWN0KVxuLy8gXHRcdGNvbnNvbGUubG9nKCdyZXN1bHQgJywgcmVzdWx0KVxuLy8gXHR9XG4vLyB9XG5cbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgna2V5JykpXCIsICcxMjM0Jylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgpLmFzYygna2V5JykpXCIsICcxMjM0Jylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgpLmRlc2MoJ3gnKS5kZXNjKCduYW1lJykpXCIsICcyMTM0Jylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgpLmRlc2MoJ3gnKS5hc2MoJ25hbWUnKSlcIiwgJzEyNDMnKVxuLy8gZnRlc3QoXCJ0ZXN0LnNvcnQoc29ydEJ5KCd4JykuYXNjKCduYW1lJykpXCIsICc0MzEyJylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgneCcpLmRlc2MoJ25hbWUnKSlcIiwgJzM0MjEnKVxuLy8gZnRlc3QoXCJ0ZXN0LnNvcnQoc29ydEJ5KCduYW1lJykuZGVzYygneCcpKVwiLCAnMTI0MycpXG5cblxubW9kdWxlLmV4cG9ydHMgPSBzb3J0QnlcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2pzL2hlbHBlcnMvc29ydGJ5LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},,function(module,exports,__webpack_require__){eval("// This module allow you to define several versions for a same data, each one\n// associated to a screen size configuration.\n//\n// Each time the window is resized, (and once at the beginning), the first\n// matching configuration defines the version and publishes it. You should also\n// pass a default configuration.\n//\n// First, provide the module with some data :\n//\n//    var resp = require('responsive-data')\n//    var conf = resp([\n//        {\n//            'minWidth': 768,\n//            data: {\n//                // anything you want here\n//                type: 'tablet'\n//            }\n//        },\n//        {\n//            'minWidth': 0,\n//            'maxWidth': 768 - 1,\n//            data: {\n//                type: 'smartphone'\n//            }\n//        },\n//        // this one has no constraints, so it matches everytime\n//        {\n//        	data: {\n//        		type: 'any'\n//        	}\n//        }\n//    ])\n//\n// The modules calculates the good version immediately and returns a getter.\n//\n//    // outputs the config version relative to the current size, e.g. {type: 'tablet'}\n//    console.log(conf.get())\n//\n// You can also pass a function to the module. It will be called every time the\n// window is resized (throttled to 200 ms)\n//\n//    var conf = resp(configs, function(version){\n//        // outputs the config version relative to the current size, e.g. {type: 'tablet'}\n//        console.log(version)\n//    })\n//\n// You can match minWidth, maxWidth, orientation ('portrait' or 'landscape').\n//\n\"use strict\";\n\nvar throttle = __webpack_require__(19);\nvar fsignal = __webpack_require__(1);\n\n// add the listener for the event resizes. One single listener for many possible\n// configuration\nvar resize = fsignal();\nvar listenerAdded = false;\nfunction maybeAddGlobalListener() {\n	if (!listenerAdded) {\n		console.log(\"adding responsive data global listener\");\n		window.addEventListener(\"resize\", throttle(resize, 200));\n		listenerAdded = true;\n	}\n}\n\nmodule.exports = function (_configs, listener) {\n	var configs = _configs.slice().reverse();\n	maybeAddGlobalListener();\n	var current = calculateSizes(configs, getClient());\n	var calculatorListenerId = resize.listen(function () {\n		var client = getClient();\n		current = calculateSizes(configs, client);\n		if (listener) listener(current, client);\n	});\n	return {\n		get: function () {\n			return current;\n		},\n		forget: function () {\n			return resize.remove(calculatorListenerId);\n		}\n	};\n};\n\nfunction getClient() {\n	var width = document.documentElement.clientWidth;\n	var height = document.documentElement.clientHeight;\n	// square is portrait\n	var orientation = width > height ? \"landscape\" : \"portrait\";\n	return { width: width, height: height, orientation: orientation };\n}\n\nfunction calculateSizes(configs, client) {\n	var i = configs.length;\n	while (i--) {\n		var config = configs[i];\n		if (matchConfig(config, client)) {\n			return config.data;\n		}\n	}\n}\n\nfunction matchConfig(config, client) {\n	var undefined = void 0;\n	if (config.maxWidth !== undefined && config.maxWidth < client.width) {\n		// the max allowed with is inferior to the actual width. The client is\n		// too wide.\n		return false;\n	}\n	if (config.minWidth !== undefined && config.minWidth > client.width) {\n		// the min allowed with is superior to the actual width. The client is\n		// not wide enough.\n		return false;\n	}\n	if (config.orientation !== undefined && config.orientation !== client.orientation) {\n		// bad required orientation\n		return false;\n	}\n	return true;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvanMvcmVzcG9uc2l2ZS1kYXRhLmpzPzJjZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnREEsSUFBSSxRQUFRLEdBQUcsbUJBQU8sQ0FBQyxFQUFpQixDQUFDO0FBQ3pDLElBQUksT0FBTyxHQUFHLG1CQUFPLENBQUMsQ0FBUyxDQUFDOzs7O0FBSWhDLElBQUksTUFBTSxHQUFHLE9BQU8sRUFBRTtBQUN0QixJQUFJLGFBQWEsR0FBRyxLQUFLO0FBQ3pCLFNBQVMsc0JBQXNCLEdBQUc7QUFDakMsS0FBSSxDQUFDLGFBQWEsRUFBRTtBQUNuQixTQUFPLENBQUMsR0FBRyxDQUFDLHdDQUF3QyxDQUFDO0FBQ3JELFFBQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztBQUN4RCxlQUFhLEdBQUcsSUFBSTtFQUNwQjtDQUNEOztBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBUyxRQUFRLEVBQUUsUUFBUSxFQUFFO0FBQzdDLEtBQUksT0FBTyxHQUFHLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLEVBQUU7QUFDeEMsdUJBQXNCLEVBQUU7QUFDeEIsS0FBSSxPQUFPLEdBQUcsY0FBYyxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQztBQUNsRCxLQUFJLG9CQUFvQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsWUFBVTtBQUNsRCxNQUFJLE1BQU0sR0FBRyxTQUFTLEVBQUU7QUFDeEIsU0FBTyxHQUFHLGNBQWMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDO0FBQ3pDLE1BQUksUUFBUSxFQUFFLFFBQVEsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDO0VBQ3ZDLENBQUM7QUFDRixRQUFPO0FBQ04sS0FBRyxFQUFFO1VBQU0sT0FBTztHQUFBO0FBQ2xCLFFBQU0sRUFBRTtVQUFNLE1BQU0sQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUM7R0FBQTtFQUNqRDtDQUNEOztBQUVELFNBQVMsU0FBUyxHQUFHO0FBQ3BCLEtBQUksS0FBSyxHQUFHLFFBQVEsQ0FBQyxlQUFlLENBQUMsV0FBVztBQUNoRCxLQUFJLE1BQU0sR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDLFlBQVk7O0FBRWxELEtBQUksV0FBVyxHQUFJLEtBQUssR0FBRyxNQUFNLEdBQUksV0FBVyxHQUFHLFVBQVU7QUFDN0QsUUFBTyxFQUFDLEtBQUssRUFBTCxLQUFLLEVBQUUsTUFBTSxFQUFOLE1BQU0sRUFBRSxXQUFXLEVBQVgsV0FBVyxFQUFDO0NBQ25DOztBQUVELFNBQVMsY0FBYyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUU7QUFDeEMsS0FBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU07QUFDdEIsUUFBTSxDQUFDLEVBQUUsRUFBRTtBQUNWLE1BQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDdkIsTUFBSSxXQUFXLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFO0FBQ2hDLFVBQU8sTUFBTSxDQUFDLElBQUk7R0FDbEI7RUFDRDtDQUNEOztBQUVELFNBQVMsV0FBVyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUU7QUFDcEMsS0FBSSxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBQ3RCLEtBQUksTUFBTSxDQUFDLFFBQVEsS0FBSyxTQUFTLElBQUksTUFBTSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsS0FBSyxFQUFFOzs7QUFHcEUsU0FBTyxLQUFLO0VBQ1o7QUFDRCxLQUFJLE1BQU0sQ0FBQyxRQUFRLEtBQUssU0FBUyxJQUFJLE1BQU0sQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLEtBQUssRUFBRTs7O0FBR3BFLFNBQU8sS0FBSztFQUNaO0FBQ0QsS0FBSSxNQUFNLENBQUMsV0FBVyxLQUFLLFNBQVMsSUFBSSxNQUFNLENBQUMsV0FBVyxLQUFLLE1BQU0sQ0FBQyxXQUFXLEVBQUU7O0FBRWxGLFNBQU8sS0FBSztFQUNaO0FBQ0QsUUFBTyxJQUFJIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBtb2R1bGUgYWxsb3cgeW91IHRvIGRlZmluZSBzZXZlcmFsIHZlcnNpb25zIGZvciBhIHNhbWUgZGF0YSwgZWFjaCBvbmVcbi8vIGFzc29jaWF0ZWQgdG8gYSBzY3JlZW4gc2l6ZSBjb25maWd1cmF0aW9uLlxuLy9cbi8vIEVhY2ggdGltZSB0aGUgd2luZG93IGlzIHJlc2l6ZWQsIChhbmQgb25jZSBhdCB0aGUgYmVnaW5uaW5nKSwgdGhlIGZpcnN0XG4vLyBtYXRjaGluZyBjb25maWd1cmF0aW9uIGRlZmluZXMgdGhlIHZlcnNpb24gYW5kIHB1Ymxpc2hlcyBpdC4gWW91IHNob3VsZCBhbHNvXG4vLyBwYXNzIGEgZGVmYXVsdCBjb25maWd1cmF0aW9uLlxuLy9cbi8vIEZpcnN0LCBwcm92aWRlIHRoZSBtb2R1bGUgd2l0aCBzb21lIGRhdGEgOlxuLy9cbi8vICAgIHZhciByZXNwID0gcmVxdWlyZSgncmVzcG9uc2l2ZS1kYXRhJylcbi8vICAgIHZhciBjb25mID0gcmVzcChbXG4vLyAgICAgICAge1xuLy8gICAgICAgICAgICAnbWluV2lkdGgnOiA3NjgsXG4vLyAgICAgICAgICAgIGRhdGE6IHtcbi8vICAgICAgICAgICAgICAgIC8vIGFueXRoaW5nIHlvdSB3YW50IGhlcmVcbi8vICAgICAgICAgICAgICAgIHR5cGU6ICd0YWJsZXQnXG4vLyAgICAgICAgICAgIH1cbi8vICAgICAgICB9LFxuLy8gICAgICAgIHtcbi8vICAgICAgICAgICAgJ21pbldpZHRoJzogMCxcbi8vICAgICAgICAgICAgJ21heFdpZHRoJzogNzY4IC0gMSxcbi8vICAgICAgICAgICAgZGF0YToge1xuLy8gICAgICAgICAgICAgICAgdHlwZTogJ3NtYXJ0cGhvbmUnXG4vLyAgICAgICAgICAgIH1cbi8vICAgICAgICB9LFxuLy8gICAgICAgIC8vIHRoaXMgb25lIGhhcyBubyBjb25zdHJhaW50cywgc28gaXQgbWF0Y2hlcyBldmVyeXRpbWVcbi8vICAgICAgICB7XG4vLyAgICAgICAgXHRkYXRhOiB7XG4vLyAgICAgICAgXHRcdHR5cGU6ICdhbnknXG4vLyAgICAgICAgXHR9XG4vLyAgICAgICAgfVxuLy8gICAgXSlcbi8vXG4vLyBUaGUgbW9kdWxlcyBjYWxjdWxhdGVzIHRoZSBnb29kIHZlcnNpb24gaW1tZWRpYXRlbHkgYW5kIHJldHVybnMgYSBnZXR0ZXIuXG4vL1xuLy8gICAgLy8gb3V0cHV0cyB0aGUgY29uZmlnIHZlcnNpb24gcmVsYXRpdmUgdG8gdGhlIGN1cnJlbnQgc2l6ZSwgZS5nLiB7dHlwZTogJ3RhYmxldCd9XG4vLyAgICBjb25zb2xlLmxvZyhjb25mLmdldCgpKVxuLy9cbi8vIFlvdSBjYW4gYWxzbyBwYXNzIGEgZnVuY3Rpb24gdG8gdGhlIG1vZHVsZS4gSXQgd2lsbCBiZSBjYWxsZWQgZXZlcnkgdGltZSB0aGVcbi8vIHdpbmRvdyBpcyByZXNpemVkICh0aHJvdHRsZWQgdG8gMjAwIG1zKVxuLy9cbi8vICAgIHZhciBjb25mID0gcmVzcChjb25maWdzLCBmdW5jdGlvbih2ZXJzaW9uKXtcbi8vICAgICAgICAvLyBvdXRwdXRzIHRoZSBjb25maWcgdmVyc2lvbiByZWxhdGl2ZSB0byB0aGUgY3VycmVudCBzaXplLCBlLmcuIHt0eXBlOiAndGFibGV0J31cbi8vICAgICAgICBjb25zb2xlLmxvZyh2ZXJzaW9uKVxuLy8gICAgfSlcbi8vXG4vLyBZb3UgY2FuIG1hdGNoIG1pbldpZHRoLCBtYXhXaWR0aCwgb3JpZW50YXRpb24gKCdwb3J0cmFpdCcgb3IgJ2xhbmRzY2FwZScpLlxuLy9cbmxldCB0aHJvdHRsZSA9IHJlcXVpcmUoJ2xvZGFzaC90aHJvdHRsZScpXG5sZXQgZnNpZ25hbCA9IHJlcXVpcmUoJ2ZzaWduYWwnKVxuXG4vLyBhZGQgdGhlIGxpc3RlbmVyIGZvciB0aGUgZXZlbnQgcmVzaXplcy4gT25lIHNpbmdsZSBsaXN0ZW5lciBmb3IgbWFueSBwb3NzaWJsZVxuLy8gY29uZmlndXJhdGlvblxubGV0IHJlc2l6ZSA9IGZzaWduYWwoKVxubGV0IGxpc3RlbmVyQWRkZWQgPSBmYWxzZVxuZnVuY3Rpb24gbWF5YmVBZGRHbG9iYWxMaXN0ZW5lcigpIHtcblx0aWYgKCFsaXN0ZW5lckFkZGVkKSB7XG5cdFx0Y29uc29sZS5sb2coJ2FkZGluZyByZXNwb25zaXZlIGRhdGEgZ2xvYmFsIGxpc3RlbmVyJylcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhyb3R0bGUocmVzaXplLCAyMDApKVxuXHRcdGxpc3RlbmVyQWRkZWQgPSB0cnVlXG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihfY29uZmlncywgbGlzdGVuZXIpIHtcblx0bGV0IGNvbmZpZ3MgPSBfY29uZmlncy5zbGljZSgpLnJldmVyc2UoKVxuXHRtYXliZUFkZEdsb2JhbExpc3RlbmVyKClcblx0bGV0IGN1cnJlbnQgPSBjYWxjdWxhdGVTaXplcyhjb25maWdzLCBnZXRDbGllbnQoKSlcblx0bGV0IGNhbGN1bGF0b3JMaXN0ZW5lcklkID0gcmVzaXplLmxpc3RlbihmdW5jdGlvbigpe1xuXHRcdGxldCBjbGllbnQgPSBnZXRDbGllbnQoKVxuXHRcdGN1cnJlbnQgPSBjYWxjdWxhdGVTaXplcyhjb25maWdzLCBjbGllbnQpXG5cdFx0aWYgKGxpc3RlbmVyKSBsaXN0ZW5lcihjdXJyZW50LCBjbGllbnQpXG5cdH0pXG5cdHJldHVybiB7XG5cdFx0Z2V0OiAoKSA9PiBjdXJyZW50LFxuXHRcdGZvcmdldDogKCkgPT4gcmVzaXplLnJlbW92ZShjYWxjdWxhdG9yTGlzdGVuZXJJZClcblx0fVxufVxuXG5mdW5jdGlvbiBnZXRDbGllbnQoKSB7XG5cdGxldCB3aWR0aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aFxuXHRsZXQgaGVpZ2h0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodFxuXHQvLyBzcXVhcmUgaXMgcG9ydHJhaXRcblx0bGV0IG9yaWVudGF0aW9uID0gKHdpZHRoID4gaGVpZ2h0KSA/ICdsYW5kc2NhcGUnIDogJ3BvcnRyYWl0J1xuXHRyZXR1cm4ge3dpZHRoLCBoZWlnaHQsIG9yaWVudGF0aW9ufVxufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVTaXplcyhjb25maWdzLCBjbGllbnQpIHtcblx0bGV0IGkgPSBjb25maWdzLmxlbmd0aFxuXHR3aGlsZShpLS0pIHtcblx0XHRsZXQgY29uZmlnID0gY29uZmlnc1tpXVxuXHRcdGlmIChtYXRjaENvbmZpZyhjb25maWcsIGNsaWVudCkpIHtcblx0XHRcdHJldHVybiBjb25maWcuZGF0YVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBtYXRjaENvbmZpZyhjb25maWcsIGNsaWVudCkge1xuXHRsZXQgdW5kZWZpbmVkID0gdm9pZCAwXG5cdGlmIChjb25maWcubWF4V2lkdGggIT09IHVuZGVmaW5lZCAmJiBjb25maWcubWF4V2lkdGggPCBjbGllbnQud2lkdGgpIHtcblx0XHQvLyB0aGUgbWF4IGFsbG93ZWQgd2l0aCBpcyBpbmZlcmlvciB0byB0aGUgYWN0dWFsIHdpZHRoLiBUaGUgY2xpZW50IGlzXG5cdFx0Ly8gdG9vIHdpZGUuXG5cdFx0cmV0dXJuIGZhbHNlXG5cdH1cblx0aWYgKGNvbmZpZy5taW5XaWR0aCAhPT0gdW5kZWZpbmVkICYmIGNvbmZpZy5taW5XaWR0aCA+IGNsaWVudC53aWR0aCkge1xuXHRcdC8vIHRoZSBtaW4gYWxsb3dlZCB3aXRoIGlzIHN1cGVyaW9yIHRvIHRoZSBhY3R1YWwgd2lkdGguIFRoZSBjbGllbnQgaXNcblx0XHQvLyBub3Qgd2lkZSBlbm91Z2guXG5cdFx0cmV0dXJuIGZhbHNlXG5cdH1cblx0aWYgKGNvbmZpZy5vcmllbnRhdGlvbiAhPT0gdW5kZWZpbmVkICYmIGNvbmZpZy5vcmllbnRhdGlvbiAhPT0gY2xpZW50Lm9yaWVudGF0aW9uKSB7XG5cdFx0Ly8gYmFkIHJlcXVpcmVkIG9yaWVudGF0aW9uXG5cdFx0cmV0dXJuIGZhbHNlXG5cdH1cblx0cmV0dXJuIHRydWVcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2pzL3Jlc3BvbnNpdmUtZGF0YS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){
eval('"use strict";\n\nvar status = __webpack_require__(6).status;\n\nvar assert = __webpack_require__(7);\nvar extend = __webpack_require__(5);\nvar get = __webpack_require__(4);\nvar m = __webpack_require__(3);\nvar omap = __webpack_require__(9);\nvar ovals = __webpack_require__(10);\nvar fsignal = __webpack_require__(1);\nvar sortby = __webpack_require__(11);\n\nvar model = {};\n\nmodel.make = function (api, opts) {\n	var ingredients = omap(opts.ingredients, Ingredient);\n	var defaultOrder = 0;\n	var pizzas = opts.pizzas.map(function (def, i) {\n		var def2 = extend({ id: i }, def);\n		def2.ingredients = findAllIngredients(ingredients, def.ingredients);\n		def2.defaultOrder = defaultOrder++;\n		return Pizza(def2);\n	});\n	var filters = ovals(opts.filters, function (filter, k) {\n		filter.id = k;\n		return Filter(filter);\n	}).sort(sortby("name"));\n	var ingredientsList = ovals(ingredients).sort();\n	var store = {\n		change: fsignal(),\n		trigger: function trigger() {\n			store.change();\n		},\n		init: function init() {\n			omap(api, function (f, k) {\n				if (store[k]) {\n					f.listen(store[k]);\n				}\n			});\n			store.computePizzas();\n		},\n		ingredients: function () {\n			return ingredientsList;\n		},\n		pizzas: function () {\n			return pizzas;\n		},\n		filters: function () {\n			return filters;\n		},\n		toggleYummy: function toggleYummy(ing) {\n			ing.toggleYummy();\n			store.computePizzas();\n		},\n		toggleYuck: function toggleYuck(ing) {\n			console.log("into toggleYuck", arguments);\n			console.log("into toggleYuck ing", ing);\n			ing.toggleYuck();\n			store.computePizzas();\n		},\n		toggleFilter: function toggleFilter(filter) {\n			filter.toggle();\n			store.computePizzas();\n		},\n		computePizzas: function computePizzas() {\n			var visibleRank = 0;\n			var enabledFilters = filters.filter(function (f) {\n				return f.status() === status.ENABLED;\n			});\n			pizzas.forEach(function (p) {\n				p.compute(enabledFilters);\n			});\n			pizzas.sort(sortby().desc(function (p) {\n				return p.score();\n			}).asc("defaultOrder"));\n			pizzas.forEach(function (p) {\n				p.rank(p.visible() ? visibleRank++ : 0);\n			});\n			store.trigger();\n		}\n	};\n	// store.init()\n	return store;\n};\n\nmodule.exports = model;\n\n// pizza model, receives all pizza properties from the user spec, but\n// .ingredients are models\nvar Pizza = function Pizza(data) {\n	var pizza = extend({ tags: [], url: null, prices: {}, name: "Unnamed pizza" }, data);\n	pizza.wasVisible = m.prop(false);\n	pizza.visible = m.prop(true);\n	var prevRank = 0;\n	var curRank = 0;\n	pizza.prevRank = function () {\n		return prevRank;\n	};\n	pizza.rank = function () {\n		if (arguments.length) {\n			var newRank = arguments[0];\n			prevRank = curRank;\n			curRank = newRank;\n			return curRank;\n		} else {\n			return curRank;\n		}\n	};\n	pizza.checkVisible = function (filters) {\n		pizza.wasVisible(pizza.visible());\n		// a pizza is visible if neither of its ingredients have a YUCK status\n		return pizza.visible(!filters.some(function (filter) {\n			return filter.reject(pizza);\n		}) && !pizza.ingredients.some(function (i) {\n			return i.status() === status.YUCK;\n		}));\n	};\n	pizza.calcScore = function () {\n		// Yummy ingredients score 1, others score 0\n		return pizza.score(pizza.ingredients.map(function (ing) {\n			return Number(ing.status() === status.YUMMY);\n		}).reduce(function (sum, score) {\n			return sum + score;\n		}));\n	};\n	pizza.score = m.prop();\n	pizza.calcScore();\n	pizza.compute = function (filters) {\n		pizza.checkVisible(filters);\n		pizza.calcScore();\n	};\n	pizza.tagged = function (tag) {\n		return pizza.tags.indexOf(tag) !== -1;\n	};\n	return pizza;\n};\n\nvar Ingredient = function Ingredient(name) {\n	var ing = {\n		name: name\n	};\n	ing.status = m.prop(status.PASS);\n	ing.toggleYummy = function () {\n		ing.status(ing.status() === status.YUMMY ? status.PASS : status.YUMMY);\n	};\n	ing.toggleYuck = function () {\n		ing.status(ing.status() === status.YUCK ? status.PASS : status.YUCK);\n	};\n	return ing;\n};\n\nvar Filter = function Filter(data) {\n	var filter = extend({}, data);\n	filter.status = m.prop(status.DISABLED);\n	filter.toggle = function () {\n		return filter.status(filter.status() === status.DISABLED ? status.ENABLED : status.DISABLED);\n	};\n	filter.accept = function (pizza) {\n		var passes = filter.fun(pizza);\n		return passes;\n		return filter.fun(pizza);\n	};\n	filter.reject = function (pizza) {\n		return !filter.accept(pizza);\n	};\n	return filter;\n};\n\nfunction findAllIngredients(ingrs, keys) {\n	var found = [];\n	keys.forEach(function (k) {\n		assert(ingrs[k] !== void 0, "Ingredient \'%s\' not found", k);\n		found.push(ingrs[k]);\n	});\n	return found;\n}\n//# sourceMappingURL=data:application/json;base64,')},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar status = __webpack_require__(6).status;\n\nvar get = __webpack_require__(4);\nvar interleave = __webpack_require__(8);\nvar m = __webpack_require__(3);\nvar morpheus = __webpack_require__(21);\n\n// diameter html symbol : &#8960;\n\nfunction make(api, store, opts) {\n	var el = opts.container;\n	var view = {};\n	store.change.listen(function (_) {\n		return m.render(el, view.content());\n	});\n	view.content = function () {\n		return m("div", [m("ul.ingredients", store.ingredients().map(function (ing, i) {\n			return m("li", { "class": "status-" + ing.status() }, [m("span", ing.name), m("a", { "class": "yummy", onclick: function (e) {\n					return api.toggleYummy([ing]);\n				} }, m.trust("&#10084;")), m("a", { "class": "yuck", onclick: function (e) {\n					return api.toggleYuck([ing]);\n				} }, m.trust("&#10005;"))]);\n		})), m("ul.filters", store.filters().map(function (filter, i) {\n			return m("li", {}, [m("a", { onclick: function (e) {\n					return api.toggleFilter([filter]);\n				} }, [m("span", m.trust(filter.status() === status.ENABLED ? "&#9745;" : "&#9744;")), " ", filter.name])]);\n		})), m("ul.pizzas", store.pizzas().reverse().map(function (p, i) {\n			return m("li", { key: p.id, config: fadeInOut(p, opts) }, [m("span", [p.name]),\n			// m(\'span\', \' - \'),\n			// m(\'span\', [\'score: \',p.score()]),\n			// m(\'span\', \' - \'),\n			// m(\'span\', [\'rank: \',p.prevRank(), \' => \', p.rank()]),\n			// m(\'span\', \' - \'),\n			// m(\'span\', [\'defaultOrder: \',p.defaultOrder]),\n			// m(\'span\', \' - \'),\n			m("span", { "class": "ingredients" }, [interleave(p.ingredients.map(function (ing) {\n				return formatIngredient(ing, opts);\n			}), ", ")])]);\n		}))]);\n	};\n	return view;\n}\n\nmodule.exports = { make: make };\n\nfunction fadeInOut(pizza, opts) {\n\n	var animDuration = 300;\n\n	return function (el, isInitialized, context, vEl) {\n		var pHeight = opts.style.pizzaRowHeightPx;\n		var pMargin = opts.style.pizzaRowMarginPx;\n		var appearing = !isInitialized || !pizza.wasVisible() && pizza.visible();\n		var disappearing = pizza.wasVisible() && !pizza.visible();\n		var rankChanged = pizza.rank() !== pizza.prevRank();\n		if (appearing) {\n			el.style.height = 0;\n			el.style.opacity = 0;\n			morpheus([el], {\n				height: pHeight,\n				duration: animDuration / 2,\n				complete: function complete() {\n					morpheus([el], {\n						opacity: 1,\n						duration: animDuration / 2\n					});\n				}\n			});\n		} else if (disappearing) {\n			morpheus([el], {\n				opacity: 0,\n				duration: animDuration / 2,\n				complete: function complete() {\n					morpheus([el], {\n						height: 0,\n						duration: animDuration / 2\n					});\n				}\n			});\n		}\n		// pizza has moved.\n		if (appearing || pizza.visible() && rankChanged) {\n			(function () {\n				if (appearing) {\n					el.style.top = 0 // allow the first move on load\n					;\n				}\n				var top = String(pizza.rank() * (pHeight + pMargin)) + "px";\n				morpheus([el], {\n					top: top,\n					duration: animDuration,\n					complete: function complete() {\n						el.style.top = top;\n					}\n				});\n			})();\n		}\n	};\n}\n\nfunction formatIngredient(ing, opts) {\n	if (ing.status() === status.YUMMY) {\n		return m("span", { "class": "yummy" }, ing.name);\n	} else {\n		return m("span", ing.name);\n	}\n}\n//# sourceMappingURL=data:application/json;base64,')},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(2),\n    now = __webpack_require__(18),\n    toNumber = __webpack_require__(20);\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide an options object to indicate whether `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent calls\n * to the debounced function return the result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=false] Specify invoking on the leading\n *  edge of the timeout.\n * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n *  delayed before it's invoked.\n * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n *  edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // avoid costly calculations while the window size is in flux\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // invoke `sendMail` when clicked, debouncing subsequent calls\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // ensure `batchLog` is invoked once after 1 second of debounced calls\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // cancel a trailing debounced invocation\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var args,\n      maxTimeoutId,\n      result,\n      stamp,\n      thisArg,\n      timeoutId,\n      trailingCall,\n      lastCalled = 0,\n      leading = false,\n      maxWait = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    if (maxTimeoutId) {\n      clearTimeout(maxTimeoutId);\n    }\n    lastCalled = 0;\n    args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n  }\n\n  function complete(isCalled, id) {\n    if (id) {\n      clearTimeout(id);\n    }\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n    if (isCalled) {\n      lastCalled = now();\n      result = func.apply(thisArg, args);\n      if (!timeoutId && !maxTimeoutId) {\n        args = thisArg = undefined;\n      }\n    }\n  }\n\n  function delayed() {\n    var remaining = wait - (now() - stamp);\n    if (remaining <= 0 || remaining > wait) {\n      complete(trailingCall, maxTimeoutId);\n    } else {\n      timeoutId = setTimeout(delayed, remaining);\n    }\n  }\n\n  function flush() {\n    if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n      result = func.apply(thisArg, args);\n    }\n    cancel();\n    return result;\n  }\n\n  function maxDelayed() {\n    complete(trailing, timeoutId);\n  }\n\n  function debounced() {\n    args = arguments;\n    stamp = now();\n    thisArg = this;\n    trailingCall = trailing && (timeoutId || !leading);\n\n    if (maxWait === false) {\n      var leadingCall = leading && !timeoutId;\n    } else {\n      if (!maxTimeoutId && !leading) {\n        lastCalled = stamp;\n      }\n      var remaining = maxWait - (stamp - lastCalled),\n          isCalled = remaining <= 0 || remaining > maxWait;\n\n      if (isCalled) {\n        if (maxTimeoutId) {\n          maxTimeoutId = clearTimeout(maxTimeoutId);\n        }\n        lastCalled = stamp;\n        result = func.apply(thisArg, args);\n      }\n      else if (!maxTimeoutId) {\n        maxTimeoutId = setTimeout(maxDelayed, remaining);\n      }\n    }\n    if (isCalled && timeoutId) {\n      timeoutId = clearTimeout(timeoutId);\n    }\n    else if (!timeoutId && wait !== maxWait) {\n      timeoutId = setTimeout(delayed, wait);\n    }\n    if (leadingCall) {\n      isCalled = true;\n      result = func.apply(thisArg, args);\n    }\n    if (isCalled && !timeoutId && !maxTimeoutId) {\n      args = thisArg = undefined;\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n//# sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {var isObject = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = global.Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9pc0Z1bmN0aW9uLmpzPzJhYWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgZnVuY1RhZyA9ICdbb2JqZWN0IEZ1bmN0aW9uXScsXG4gICAgZ2VuVGFnID0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gZ2xvYmFsLk9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZSBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBGdW5jdGlvbmAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBjb3JyZWN0bHkgY2xhc3NpZmllZCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oXyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0Z1bmN0aW9uKC9hYmMvKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgLy8gVGhlIHVzZSBvZiBgT2JqZWN0I3RvU3RyaW5nYCBhdm9pZHMgaXNzdWVzIHdpdGggdGhlIGB0eXBlb2ZgIG9wZXJhdG9yXG4gIC8vIGluIFNhZmFyaSA4IHdoaWNoIHJldHVybnMgJ29iamVjdCcgZm9yIHR5cGVkIGFycmF5IGNvbnN0cnVjdG9ycywgYW5kXG4gIC8vIFBoYW50b21KUyAxLjkgd2hpY2ggcmV0dXJucyAnZnVuY3Rpb24nIGZvciBgTm9kZUxpc3RgIGluc3RhbmNlcy5cbiAgdmFyIHRhZyA9IGlzT2JqZWN0KHZhbHVlKSA/IG9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpIDogJyc7XG4gIHJldHVybiB0YWcgPT0gZnVuY1RhZyB8fCB0YWcgPT0gZ2VuVGFnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzRnVuY3Rpb247XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9sb2Rhc2gvaXNGdW5jdGlvbi5qc1xuICoqIG1vZHVsZSBpZCA9IDE3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => logs the number of milliseconds it took for the deferred function to be invoked\n */\nvar now = Date.now;\n\nmodule.exports = now;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9ub3cuanM/ZWE3NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0cyB0aGUgdGltZXN0YW1wIG9mIHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRoYXQgaGF2ZSBlbGFwc2VkIHNpbmNlXG4gKiB0aGUgVW5peCBlcG9jaCAoMSBKYW51YXJ5IDE5NzAgMDA6MDA6MDAgVVRDKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHR5cGUgRnVuY3Rpb25cbiAqIEBjYXRlZ29yeSBEYXRlXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSB0aW1lc3RhbXAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uZGVmZXIoZnVuY3Rpb24oc3RhbXApIHtcbiAqICAgY29uc29sZS5sb2coXy5ub3coKSAtIHN0YW1wKTtcbiAqIH0sIF8ubm93KCkpO1xuICogLy8gPT4gbG9ncyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpdCB0b29rIGZvciB0aGUgZGVmZXJyZWQgZnVuY3Rpb24gdG8gYmUgaW52b2tlZFxuICovXG52YXIgbm93ID0gRGF0ZS5ub3c7XG5cbm1vZHVsZS5leHBvcnRzID0gbm93O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vbG9kYXNoL25vdy5qc1xuICoqIG1vZHVsZSBpZCA9IDE4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("var debounce = __webpack_require__(16),\n    isObject = __webpack_require__(2);\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide an options object to indicate whether\n * `func` should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the the throttled function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=true] Specify invoking on the leading\n *  edge of the timeout.\n * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n *  edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // avoid excessively updating the position while scrolling\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // cancel a trailing throttled invocation\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, { 'leading': leading, 'maxWait': wait, 'trailing': trailing });\n}\n\nmodule.exports = throttle;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC90aHJvdHRsZS5qcz8xOGVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxvQkFBb0I7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw0REFBNEQ7QUFDM0Y7O0FBRUEiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVib3VuY2UgPSByZXF1aXJlKCcuL2RlYm91bmNlJyksXG4gICAgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzT2JqZWN0Jyk7XG5cbi8qKiBVc2VkIGFzIHRoZSBgVHlwZUVycm9yYCBtZXNzYWdlIGZvciBcIkZ1bmN0aW9uc1wiIG1ldGhvZHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKipcbiAqIENyZWF0ZXMgYSB0aHJvdHRsZWQgZnVuY3Rpb24gdGhhdCBvbmx5IGludm9rZXMgYGZ1bmNgIGF0IG1vc3Qgb25jZSBwZXJcbiAqIGV2ZXJ5IGB3YWl0YCBtaWxsaXNlY29uZHMuIFRoZSB0aHJvdHRsZWQgZnVuY3Rpb24gY29tZXMgd2l0aCBhIGBjYW5jZWxgXG4gKiBtZXRob2QgdG8gY2FuY2VsIGRlbGF5ZWQgYGZ1bmNgIGludm9jYXRpb25zIGFuZCBhIGBmbHVzaGAgbWV0aG9kIHRvXG4gKiBpbW1lZGlhdGVseSBpbnZva2UgdGhlbS4gUHJvdmlkZSBhbiBvcHRpb25zIG9iamVjdCB0byBpbmRpY2F0ZSB3aGV0aGVyXG4gKiBgZnVuY2Agc2hvdWxkIGJlIGludm9rZWQgb24gdGhlIGxlYWRpbmcgYW5kL29yIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIGB3YWl0YFxuICogdGltZW91dC4gVGhlIGBmdW5jYCBpcyBpbnZva2VkIHdpdGggdGhlIGxhc3QgYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZVxuICogdGhyb3R0bGVkIGZ1bmN0aW9uLiBTdWJzZXF1ZW50IGNhbGxzIHRvIHRoZSB0aHJvdHRsZWQgZnVuY3Rpb24gcmV0dXJuIHRoZVxuICogcmVzdWx0IG9mIHRoZSBsYXN0IGBmdW5jYCBpbnZvY2F0aW9uLlxuICpcbiAqICoqTm90ZToqKiBJZiBgbGVhZGluZ2AgYW5kIGB0cmFpbGluZ2Agb3B0aW9ucyBhcmUgYHRydWVgLCBgZnVuY2AgaXMgaW52b2tlZFxuICogb24gdGhlIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQgb25seSBpZiB0aGUgdGhlIHRocm90dGxlZCBmdW5jdGlvbiBpc1xuICogaW52b2tlZCBtb3JlIHRoYW4gb25jZSBkdXJpbmcgdGhlIGB3YWl0YCB0aW1lb3V0LlxuICpcbiAqIFNlZSBbRGF2aWQgQ29yYmFjaG8ncyBhcnRpY2xlXShodHRwOi8vZHJ1cGFsbW90aW9uLmNvbS9hcnRpY2xlL2RlYm91bmNlLWFuZC10aHJvdHRsZS12aXN1YWwtZXhwbGFuYXRpb24pXG4gKiBmb3IgZGV0YWlscyBvdmVyIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIGBfLnRocm90dGxlYCBhbmQgYF8uZGVib3VuY2VgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHRocm90dGxlLlxuICogQHBhcmFtIHtudW1iZXJ9IFt3YWl0PTBdIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIHRocm90dGxlIGludm9jYXRpb25zIHRvLlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBUaGUgb3B0aW9ucyBvYmplY3QuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmxlYWRpbmc9dHJ1ZV0gU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgbGVhZGluZ1xuICogIGVkZ2Ugb2YgdGhlIHRpbWVvdXQuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnRyYWlsaW5nPXRydWVdIFNwZWNpZnkgaW52b2tpbmcgb24gdGhlIHRyYWlsaW5nXG4gKiAgZWRnZSBvZiB0aGUgdGltZW91dC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHRocm90dGxlZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogLy8gYXZvaWQgZXhjZXNzaXZlbHkgdXBkYXRpbmcgdGhlIHBvc2l0aW9uIHdoaWxlIHNjcm9sbGluZ1xuICogalF1ZXJ5KHdpbmRvdykub24oJ3Njcm9sbCcsIF8udGhyb3R0bGUodXBkYXRlUG9zaXRpb24sIDEwMCkpO1xuICpcbiAqIC8vIGludm9rZSBgcmVuZXdUb2tlbmAgd2hlbiB0aGUgY2xpY2sgZXZlbnQgaXMgZmlyZWQsIGJ1dCBub3QgbW9yZSB0aGFuIG9uY2UgZXZlcnkgNSBtaW51dGVzXG4gKiB2YXIgdGhyb3R0bGVkID0gXy50aHJvdHRsZShyZW5ld1Rva2VuLCAzMDAwMDAsIHsgJ3RyYWlsaW5nJzogZmFsc2UgfSk7XG4gKiBqUXVlcnkoZWxlbWVudCkub24oJ2NsaWNrJywgdGhyb3R0bGVkKTtcbiAqXG4gKiAvLyBjYW5jZWwgYSB0cmFpbGluZyB0aHJvdHRsZWQgaW52b2NhdGlvblxuICogalF1ZXJ5KHdpbmRvdykub24oJ3BvcHN0YXRlJywgdGhyb3R0bGVkLmNhbmNlbCk7XG4gKi9cbmZ1bmN0aW9uIHRocm90dGxlKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgdmFyIGxlYWRpbmcgPSB0cnVlLFxuICAgICAgdHJhaWxpbmcgPSB0cnVlO1xuXG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIGlmIChpc09iamVjdChvcHRpb25zKSkge1xuICAgIGxlYWRpbmcgPSAnbGVhZGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy5sZWFkaW5nIDogbGVhZGluZztcbiAgICB0cmFpbGluZyA9ICd0cmFpbGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy50cmFpbGluZyA6IHRyYWlsaW5nO1xuICB9XG4gIHJldHVybiBkZWJvdW5jZShmdW5jLCB3YWl0LCB7ICdsZWFkaW5nJzogbGVhZGluZywgJ21heFdhaXQnOiB3YWl0LCAndHJhaWxpbmcnOiB0cmFpbGluZyB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0aHJvdHRsZTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2xvZGFzaC90aHJvdHRsZS5qc1xuICoqIG1vZHVsZSBpZCA9IDE5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("var isFunction = __webpack_require__(17),\n    isObject = __webpack_require__(2);\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `global`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3);\n * // => 3\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3');\n * // => 3\n */\nfunction toNumber(value) {\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC90b051bWJlci5qcz81NjFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzRnVuY3Rpb24gPSByZXF1aXJlKCcuL2lzRnVuY3Rpb24nKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKTtcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgTkFOID0gMCAvIDA7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHdoaXRlc3BhY2UuICovXG52YXIgcmVUcmltID0gL15cXHMrfFxccyskL2c7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBiYWQgc2lnbmVkIGhleGFkZWNpbWFsIHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc0JhZEhleCA9IC9eWy0rXTB4WzAtOWEtZl0rJC9pO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmluYXJ5IHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc0JpbmFyeSA9IC9eMGJbMDFdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG9jdGFsIHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVJc09jdGFsID0gL14wb1swLTddKyQvaTtcblxuLyoqIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHdpdGhvdXQgYSBkZXBlbmRlbmN5IG9uIGBnbG9iYWxgLiAqL1xudmFyIGZyZWVQYXJzZUludCA9IHBhcnNlSW50O1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBudW1iZXIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvTnVtYmVyKDMpO1xuICogLy8gPT4gM1xuICpcbiAqIF8udG9OdW1iZXIoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiA1ZS0zMjRcbiAqXG4gKiBfLnRvTnVtYmVyKEluZmluaXR5KTtcbiAqIC8vID0+IEluZmluaXR5XG4gKlxuICogXy50b051bWJlcignMycpO1xuICogLy8gPT4gM1xuICovXG5mdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgdmFyIG90aGVyID0gaXNGdW5jdGlvbih2YWx1ZS52YWx1ZU9mKSA/IHZhbHVlLnZhbHVlT2YoKSA6IHZhbHVlO1xuICAgIHZhbHVlID0gaXNPYmplY3Qob3RoZXIpID8gKG90aGVyICsgJycpIDogb3RoZXI7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gMCA/IHZhbHVlIDogK3ZhbHVlO1xuICB9XG4gIHZhbHVlID0gdmFsdWUucmVwbGFjZShyZVRyaW0sICcnKTtcbiAgdmFyIGlzQmluYXJ5ID0gcmVJc0JpbmFyeS50ZXN0KHZhbHVlKTtcbiAgcmV0dXJuIChpc0JpbmFyeSB8fCByZUlzT2N0YWwudGVzdCh2YWx1ZSkpXG4gICAgPyBmcmVlUGFyc2VJbnQodmFsdWUuc2xpY2UoMiksIGlzQmluYXJ5ID8gMiA6IDgpXG4gICAgOiAocmVJc0JhZEhleC50ZXN0KHZhbHVlKSA/IE5BTiA6ICt2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdG9OdW1iZXI7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9sb2Rhc2gvdG9OdW1iZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAyMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  * Morpheus - A Brilliant Animator\n  * https://github.com/ded/morpheus - (c) Dustin Diaz 2011\n  * License MIT\n  */\n!function (name, definition) {\n  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else if (typeof module != 'undefined') module.exports = definition()\n  else this[name] = definition()\n}('morpheus', function () {\n\n  var doc = document\n    , win = window\n    , perf = win.performance\n    , perfNow = perf && (perf.now || perf.webkitNow || perf.msNow || perf.mozNow)\n    , now = perfNow ? function () { return perfNow.call(perf) } : function () { return +new Date() }\n    , fixTs = false // feature detected below\n    , html = doc.documentElement\n    , thousand = 1000\n    , rgbOhex = /^rgb\\(|#/\n    , relVal = /^([+\\-])=([\\d\\.]+)/\n    , numUnit = /^(?:[\\+\\-]=?)?\\d+(?:\\.\\d+)?(%|in|cm|mm|em|ex|pt|pc|px)$/\n    , rotate = /rotate\\(((?:[+\\-]=)?([\\-\\d\\.]+))deg\\)/\n    , scale = /scale\\(((?:[+\\-]=)?([\\d\\.]+))\\)/\n    , skew = /skew\\(((?:[+\\-]=)?([\\-\\d\\.]+))deg, ?((?:[+\\-]=)?([\\-\\d\\.]+))deg\\)/\n    , translate = /translate\\(((?:[+\\-]=)?([\\-\\d\\.]+))px, ?((?:[+\\-]=)?([\\-\\d\\.]+))px\\)/\n      // these elements do not require 'px'\n    , unitless = { lineHeight: 1, zoom: 1, zIndex: 1, opacity: 1, transform: 1}\n\n  // which property name does this browser use for transform\n  var transform = function () {\n    var styles = doc.createElement('a').style\n      , props = ['webkitTransform', 'MozTransform', 'OTransform', 'msTransform', 'Transform']\n      , i\n    for (i = 0; i < props.length; i++) {\n      if (props[i] in styles) return props[i]\n    }\n  }()\n\n  // does this browser support the opacity property?\n  var opasity = function () {\n    return typeof doc.createElement('a').style.opacity !== 'undefined'\n  }()\n\n  // initial style is determined by the elements themselves\n  var getStyle = doc.defaultView && doc.defaultView.getComputedStyle ?\n    function (el, property) {\n      property = property == 'transform' ? transform : property\n      property = camelize(property)\n      var value = null\n        , computed = doc.defaultView.getComputedStyle(el, '')\n      computed && (value = computed[property])\n      return el.style[property] || value\n    } : html.currentStyle ?\n\n    function (el, property) {\n      property = camelize(property)\n\n      if (property == 'opacity') {\n        var val = 100\n        try {\n          val = el.filters['DXImageTransform.Microsoft.Alpha'].opacity\n        } catch (e1) {\n          try {\n            val = el.filters('alpha').opacity\n          } catch (e2) {}\n        }\n        return val / 100\n      }\n      var value = el.currentStyle ? el.currentStyle[property] : null\n      return el.style[property] || value\n    } :\n    function (el, property) {\n      return el.style[camelize(property)]\n    }\n\n  var frame = function () {\n    // native animation frames\n    // http://webstuff.nfshost.com/anim-timing/Overview.html\n    // http://dev.chromium.org/developers/design-documents/requestanimationframe-implementation\n    return win.requestAnimationFrame  ||\n      win.webkitRequestAnimationFrame ||\n      win.mozRequestAnimationFrame    ||\n      win.msRequestAnimationFrame     ||\n      win.oRequestAnimationFrame      ||\n      function (callback) {\n        win.setTimeout(function () {\n          callback(+new Date())\n        }, 17) // when I was 17..\n      }\n  }()\n\n  frame(function(timestamp) {\n    // feature-detect if rAF and now() are of the same scale (epoch or high-res),\n    // if not, we have to do a timestamp fix on each frame\n    fixTs = timestamp > 1e12 != now() > 1e12\n  })\n\n  var children = []\n\n  function has(array, elem, i) {\n    if (Array.prototype.indexOf) return array.indexOf(elem)\n    for (i = 0; i < array.length; ++i) {\n      if (array[i] === elem) return i\n    }\n  }\n\n  function render(timestamp) {\n    var i, count = children.length\n    if (fixTs) timestamp = now()\n    for (i = count; i--;) {\n      children[i](timestamp)\n    }\n    children.length && frame(render)\n  }\n\n  function live(f) {\n    if (children.push(f) === 1) frame(render)\n  }\n\n  function die(f) {\n    var rest, index = has(children, f)\n    if (index >= 0) {\n      rest = children.slice(index + 1)\n      children.length = index\n      children = children.concat(rest)\n    }\n  }\n\n  function parseTransform(style, base) {\n    var values = {}, m\n    if (m = style.match(rotate)) values.rotate = by(m[1], base ? base.rotate : null)\n    if (m = style.match(scale)) values.scale = by(m[1], base ? base.scale : null)\n    if (m = style.match(skew)) {values.skewx = by(m[1], base ? base.skewx : null); values.skewy = by(m[3], base ? base.skewy : null)}\n    if (m = style.match(translate)) {values.translatex = by(m[1], base ? base.translatex : null); values.translatey = by(m[3], base ? base.translatey : null)}\n    return values\n  }\n\n  function formatTransform(v) {\n    var s = ''\n    if ('rotate' in v) s += 'rotate(' + v.rotate + 'deg) '\n    if ('scale' in v) s += 'scale(' + v.scale + ') '\n    if ('translatex' in v) s += 'translate(' + v.translatex + 'px,' + v.translatey + 'px) '\n    if ('skewx' in v) s += 'skew(' + v.skewx + 'deg,' + v.skewy + 'deg)'\n    return s\n  }\n\n  function rgb(r, g, b) {\n    return '#' + (1 << 24 | r << 16 | g << 8 | b).toString(16).slice(1)\n  }\n\n  // convert rgb and short hex to long hex\n  function toHex(c) {\n    var m = c.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)/)\n    return (m ? rgb(m[1], m[2], m[3]) : c)\n      .replace(/#(\\w)(\\w)(\\w)$/, '#$1$1$2$2$3$3') // short skirt to long jacket\n  }\n\n  // change font-size => fontSize etc.\n  function camelize(s) {\n    return s.replace(/-(.)/g, function (m, m1) {\n      return m1.toUpperCase()\n    })\n  }\n\n  // aren't we having it?\n  function fun(f) {\n    return typeof f == 'function'\n  }\n\n  function nativeTween(t) {\n    // default to a pleasant-to-the-eye easeOut (like native animations)\n    return Math.sin(t * Math.PI / 2)\n  }\n\n  /**\n    * Core tween method that requests each frame\n    * @param duration: time in milliseconds. defaults to 1000\n    * @param fn: tween frame callback function receiving 'position'\n    * @param done {optional}: complete callback function\n    * @param ease {optional}: easing method. defaults to easeOut\n    * @param from {optional}: integer to start from\n    * @param to {optional}: integer to end at\n    * @returns method to stop the animation\n    */\n  function tween(duration, fn, done, ease, from, to) {\n    ease = fun(ease) ? ease : morpheus.easings[ease] || nativeTween\n    var time = duration || thousand\n      , self = this\n      , diff = to - from\n      , start = now()\n      , stop = 0\n      , end = 0\n\n    function run(t) {\n      var delta = t - start\n      if (delta > time || stop) {\n        to = isFinite(to) ? to : 1\n        stop ? end && fn(to) : fn(to)\n        die(run)\n        return done && done.apply(self)\n      }\n      // if you don't specify a 'to' you can use tween as a generic delta tweener\n      // cool, eh?\n      isFinite(to) ?\n        fn((diff * ease(delta / time)) + from) :\n        fn(ease(delta / time))\n    }\n\n    live(run)\n\n    return {\n      stop: function (jump) {\n        stop = 1\n        end = jump // jump to end of animation?\n        if (!jump) done = null // remove callback if not jumping to end\n      }\n    }\n  }\n\n  /**\n    * generic bezier method for animating x|y coordinates\n    * minimum of 2 points required (start and end).\n    * first point start, last point end\n    * additional control points are optional (but why else would you use this anyway ;)\n    * @param points: array containing control points\n       [[0, 0], [100, 200], [200, 100]]\n    * @param pos: current be(tween) position represented as float  0 - 1\n    * @return [x, y]\n    */\n  function bezier(points, pos) {\n    var n = points.length, r = [], i, j\n    for (i = 0; i < n; ++i) {\n      r[i] = [points[i][0], points[i][1]]\n    }\n    for (j = 1; j < n; ++j) {\n      for (i = 0; i < n - j; ++i) {\n        r[i][0] = (1 - pos) * r[i][0] + pos * r[parseInt(i + 1, 10)][0]\n        r[i][1] = (1 - pos) * r[i][1] + pos * r[parseInt(i + 1, 10)][1]\n      }\n    }\n    return [r[0][0], r[0][1]]\n  }\n\n  // this gets you the next hex in line according to a 'position'\n  function nextColor(pos, start, finish) {\n    var r = [], i, e, from, to\n    for (i = 0; i < 6; i++) {\n      from = Math.min(15, parseInt(start.charAt(i),  16))\n      to   = Math.min(15, parseInt(finish.charAt(i), 16))\n      e = Math.floor((to - from) * pos + from)\n      e = e > 15 ? 15 : e < 0 ? 0 : e\n      r[i] = e.toString(16)\n    }\n    return '#' + r.join('')\n  }\n\n  // this retreives the frame value within a sequence\n  function getTweenVal(pos, units, begin, end, k, i, v) {\n    if (k == 'transform') {\n      v = {}\n      for (var t in begin[i][k]) {\n        v[t] = (t in end[i][k]) ? Math.round(((end[i][k][t] - begin[i][k][t]) * pos + begin[i][k][t]) * thousand) / thousand : begin[i][k][t]\n      }\n      return v\n    } else if (typeof begin[i][k] == 'string') {\n      return nextColor(pos, begin[i][k], end[i][k])\n    } else {\n      // round so we don't get crazy long floats\n      v = Math.round(((end[i][k] - begin[i][k]) * pos + begin[i][k]) * thousand) / thousand\n      // some css properties don't require a unit (like zIndex, lineHeight, opacity)\n      if (!(k in unitless)) v += units[i][k] || 'px'\n      return v\n    }\n  }\n\n  // support for relative movement via '+=n' or '-=n'\n  function by(val, start, m, r, i) {\n    return (m = relVal.exec(val)) ?\n      (i = parseFloat(m[2])) && (start + (m[1] == '+' ? 1 : -1) * i) :\n      parseFloat(val)\n  }\n\n  /**\n    * morpheus:\n    * @param element(s): HTMLElement(s)\n    * @param options: mixed bag between CSS Style properties & animation options\n    *  - {n} CSS properties|values\n    *     - value can be strings, integers,\n    *     - or callback function that receives element to be animated. method must return value to be tweened\n    *     - relative animations start with += or -= followed by integer\n    *  - duration: time in ms - defaults to 1000(ms)\n    *  - easing: a transition method - defaults to an 'easeOut' algorithm\n    *  - complete: a callback method for when all elements have finished\n    *  - bezier: array of arrays containing x|y coordinates that define the bezier points. defaults to none\n    *     - this may also be a function that receives element to be animated. it must return a value\n    */\n  function morpheus(elements, options) {\n    var els = elements ? (els = isFinite(elements.length) ? elements : [elements]) : [], i\n      , complete = options.complete\n      , duration = options.duration\n      , ease = options.easing\n      , points = options.bezier\n      , begin = []\n      , end = []\n      , units = []\n      , bez = []\n      , originalLeft\n      , originalTop\n\n    if (points) {\n      // remember the original values for top|left\n      originalLeft = options.left;\n      originalTop = options.top;\n      delete options.right;\n      delete options.bottom;\n      delete options.left;\n      delete options.top;\n    }\n\n    for (i = els.length; i--;) {\n\n      // record beginning and end states to calculate positions\n      begin[i] = {}\n      end[i] = {}\n      units[i] = {}\n\n      // are we 'moving'?\n      if (points) {\n\n        var left = getStyle(els[i], 'left')\n          , top = getStyle(els[i], 'top')\n          , xy = [by(fun(originalLeft) ? originalLeft(els[i]) : originalLeft || 0, parseFloat(left)),\n                  by(fun(originalTop) ? originalTop(els[i]) : originalTop || 0, parseFloat(top))]\n\n        bez[i] = fun(points) ? points(els[i], xy) : points\n        bez[i].push(xy)\n        bez[i].unshift([\n          parseInt(left, 10),\n          parseInt(top, 10)\n        ])\n      }\n\n      for (var k in options) {\n        switch (k) {\n        case 'complete':\n        case 'duration':\n        case 'easing':\n        case 'bezier':\n          continue\n        }\n        var v = getStyle(els[i], k), unit\n          , tmp = fun(options[k]) ? options[k](els[i]) : options[k]\n        if (typeof tmp == 'string' &&\n            rgbOhex.test(tmp) &&\n            !rgbOhex.test(v)) {\n          delete options[k]; // remove key :(\n          continue; // cannot animate colors like 'orange' or 'transparent'\n                    // only #xxx, #xxxxxx, rgb(n,n,n)\n        }\n\n        begin[i][k] = k == 'transform' ? parseTransform(v) :\n          typeof tmp == 'string' && rgbOhex.test(tmp) ?\n            toHex(v).slice(1) :\n            parseFloat(v)\n        end[i][k] = k == 'transform' ? parseTransform(tmp, begin[i][k]) :\n          typeof tmp == 'string' && tmp.charAt(0) == '#' ?\n            toHex(tmp).slice(1) :\n            by(tmp, parseFloat(v));\n        // record original unit\n        (typeof tmp == 'string') && (unit = tmp.match(numUnit)) && (units[i][k] = unit[1])\n      }\n    }\n    // ONE TWEEN TO RULE THEM ALL\n    return tween.apply(els, [duration, function (pos, v, xy) {\n      // normally not a fan of optimizing for() loops, but we want something\n      // fast for animating\n      for (i = els.length; i--;) {\n        if (points) {\n          xy = bezier(bez[i], pos)\n          els[i].style.left = xy[0] + 'px'\n          els[i].style.top = xy[1] + 'px'\n        }\n        for (var k in options) {\n          v = getTweenVal(pos, units, begin, end, k, i)\n          k == 'transform' ?\n            els[i].style[transform] = formatTransform(v) :\n            k == 'opacity' && !opasity ?\n              (els[i].style.filter = 'alpha(opacity=' + (v * 100) + ')') :\n              (els[i].style[camelize(k)] = v)\n        }\n      }\n    }, complete, ease])\n  }\n\n  // expose useful methods\n  morpheus.tween = tween\n  morpheus.getStyle = getStyle\n  morpheus.bezier = bezier\n  morpheus.transform = transform\n  morpheus.parseTransform = parseTransform\n  morpheus.formatTransform = formatTransform\n  morpheus.animationFrame = frame\n  morpheus.easings = {}\n\n  return morpheus\n\n});\n\n//# sourceMappingURL=data:application/json;base64,");
},function(module,exports){eval("module.exports = function(module) {\r\n	if(!module.webpackPolyfill) {\r\n		module.deprecate = function() {};\r\n		module.paths = [];\r\n		// module.parent = undefined by default\r\n		module.children = [];\r\n		module.webpackPolyfill = 1;\r\n	}\r\n	return module;\r\n}\r\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2MzYzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcclxuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdH1cclxuXHRyZXR1cm4gbW9kdWxlO1xyXG59XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4gKiogbW9kdWxlIGlkID0gMjJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")}]);