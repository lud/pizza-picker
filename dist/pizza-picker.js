!function(n){function c(l){if(e[l])return e[l].exports;var t=e[l]={exports:{},id:l,loaded:!1};return n[l].call(t.exports,t,t.exports,c),t.loaded=!0,t.exports}var e={};return c.m=n,c.c=e,c.p="",c(0)}([function(module,exports,__webpack_require__){eval('"use strict";\n\nvar status = __webpack_require__(15).status;\n\nvar extend = __webpack_require__(19);\nvar m = __webpack_require__(20);\nvar storeFactory = __webpack_require__(36);\nvar viewFactory = __webpack_require__(35);\nvar Reflux = __webpack_require__(13);\n\n// app\nvar PizzaPicker = {};\nwindow.PizzaPicker = PizzaPicker;\n\nextend(PizzaPicker, {\n	create: function create(_opts) {\n		var opts = setDefaultOpts(_opts);\n		var api = Reflux.createActions(["toggleYummy", "toggleYuck"]);\n		var store = storeFactory.make(api, opts);\n		var view = viewFactory.make(api, store, opts);\n		opts.container.classList.add("pizza-picker"); // @todo move this somewhere else ?\n		store.trigger();\n	},\n	i18n: {}\n});\n\nconsole.log("pp", PizzaPicker);\n\n// -----------------------------------------------------------------------------\n\nfunction setDefaultOpts(opts) {\n	return extend({\n		ingredients: {},\n		pizzas: [],\n		filters: {},\n		locale: "en",\n		container: "pizzapicker",\n		events: {},\n		prices: [],\n		renderIngredients: true,\n		renderPizzas: true,\n		renderFilters: true\n	}, opts);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvbWFpbi5qcz81NjM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0lBQVEsTUFBTSx1QkFBTyxFQUFXLEVBQXhCLE1BQU07O0FBQ2QsSUFBSSxNQUFNLEdBQUcsbUJBQU8sQ0FBQyxFQUFRLENBQUM7QUFDOUIsSUFBSSxDQUFDLEdBQUcsbUJBQU8sQ0FBQyxFQUFTLENBQUM7QUFDMUIsSUFBSSxZQUFZLEdBQUcsbUJBQU8sQ0FBQyxFQUFPLENBQUM7QUFDbkMsSUFBSSxXQUFXLEdBQUcsbUJBQU8sQ0FBQyxFQUFNLENBQUM7QUFDakMsSUFBSSxNQUFNLEdBQUcsbUJBQU8sQ0FBQyxFQUFRLENBQUM7OztBQUk5QixJQUFJLFdBQVcsR0FBRyxFQUFFO0FBQ3BCLE1BQU0sQ0FBQyxXQUFXLEdBQUcsV0FBVzs7QUFFaEMsTUFBTSxDQUFDLFdBQVcsRUFBRTtBQUNuQixPQUFNLEVBQUUsZ0JBQVMsS0FBSyxFQUFFO0FBQ3ZCLE1BQUksSUFBSSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUM7QUFDaEMsTUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUM5QixhQUFhLEVBQUUsWUFBWSxDQUMzQixDQUFDO0FBQ0YsTUFBSSxLQUFLLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDO0FBQ3hDLE1BQUksSUFBSSxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUM7QUFDN0MsTUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUM1QyxPQUFLLENBQUMsT0FBTyxFQUFFO0VBQ2Y7QUFDRCxLQUFJLEVBQUUsRUFBRTtDQUNSLENBQUM7O0FBRUYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUMsV0FBVyxDQUFDOzs7O0FBVTdCLFNBQVMsY0FBYyxDQUFFLElBQUksRUFBRTtBQUM5QixRQUFPLE1BQU0sQ0FBQztBQUNiLGFBQVcsRUFBQyxFQUFFO0FBQ2QsUUFBTSxFQUFDLEVBQUU7QUFDVCxTQUFPLEVBQUMsRUFBRTtBQUNWLFFBQU0sRUFBQyxJQUFJO0FBQ1gsV0FBUyxFQUFDLGFBQWE7QUFDdkIsUUFBTSxFQUFDLEVBQUU7QUFDVCxRQUFNLEVBQUMsRUFBRTtBQUNULG1CQUFpQixFQUFFLElBQUk7QUFDdkIsY0FBWSxFQUFFLElBQUk7QUFDbEIsZUFBYSxFQUFFLElBQUk7RUFDbkIsRUFBRSxJQUFJLENBQUMiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c3RhdHVzfSBmcm9tICdjb25zdGFudHMnXG5sZXQgZXh0ZW5kID0gcmVxdWlyZSgnZXh0ZW5kJylcbmxldCBtID0gcmVxdWlyZSgnbWl0aHJpbCcpXG5sZXQgc3RvcmVGYWN0b3J5ID0gcmVxdWlyZSgnc3RvcmUnKVxubGV0IHZpZXdGYWN0b3J5ID0gcmVxdWlyZSgndmlldycpXG5sZXQgUmVmbHV4ID0gcmVxdWlyZSgncmVmbHV4JylcblxuXG4vLyBhcHBcbmxldCBQaXp6YVBpY2tlciA9IHt9XG53aW5kb3cuUGl6emFQaWNrZXIgPSBQaXp6YVBpY2tlclxuXG5leHRlbmQoUGl6emFQaWNrZXIsIHtcblx0Y3JlYXRlOiBmdW5jdGlvbihfb3B0cykge1xuXHRcdGxldCBvcHRzID0gc2V0RGVmYXVsdE9wdHMoX29wdHMpXG5cdFx0bGV0IGFwaSA9IFJlZmx1eC5jcmVhdGVBY3Rpb25zKFtcblx0XHRcdCd0b2dnbGVZdW1teScsICd0b2dnbGVZdWNrJ1xuXHRcdF0pXG5cdFx0bGV0IHN0b3JlID0gc3RvcmVGYWN0b3J5Lm1ha2UoYXBpLCBvcHRzKVxuXHRcdGxldCB2aWV3ID0gdmlld0ZhY3RvcnkubWFrZShhcGksIHN0b3JlLCBvcHRzKVxuXHRcdG9wdHMuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3BpenphLXBpY2tlcicpIC8vIEB0b2RvIG1vdmUgdGhpcyBzb21ld2hlcmUgZWxzZSA/XG5cdFx0c3RvcmUudHJpZ2dlcigpXG5cdH0sXG5cdGkxOG46IHt9XG59KVxuXG5jb25zb2xlLmxvZygncHAnLFBpenphUGlja2VyKVxuXG5cblxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuXG5mdW5jdGlvbiBzZXREZWZhdWx0T3B0cyAob3B0cykge1xuXHRyZXR1cm4gZXh0ZW5kKHtcblx0XHRpbmdyZWRpZW50czp7fSxcblx0XHRwaXp6YXM6W10sXG5cdFx0ZmlsdGVyczp7fSxcblx0XHRsb2NhbGU6J2VuJyxcblx0XHRjb250YWluZXI6J3BpenphcGlja2VyJyxcblx0XHRldmVudHM6e30sXG5cdFx0cHJpY2VzOltdLFxuXHRcdHJlbmRlckluZ3JlZGllbnRzOiB0cnVlLFxuXHRcdHJlbmRlclBpenphczogdHJ1ZSxcblx0XHRyZW5kZXJGaWx0ZXJzOiB0cnVlXG5cdH0sIG9wdHMpXG59XG5cblxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogRTovbWluc3JjL3BpenphLXBpY2tlci9+L2VudmlmeS1sb2FkZXIhRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvbWFpbi5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},,function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(setImmediate) {"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.capitalize = capitalize;\nexports.callbackName = callbackName;\nexports.isObject = isObject;\nexports.extend = extend;\nexports.isFunction = isFunction;\nexports.object = object;\nexports.isArguments = isArguments;\nexports.throwIf = throwIf;\n\nfunction capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction callbackName(string, prefix) {\n    prefix = prefix || "on";\n    return prefix + exports.capitalize(string);\n}\n\nvar environment = {};\n\nexports.environment = environment;\nfunction checkEnv(target) {\n    var flag = undefined;\n    try {\n        /*eslint-disable no-eval */\n        if (eval(target)) {\n            flag = true;\n        }\n        /*eslint-enable no-eval */\n    } catch (e) {\n        flag = false;\n    }\n    environment[callbackName(target, "has")] = flag;\n}\ncheckEnv("setImmediate");\ncheckEnv("Promise");\n\n/*\n * isObject, extend, isFunction, isArguments are taken from undescore/lodash in\n * order to remove the dependency\n */\n\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === "function" || type === "object" && !!obj;\n}\n\nfunction extend(obj) {\n    if (!isObject(obj)) {\n        return obj;\n    }\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (Object.getOwnPropertyDescriptor && Object.defineProperty) {\n                var propertyDescriptor = Object.getOwnPropertyDescriptor(source, prop);\n                Object.defineProperty(obj, prop, propertyDescriptor);\n            } else {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction isFunction(value) {\n    return typeof value === "function";\n}\n\nexports.EventEmitter = __webpack_require__(22);\n\nif (environment.hasSetImmediate) {\n    exports.nextTick = function (callback) {\n        setImmediate(callback);\n    };\n} else {\n    exports.nextTick = function (callback) {\n        setTimeout(callback, 0);\n    };\n}\n\nfunction object(keys, vals) {\n    var o = {},\n        i = 0;\n    for (; i < keys.length; i++) {\n        o[keys[i]] = vals[i];\n    }\n    return o;\n}\n\nif (environment.hasPromise) {\n    exports.Promise = Promise;\n    exports.createPromise = function (resolver) {\n        return new exports.Promise(resolver);\n    };\n} else {\n    exports.Promise = null;\n    exports.createPromise = function () {};\n}\n\nfunction isArguments(value) {\n    return typeof value === "object" && "callee" in value && typeof value.length === "number";\n}\n\nfunction throwIf(val, msg) {\n    if (val) {\n        throw Error(msg || val);\n    }\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7).setImmediate))\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi91dGlscy5qcz83MTVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFlBQVk7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYztBQUNkO0FBQ0EsVUFBVSxpQkFBaUI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY2FwaXRhbGl6ZSA9IGNhcGl0YWxpemU7XG5leHBvcnRzLmNhbGxiYWNrTmFtZSA9IGNhbGxiYWNrTmFtZTtcbmV4cG9ydHMuaXNPYmplY3QgPSBpc09iamVjdDtcbmV4cG9ydHMuZXh0ZW5kID0gZXh0ZW5kO1xuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmV4cG9ydHMub2JqZWN0ID0gb2JqZWN0O1xuZXhwb3J0cy5pc0FyZ3VtZW50cyA9IGlzQXJndW1lbnRzO1xuZXhwb3J0cy50aHJvd0lmID0gdGhyb3dJZjtcblxuZnVuY3Rpb24gY2FwaXRhbGl6ZShzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyaW5nLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpO1xufVxuXG5mdW5jdGlvbiBjYWxsYmFja05hbWUoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICBwcmVmaXggPSBwcmVmaXggfHwgXCJvblwiO1xuICAgIHJldHVybiBwcmVmaXggKyBleHBvcnRzLmNhcGl0YWxpemUoc3RyaW5nKTtcbn1cblxudmFyIGVudmlyb25tZW50ID0ge307XG5cbmV4cG9ydHMuZW52aXJvbm1lbnQgPSBlbnZpcm9ubWVudDtcbmZ1bmN0aW9uIGNoZWNrRW52KHRhcmdldCkge1xuICAgIHZhciBmbGFnID0gdW5kZWZpbmVkO1xuICAgIHRyeSB7XG4gICAgICAgIC8qZXNsaW50LWRpc2FibGUgbm8tZXZhbCAqL1xuICAgICAgICBpZiAoZXZhbCh0YXJnZXQpKSB7XG4gICAgICAgICAgICBmbGFnID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICAvKmVzbGludC1lbmFibGUgbm8tZXZhbCAqL1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgZmxhZyA9IGZhbHNlO1xuICAgIH1cbiAgICBlbnZpcm9ubWVudFtjYWxsYmFja05hbWUodGFyZ2V0LCBcImhhc1wiKV0gPSBmbGFnO1xufVxuY2hlY2tFbnYoXCJzZXRJbW1lZGlhdGVcIik7XG5jaGVja0VudihcIlByb21pc2VcIik7XG5cbi8qXG4gKiBpc09iamVjdCwgZXh0ZW5kLCBpc0Z1bmN0aW9uLCBpc0FyZ3VtZW50cyBhcmUgdGFrZW4gZnJvbSB1bmRlc2NvcmUvbG9kYXNoIGluXG4gKiBvcmRlciB0byByZW1vdmUgdGhlIGRlcGVuZGVuY3lcbiAqL1xuXG5mdW5jdGlvbiBpc09iamVjdChvYmopIHtcbiAgICB2YXIgdHlwZSA9IHR5cGVvZiBvYmo7XG4gICAgcmV0dXJuIHR5cGUgPT09IFwiZnVuY3Rpb25cIiB8fCB0eXBlID09PSBcIm9iamVjdFwiICYmICEhb2JqO1xufVxuXG5mdW5jdGlvbiBleHRlbmQob2JqKSB7XG4gICAgaWYgKCFpc09iamVjdChvYmopKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHZhciBzb3VyY2UsIHByb3A7XG4gICAgZm9yICh2YXIgaSA9IDEsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGZvciAocHJvcCBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIHZhciBwcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgcHJvcCk7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgcHJvcCwgcHJvcGVydHlEZXNjcmlwdG9yKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgb2JqW3Byb3BdID0gc291cmNlW3Byb3BdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCI7XG59XG5cbmV4cG9ydHMuRXZlbnRFbWl0dGVyID0gcmVxdWlyZShcImV2ZW50ZW1pdHRlcjNcIik7XG5cbmlmIChlbnZpcm9ubWVudC5oYXNTZXRJbW1lZGlhdGUpIHtcbiAgICBleHBvcnRzLm5leHRUaWNrID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHNldEltbWVkaWF0ZShjYWxsYmFjayk7XG4gICAgfTtcbn0gZWxzZSB7XG4gICAgZXhwb3J0cy5uZXh0VGljayA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCAwKTtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBvYmplY3Qoa2V5cywgdmFscykge1xuICAgIHZhciBvID0ge30sXG4gICAgICAgIGkgPSAwO1xuICAgIGZvciAoOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBvW2tleXNbaV1dID0gdmFsc1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIG87XG59XG5cbmlmIChlbnZpcm9ubWVudC5oYXNQcm9taXNlKSB7XG4gICAgZXhwb3J0cy5Qcm9taXNlID0gUHJvbWlzZTtcbiAgICBleHBvcnRzLmNyZWF0ZVByb21pc2UgPSBmdW5jdGlvbiAocmVzb2x2ZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBleHBvcnRzLlByb21pc2UocmVzb2x2ZXIpO1xuICAgIH07XG59IGVsc2Uge1xuICAgIGV4cG9ydHMuUHJvbWlzZSA9IG51bGw7XG4gICAgZXhwb3J0cy5jcmVhdGVQcm9taXNlID0gZnVuY3Rpb24gKCkge307XG59XG5cbmZ1bmN0aW9uIGlzQXJndW1lbnRzKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiBcImNhbGxlZVwiIGluIHZhbHVlICYmIHR5cGVvZiB2YWx1ZS5sZW5ndGggPT09IFwibnVtYmVyXCI7XG59XG5cbmZ1bmN0aW9uIHRocm93SWYodmFsLCBtc2cpIHtcbiAgICBpZiAodmFsKSB7XG4gICAgICAgIHRocm93IEVycm9yKG1zZyB8fCB2YWwpO1xuICAgIH1cbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWZsdXgvfi9yZWZsdXgtY29yZS9saWIvdXRpbHMuanNcbiAqKiBtb2R1bGUgaWQgPSAyXG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar _ = __webpack_require__(2),\n    maker = __webpack_require__(12).instanceJoinCreator;\n\n/**\n * Extract child listenables from a parent from their\n * children property and return them in a keyed Object\n *\n * @param {Object} listenable The parent listenable\n */\nvar mapChildListenables = function mapChildListenables(listenable) {\n    var i = 0,\n        children = {},\n        childName;\n    for (; i < (listenable.children || []).length; ++i) {\n        childName = listenable.children[i];\n        if (listenable[childName]) {\n            children[childName] = listenable[childName];\n        }\n    }\n    return children;\n};\n\n/**\n * Make a flat dictionary of all listenables including their\n * possible children (recursively), concatenating names in camelCase.\n *\n * @param {Object} listenables The top-level listenables\n */\nvar flattenListenables = function flattenListenables(listenables) {\n    var flattened = {};\n    for (var key in listenables) {\n        var listenable = listenables[key];\n        var childMap = mapChildListenables(listenable);\n\n        // recursively flatten children\n        var children = flattenListenables(childMap);\n\n        // add the primary listenable and chilren\n        flattened[key] = listenable;\n        for (var childKey in children) {\n            var childListenable = children[childKey];\n            flattened[key + _.capitalize(childKey)] = childListenable;\n        }\n    }\n\n    return flattened;\n};\n\n/**\n * A module of methods related to listening.\n */\nmodule.exports = {\n\n    /**\n     * An internal utility function used by `validateListening`\n     *\n     * @param {Action|Store} listenable The listenable we want to search for\n     * @returns {Boolean} The result of a recursive search among `this.subscriptions`\n     */\n    hasListener: function hasListener(listenable) {\n        var i = 0,\n            j,\n            listener,\n            listenables;\n        for (; i < (this.subscriptions || []).length; ++i) {\n            listenables = [].concat(this.subscriptions[i].listenable);\n            for (j = 0; j < listenables.length; j++) {\n                listener = listenables[j];\n                if (listener === listenable || listener.hasListener && listener.hasListener(listenable)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    /**\n     * A convenience method that listens to all listenables in the given object.\n     *\n     * @param {Object} listenables An object of listenables. Keys will be used as callback method names.\n     */\n    listenToMany: function listenToMany(listenables) {\n        var allListenables = flattenListenables(listenables);\n        for (var key in allListenables) {\n            var cbname = _.callbackName(key),\n                localname = this[cbname] ? cbname : this[key] ? key : undefined;\n            if (localname) {\n                this.listenTo(allListenables[key], localname, this[cbname + "Default"] || this[localname + "Default"] || localname);\n            }\n        }\n    },\n\n    /**\n     * Checks if the current context can listen to the supplied listenable\n     *\n     * @param {Action|Store} listenable An Action or Store that should be\n     *  listened to.\n     * @returns {String|Undefined} An error message, or undefined if there was no problem.\n     */\n    validateListening: function validateListening(listenable) {\n        if (listenable === this) {\n            return "Listener is not able to listen to itself";\n        }\n        if (!_.isFunction(listenable.listen)) {\n            return listenable + " is missing a listen method";\n        }\n        if (listenable.hasListener && listenable.hasListener(this)) {\n            return "Listener cannot listen to this listenable because of circular loop";\n        }\n    },\n\n    /**\n     * Sets up a subscription to the given listenable for the context object\n     *\n     * @param {Action|Store} listenable An Action or Store that should be\n     *  listened to.\n     * @param {Function|String} callback The callback to register as event handler\n     * @param {Function|String} defaultCallback The callback to register as default handler\n     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is the object being listened to\n     */\n    listenTo: function listenTo(listenable, callback, defaultCallback) {\n        var desub,\n            unsubscriber,\n            subscriptionobj,\n            subs = this.subscriptions = this.subscriptions || [];\n        _.throwIf(this.validateListening(listenable));\n        this.fetchInitialState(listenable, defaultCallback);\n        desub = listenable.listen(this[callback] || callback, this);\n        unsubscriber = function () {\n            var index = subs.indexOf(subscriptionobj);\n            _.throwIf(index === -1, "Tried to remove listen already gone from subscriptions list!");\n            subs.splice(index, 1);\n            desub();\n        };\n        subscriptionobj = {\n            stop: unsubscriber,\n            listenable: listenable\n        };\n        subs.push(subscriptionobj);\n        return subscriptionobj;\n    },\n\n    /**\n     * Stops listening to a single listenable\n     *\n     * @param {Action|Store} listenable The action or store we no longer want to listen to\n     * @returns {Boolean} True if a subscription was found and removed, otherwise false.\n     */\n    stopListeningTo: function stopListeningTo(listenable) {\n        var sub,\n            i = 0,\n            subs = this.subscriptions || [];\n        for (; i < subs.length; i++) {\n            sub = subs[i];\n            if (sub.listenable === listenable) {\n                sub.stop();\n                _.throwIf(subs.indexOf(sub) !== -1, "Failed to remove listen from subscriptions list!");\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /**\n     * Stops all subscriptions and empties subscriptions array\n     */\n    stopListeningToAll: function stopListeningToAll() {\n        var remaining,\n            subs = this.subscriptions || [];\n        while (remaining = subs.length) {\n            subs[0].stop();\n            _.throwIf(subs.length !== remaining - 1, "Failed to remove listen from subscriptions list!");\n        }\n    },\n\n    /**\n     * Used in `listenTo`. Fetches initial data from a publisher if it has a `getInitialState` method.\n     * @param {Action|Store} listenable The publisher we want to get initial state from\n     * @param {Function|String} defaultCallback The method to receive the data\n     */\n    fetchInitialState: function fetchInitialState(listenable, defaultCallback) {\n        defaultCallback = defaultCallback && this[defaultCallback] || defaultCallback;\n        var me = this;\n        if (_.isFunction(defaultCallback) && _.isFunction(listenable.getInitialState)) {\n            var data = listenable.getInitialState();\n            if (data && _.isFunction(data.then)) {\n                data.then(function () {\n                    defaultCallback.apply(me, arguments);\n                });\n            } else {\n                defaultCallback.call(this, data);\n            }\n        }\n    },\n\n    /**\n     * The callback will be called once all listenables have triggered at least once.\n     * It will be invoked with the last emission from each listenable.\n     * @param {...Publishers} publishers Publishers that should be tracked.\n     * @param {Function|String} callback The method to call when all publishers have emitted\n     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables\n     */\n    joinTrailing: maker("last"),\n\n    /**\n     * The callback will be called once all listenables have triggered at least once.\n     * It will be invoked with the first emission from each listenable.\n     * @param {...Publishers} publishers Publishers that should be tracked.\n     * @param {Function|String} callback The method to call when all publishers have emitted\n     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables\n     */\n    joinLeading: maker("first"),\n\n    /**\n     * The callback will be called once all listenables have triggered at least once.\n     * It will be invoked with all emission from each listenable.\n     * @param {...Publishers} publishers Publishers that should be tracked.\n     * @param {Function|String} callback The method to call when all publishers have emitted\n     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables\n     */\n    joinConcat: maker("all"),\n\n    /**\n     * The callback will be called once all listenables have triggered.\n     * If a callback triggers twice before that happens, an error is thrown.\n     * @param {...Publishers} publishers Publishers that should be tracked.\n     * @param {Function|String} callback The method to call when all publishers have emitted\n     * @returns {Object} A subscription obj where `stop` is an unsub function and `listenable` is an array of listenables\n     */\n    joinStrict: maker("strict")\n};\n//# sourceMappingURL=data:application/json;base64,');
},function(module,exports){eval('"use strict";\n\nexports.createdStores = [];\n\nexports.createdActions = [];\n\nexports.reset = function () {\n    while (exports.createdStores.length) {\n        exports.createdStores.pop();\n    }\n    while (exports.createdActions.length) {\n        exports.createdActions.pop();\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9LZWVwLmpzP2NlYTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuY3JlYXRlZFN0b3JlcyA9IFtdO1xuXG5leHBvcnRzLmNyZWF0ZWRBY3Rpb25zID0gW107XG5cbmV4cG9ydHMucmVzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgd2hpbGUgKGV4cG9ydHMuY3JlYXRlZFN0b3Jlcy5sZW5ndGgpIHtcbiAgICAgICAgZXhwb3J0cy5jcmVhdGVkU3RvcmVzLnBvcCgpO1xuICAgIH1cbiAgICB3aGlsZSAoZXhwb3J0cy5jcmVhdGVkQWN0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgZXhwb3J0cy5jcmVhdGVkQWN0aW9ucy5wb3AoKTtcbiAgICB9XG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9LZWVwLmpzXG4gKiogbW9kdWxlIGlkID0gNFxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar _ = __webpack_require__(2);\n\n/**\n * A module of methods for object that you want to be able to listen to.\n * This module is consumed by `createStore` and `createAction`\n */\nmodule.exports = {\n\n    /**\n     * Hook used by the publisher that is invoked before emitting\n     * and before `shouldEmit`. The arguments are the ones that the action\n     * is invoked with. If this function returns something other than\n     * undefined, that will be passed on as arguments for shouldEmit and\n     * emission.\n     */\n    preEmit: function preEmit() {},\n\n    /**\n     * Hook used by the publisher after `preEmit` to determine if the\n     * event should be emitted with given arguments. This may be overridden\n     * in your application, default implementation always returns true.\n     *\n     * @returns {Boolean} true if event should be emitted\n     */\n    shouldEmit: function shouldEmit() {\n        return true;\n    },\n\n    /**\n     * Subscribes the given callback for action triggered\n     *\n     * @param {Function} callback The callback to register as event handler\n     * @param {Mixed} [optional] bindContext The context to bind the callback with\n     * @returns {Function} Callback that unsubscribes the registered event handler\n     */\n    listen: function listen(callback, bindContext) {\n        bindContext = bindContext || this;\n        var eventHandler = function eventHandler(args) {\n            if (aborted) {\n                return;\n            }\n            callback.apply(bindContext, args);\n        },\n            me = this,\n            aborted = false;\n        this.emitter.addListener(this.eventLabel, eventHandler);\n        return function () {\n            aborted = true;\n            me.emitter.removeListener(me.eventLabel, eventHandler);\n        };\n    },\n\n    /**\n     * Attach handlers to promise that trigger the completed and failed\n     * child publishers, if available.\n     *\n     * @param {Object} The promise to attach to\n     */\n    promise: function promise(_promise) {\n        var me = this;\n\n        var canHandlePromise = this.children.indexOf("completed") >= 0 && this.children.indexOf("failed") >= 0;\n\n        if (!canHandlePromise) {\n            throw new Error("Publisher must have \\"completed\\" and \\"failed\\" child publishers");\n        }\n\n        _promise.then(function (response) {\n            return me.completed(response);\n        }, function (error) {\n            return me.failed(error);\n        });\n    },\n\n    /**\n     * Subscribes the given callback for action triggered, which should\n     * return a promise that in turn is passed to `this.promise`\n     *\n     * @param {Function} callback The callback to register as event handler\n     */\n    listenAndPromise: function listenAndPromise(callback, bindContext) {\n        var me = this;\n        bindContext = bindContext || this;\n        this.willCallPromise = (this.willCallPromise || 0) + 1;\n\n        var removeListen = this.listen(function () {\n\n            if (!callback) {\n                throw new Error("Expected a function returning a promise but got " + callback);\n            }\n\n            var args = arguments,\n                promise = callback.apply(bindContext, args);\n            return me.promise.call(me, promise);\n        }, bindContext);\n\n        return function () {\n            me.willCallPromise--;\n            removeListen.call(me);\n        };\n    },\n\n    /**\n     * Publishes an event using `this.emitter` (if `shouldEmit` agrees)\n     */\n    trigger: function trigger() {\n        var args = arguments,\n            pre = this.preEmit.apply(this, args);\n        args = pre === undefined ? args : _.isArguments(pre) ? pre : [].concat(pre);\n        if (this.shouldEmit.apply(this, args)) {\n            this.emitter.emit(this.eventLabel, args);\n        }\n    },\n\n    /**\n     * Tries to publish the event on the next tick\n     */\n    triggerAsync: function triggerAsync() {\n        var args = arguments,\n            me = this;\n        _.nextTick(function () {\n            me.trigger.apply(me, args);\n        });\n    },\n\n    /**\n     * Returns a Promise for the triggered action\n     *\n     * @return {Promise}\n     *   Resolved by completed child action.\n     *   Rejected by failed child action.\n     *   If listenAndPromise\'d, then promise associated to this trigger.\n     *   Otherwise, the promise is for next child action completion.\n     */\n    triggerPromise: function triggerPromise() {\n        var me = this;\n        var args = arguments;\n\n        var canHandlePromise = this.children.indexOf("completed") >= 0 && this.children.indexOf("failed") >= 0;\n\n        var promise = _.createPromise(function (resolve, reject) {\n            // If `listenAndPromise` is listening\n            // patch `promise` w/ context-loaded resolve/reject\n            if (me.willCallPromise) {\n                _.nextTick(function () {\n                    var previousPromise = me.promise;\n                    me.promise = function (inputPromise) {\n                        inputPromise.then(resolve, reject);\n                        // Back to your regularly schedule programming.\n                        me.promise = previousPromise;\n                        return me.promise.apply(me, arguments);\n                    };\n                    me.trigger.apply(me, args);\n                });\n                return;\n            }\n\n            if (canHandlePromise) {\n                var removeSuccess = me.completed.listen(function (argsArr) {\n                    removeSuccess();\n                    removeFailed();\n                    resolve(argsArr);\n                });\n\n                var removeFailed = me.failed.listen(function (argsArr) {\n                    removeSuccess();\n                    removeFailed();\n                    reject(argsArr);\n                });\n            }\n\n            me.triggerAsync.apply(me, args);\n\n            if (!canHandlePromise) {\n                resolve();\n            }\n        });\n\n        return promise;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,')},function(module,exports,__webpack_require__){eval("var _ = __webpack_require__(2),\n    ListenerMethods = __webpack_require__(3);\n\n/**\n * A module meant to be consumed as a mixin by a React component. Supplies the methods from\n * `ListenerMethods` mixin and takes care of teardown of subscriptions.\n * Note that if you're using the `connect` mixin you don't need this mixin, as connect will\n * import everything this mixin contains!\n */\nmodule.exports = _.extend({\n\n    /**\n     * Cleans up all listener previously registered.\n     */\n    componentWillUnmount: ListenerMethods.stopListeningToAll\n\n}, ListenerMethods);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9zcmMvTGlzdGVuZXJNaXhpbi5qcz84OTk1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKCdyZWZsdXgtY29yZS9saWIvdXRpbHMnKSxcbiAgICBMaXN0ZW5lck1ldGhvZHMgPSByZXF1aXJlKCdyZWZsdXgtY29yZS9saWIvTGlzdGVuZXJNZXRob2RzJyk7XG5cbi8qKlxuICogQSBtb2R1bGUgbWVhbnQgdG8gYmUgY29uc3VtZWQgYXMgYSBtaXhpbiBieSBhIFJlYWN0IGNvbXBvbmVudC4gU3VwcGxpZXMgdGhlIG1ldGhvZHMgZnJvbVxuICogYExpc3RlbmVyTWV0aG9kc2AgbWl4aW4gYW5kIHRha2VzIGNhcmUgb2YgdGVhcmRvd24gb2Ygc3Vic2NyaXB0aW9ucy5cbiAqIE5vdGUgdGhhdCBpZiB5b3UncmUgdXNpbmcgdGhlIGBjb25uZWN0YCBtaXhpbiB5b3UgZG9uJ3QgbmVlZCB0aGlzIG1peGluLCBhcyBjb25uZWN0IHdpbGxcbiAqIGltcG9ydCBldmVyeXRoaW5nIHRoaXMgbWl4aW4gY29udGFpbnMhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gXy5leHRlbmQoe1xuXG4gICAgLyoqXG4gICAgICogQ2xlYW5zIHVwIGFsbCBsaXN0ZW5lciBwcmV2aW91c2x5IHJlZ2lzdGVyZWQuXG4gICAgICovXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQ6IExpc3RlbmVyTWV0aG9kcy5zdG9wTGlzdGVuaW5nVG9BbGxcblxufSwgTGlzdGVuZXJNZXRob2RzKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlZmx1eC9zcmMvTGlzdGVuZXJNaXhpbi5qc1xuICoqIG1vZHVsZSBpZCA9IDZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(32).nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That\'s not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7).setImmediate, __webpack_require__(7).clearImmediate))\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL34vbm9kZS1saWJzLWJyb3dzZXIvfi90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzPzc4YzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxpQkFBaUI7O0FBRTVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG5leHRUaWNrID0gcmVxdWlyZSgncHJvY2Vzcy9icm93c2VyLmpzJykubmV4dFRpY2s7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG52YXIgaW1tZWRpYXRlSWRzID0ge307XG52YXIgbmV4dEltbWVkaWF0ZUlkID0gMDtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCB3aW5kb3csIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHsgdGltZW91dC5jbG9zZSgpOyB9O1xuXG5mdW5jdGlvbiBUaW1lb3V0KGlkLCBjbGVhckZuKSB7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2NsZWFyRm4gPSBjbGVhckZuO1xufVxuVGltZW91dC5wcm90b3R5cGUudW5yZWYgPSBUaW1lb3V0LnByb3RvdHlwZS5yZWYgPSBmdW5jdGlvbigpIHt9O1xuVGltZW91dC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fY2xlYXJGbi5jYWxsKHdpbmRvdywgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIFRoYXQncyBub3QgaG93IG5vZGUuanMgaW1wbGVtZW50cyBpdCBidXQgdGhlIGV4cG9zZWQgYXBpIGlzIHRoZSBzYW1lLlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSB0eXBlb2Ygc2V0SW1tZWRpYXRlID09PSBcImZ1bmN0aW9uXCIgPyBzZXRJbW1lZGlhdGUgOiBmdW5jdGlvbihmbikge1xuICB2YXIgaWQgPSBuZXh0SW1tZWRpYXRlSWQrKztcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IGZhbHNlIDogc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuXG4gIGltbWVkaWF0ZUlkc1tpZF0gPSB0cnVlO1xuXG4gIG5leHRUaWNrKGZ1bmN0aW9uIG9uTmV4dFRpY2soKSB7XG4gICAgaWYgKGltbWVkaWF0ZUlkc1tpZF0pIHtcbiAgICAgIC8vIGZuLmNhbGwoKSBpcyBmYXN0ZXIgc28gd2Ugb3B0aW1pemUgZm9yIHRoZSBjb21tb24gdXNlLWNhc2VcbiAgICAgIC8vIEBzZWUgaHR0cDovL2pzcGVyZi5jb20vY2FsbC1hcHBseS1zZWd1XG4gICAgICBpZiAoYXJncykge1xuICAgICAgICBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZuLmNhbGwobnVsbCk7XG4gICAgICB9XG4gICAgICAvLyBQcmV2ZW50IGlkcyBmcm9tIGxlYWtpbmdcbiAgICAgIGV4cG9ydHMuY2xlYXJJbW1lZGlhdGUoaWQpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGlkO1xufTtcblxuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9IHR5cGVvZiBjbGVhckltbWVkaWF0ZSA9PT0gXCJmdW5jdGlvblwiID8gY2xlYXJJbW1lZGlhdGUgOiBmdW5jdGlvbihpZCkge1xuICBkZWxldGUgaW1tZWRpYXRlSWRzW2lkXTtcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjaykvfi9ub2RlLWxpYnMtYnJvd3Nlci9+L3RpbWVycy1icm93c2VyaWZ5L21haW4uanNcbiAqKiBtb2R1bGUgaWQgPSA3XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('"use strict";\n\nmodule.exports = function (k) {\n  return function (o) {\n    return o[k];\n  };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvaGVscGVycy9nZXQuanM/ZGIwOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsV0FBQztTQUFJLFdBQUM7V0FBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0dBQUE7Q0FBQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBrID0+IG8gPT4gb1trXVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogRTovbWluc3JjL3BpenphLXBpY2tlci9+L2VudmlmeS1sb2FkZXIhRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvaGVscGVycy9nZXQuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('/**\n * A module of methods that you want to include in all actions.\n * This module is consumed by `createAction`.\n */\n"use strict";\n\nmodule.exports = {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9BY3Rpb25NZXRob2RzLmpzPzI2OGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIG1vZHVsZSBvZiBtZXRob2RzIHRoYXQgeW91IHdhbnQgdG8gaW5jbHVkZSBpbiBhbGwgYWN0aW9ucy5cbiAqIFRoaXMgbW9kdWxlIGlzIGNvbnN1bWVkIGJ5IGBjcmVhdGVBY3Rpb25gLlxuICovXG5cInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWZsdXgvfi9yZWZsdXgtY29yZS9saWIvQWN0aW9uTWV0aG9kcy5qc1xuICoqIG1vZHVsZSBpZCA9IDlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval('/**\n * A module of methods that you want to include in all stores.\n * This module is consumed by `createStore`.\n */\n"use strict";\n\nmodule.exports = {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9TdG9yZU1ldGhvZHMuanM/ZWFhMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIG1vZHVsZSBvZiBtZXRob2RzIHRoYXQgeW91IHdhbnQgdG8gaW5jbHVkZSBpbiBhbGwgc3RvcmVzLlxuICogVGhpcyBtb2R1bGUgaXMgY29uc3VtZWQgYnkgYGNyZWF0ZVN0b3JlYC5cbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0ge307XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcmVmbHV4L34vcmVmbHV4LWNvcmUvbGliL1N0b3JlTWV0aG9kcy5qc1xuICoqIG1vZHVsZSBpZCA9IDEwXG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar _ = __webpack_require__(2),\n    Keep = __webpack_require__(4),\n    mixer = __webpack_require__(26),\n    bindMethods = __webpack_require__(23);\n\nvar allowed = { preEmit: 1, shouldEmit: 1 };\n\n/**\n * Creates an event emitting Data Store. It is mixed in with functions\n * from the `ListenerMethods` and `PublisherMethods` mixins. `preEmit`\n * and `shouldEmit` may be overridden in the definition object.\n *\n * @param {Object} definition The data store object definition\n * @returns {Store} A data store instance\n */\nmodule.exports = function (definition) {\n\n    var StoreMethods = __webpack_require__(10),\n        PublisherMethods = __webpack_require__(5),\n        ListenerMethods = __webpack_require__(3);\n\n    definition = definition || {};\n\n    for (var a in StoreMethods) {\n        if (!allowed[a] && (PublisherMethods[a] || ListenerMethods[a])) {\n            throw new Error("Cannot override API method " + a + " in Reflux.StoreMethods. Use another method name or override it on Reflux.PublisherMethods / Reflux.ListenerMethods instead.");\n        }\n    }\n\n    for (var d in definition) {\n        if (!allowed[d] && (PublisherMethods[d] || ListenerMethods[d])) {\n            throw new Error("Cannot override API method " + d + " in store creation. Use another method name or override it on Reflux.PublisherMethods / Reflux.ListenerMethods instead.");\n        }\n    }\n\n    definition = mixer(definition);\n\n    function Store() {\n        var i = 0,\n            arr;\n        this.subscriptions = [];\n        this.emitter = new _.EventEmitter();\n        this.eventLabel = "change";\n        bindMethods(this, definition);\n        if (this.init && _.isFunction(this.init)) {\n            this.init();\n        }\n        if (this.listenables) {\n            arr = [].concat(this.listenables);\n            for (; i < arr.length; i++) {\n                this.listenToMany(arr[i]);\n            }\n        }\n    }\n\n    _.extend(Store.prototype, ListenerMethods, PublisherMethods, StoreMethods, definition);\n\n    var store = new Store();\n    Keep.createdStores.push(store);\n\n    return store;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9jcmVhdGVTdG9yZS5qcz8yY2FkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfID0gcmVxdWlyZShcIi4vdXRpbHNcIiksXG4gICAgS2VlcCA9IHJlcXVpcmUoXCIuL0tlZXBcIiksXG4gICAgbWl4ZXIgPSByZXF1aXJlKFwiLi9taXhlclwiKSxcbiAgICBiaW5kTWV0aG9kcyA9IHJlcXVpcmUoXCIuL2JpbmRNZXRob2RzXCIpO1xuXG52YXIgYWxsb3dlZCA9IHsgcHJlRW1pdDogMSwgc2hvdWxkRW1pdDogMSB9O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gZXZlbnQgZW1pdHRpbmcgRGF0YSBTdG9yZS4gSXQgaXMgbWl4ZWQgaW4gd2l0aCBmdW5jdGlvbnNcbiAqIGZyb20gdGhlIGBMaXN0ZW5lck1ldGhvZHNgIGFuZCBgUHVibGlzaGVyTWV0aG9kc2AgbWl4aW5zLiBgcHJlRW1pdGBcbiAqIGFuZCBgc2hvdWxkRW1pdGAgbWF5IGJlIG92ZXJyaWRkZW4gaW4gdGhlIGRlZmluaXRpb24gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZpbml0aW9uIFRoZSBkYXRhIHN0b3JlIG9iamVjdCBkZWZpbml0aW9uXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgZGF0YSBzdG9yZSBpbnN0YW5jZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChkZWZpbml0aW9uKSB7XG5cbiAgICB2YXIgU3RvcmVNZXRob2RzID0gcmVxdWlyZShcIi4vU3RvcmVNZXRob2RzXCIpLFxuICAgICAgICBQdWJsaXNoZXJNZXRob2RzID0gcmVxdWlyZShcIi4vUHVibGlzaGVyTWV0aG9kc1wiKSxcbiAgICAgICAgTGlzdGVuZXJNZXRob2RzID0gcmVxdWlyZShcIi4vTGlzdGVuZXJNZXRob2RzXCIpO1xuXG4gICAgZGVmaW5pdGlvbiA9IGRlZmluaXRpb24gfHwge307XG5cbiAgICBmb3IgKHZhciBhIGluIFN0b3JlTWV0aG9kcykge1xuICAgICAgICBpZiAoIWFsbG93ZWRbYV0gJiYgKFB1Ymxpc2hlck1ldGhvZHNbYV0gfHwgTGlzdGVuZXJNZXRob2RzW2FdKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IG92ZXJyaWRlIEFQSSBtZXRob2QgXCIgKyBhICsgXCIgaW4gUmVmbHV4LlN0b3JlTWV0aG9kcy4gVXNlIGFub3RoZXIgbWV0aG9kIG5hbWUgb3Igb3ZlcnJpZGUgaXQgb24gUmVmbHV4LlB1Ymxpc2hlck1ldGhvZHMgLyBSZWZsdXguTGlzdGVuZXJNZXRob2RzIGluc3RlYWQuXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgZCBpbiBkZWZpbml0aW9uKSB7XG4gICAgICAgIGlmICghYWxsb3dlZFtkXSAmJiAoUHVibGlzaGVyTWV0aG9kc1tkXSB8fCBMaXN0ZW5lck1ldGhvZHNbZF0pKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgb3ZlcnJpZGUgQVBJIG1ldGhvZCBcIiArIGQgKyBcIiBpbiBzdG9yZSBjcmVhdGlvbi4gVXNlIGFub3RoZXIgbWV0aG9kIG5hbWUgb3Igb3ZlcnJpZGUgaXQgb24gUmVmbHV4LlB1Ymxpc2hlck1ldGhvZHMgLyBSZWZsdXguTGlzdGVuZXJNZXRob2RzIGluc3RlYWQuXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZGVmaW5pdGlvbiA9IG1peGVyKGRlZmluaXRpb24pO1xuXG4gICAgZnVuY3Rpb24gU3RvcmUoKSB7XG4gICAgICAgIHZhciBpID0gMCxcbiAgICAgICAgICAgIGFycjtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XG4gICAgICAgIHRoaXMuZW1pdHRlciA9IG5ldyBfLkV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmV2ZW50TGFiZWwgPSBcImNoYW5nZVwiO1xuICAgICAgICBiaW5kTWV0aG9kcyh0aGlzLCBkZWZpbml0aW9uKTtcbiAgICAgICAgaWYgKHRoaXMuaW5pdCAmJiBfLmlzRnVuY3Rpb24odGhpcy5pbml0KSkge1xuICAgICAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubGlzdGVuYWJsZXMpIHtcbiAgICAgICAgICAgIGFyciA9IFtdLmNvbmNhdCh0aGlzLmxpc3RlbmFibGVzKTtcbiAgICAgICAgICAgIGZvciAoOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5Ub01hbnkoYXJyW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIF8uZXh0ZW5kKFN0b3JlLnByb3RvdHlwZSwgTGlzdGVuZXJNZXRob2RzLCBQdWJsaXNoZXJNZXRob2RzLCBTdG9yZU1ldGhvZHMsIGRlZmluaXRpb24pO1xuXG4gICAgdmFyIHN0b3JlID0gbmV3IFN0b3JlKCk7XG4gICAgS2VlcC5jcmVhdGVkU3RvcmVzLnB1c2goc3RvcmUpO1xuXG4gICAgcmV0dXJuIHN0b3JlO1xufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWZsdXgvfi9yZWZsdXgtY29yZS9saWIvY3JlYXRlU3RvcmUuanNcbiAqKiBtb2R1bGUgaWQgPSAxMVxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==');
},function(module,exports,__webpack_require__){eval('/**\n * Internal module used to create static and instance join methods\n */\n\n"use strict";\n\nvar createStore = __webpack_require__(11),\n    _ = __webpack_require__(2);\n\nvar slice = Array.prototype.slice,\n    strategyMethodNames = {\n    strict: "joinStrict",\n    first: "joinLeading",\n    last: "joinTrailing",\n    all: "joinConcat"\n};\n\n/**\n * Used in `index.js` to create the static join methods\n * @param {String} strategy Which strategy to use when tracking listenable trigger arguments\n * @returns {Function} A static function which returns a store with a join listen on the given listenables using the given strategy\n */\nexports.staticJoinCreator = function (strategy) {\n    return function () /* listenables... */{\n        var listenables = slice.call(arguments);\n        return createStore({\n            init: function init() {\n                this[strategyMethodNames[strategy]].apply(this, listenables.concat("triggerAsync"));\n            }\n        });\n    };\n};\n\n/**\n * Used in `ListenerMethods.js` to create the instance join methods\n * @param {String} strategy Which strategy to use when tracking listenable trigger arguments\n * @returns {Function} An instance method which sets up a join listen on the given listenables using the given strategy\n */\nexports.instanceJoinCreator = function (strategy) {\n    return function () /* listenables..., callback*/{\n        _.throwIf(arguments.length < 2, "Cannot create a join with less than 2 listenables!");\n        var listenables = slice.call(arguments),\n            callback = listenables.pop(),\n            numberOfListenables = listenables.length,\n            join = {\n            numberOfListenables: numberOfListenables,\n            callback: this[callback] || callback,\n            listener: this,\n            strategy: strategy\n        },\n            i,\n            cancels = [],\n            subobj;\n        for (i = 0; i < numberOfListenables; i++) {\n            _.throwIf(this.validateListening(listenables[i]));\n        }\n        for (i = 0; i < numberOfListenables; i++) {\n            cancels.push(listenables[i].listen(newListener(i, join), this));\n        }\n        reset(join);\n        subobj = { listenable: listenables };\n        subobj.stop = makeStopper(subobj, cancels, this);\n        this.subscriptions = (this.subscriptions || []).concat(subobj);\n        return subobj;\n    };\n};\n\n// ---- internal join functions ----\n\nfunction makeStopper(subobj, cancels, context) {\n    return function () {\n        var i,\n            subs = context.subscriptions,\n            index = subs ? subs.indexOf(subobj) : -1;\n        _.throwIf(index === -1, "Tried to remove join already gone from subscriptions list!");\n        for (i = 0; i < cancels.length; i++) {\n            cancels[i]();\n        }\n        subs.splice(index, 1);\n    };\n}\n\nfunction reset(join) {\n    join.listenablesEmitted = new Array(join.numberOfListenables);\n    join.args = new Array(join.numberOfListenables);\n}\n\nfunction newListener(i, join) {\n    return function () {\n        var callargs = slice.call(arguments);\n        if (join.listenablesEmitted[i]) {\n            switch (join.strategy) {\n                case "strict":\n                    throw new Error("Strict join failed because listener triggered twice.");\n                case "last":\n                    join.args[i] = callargs;break;\n                case "all":\n                    join.args[i].push(callargs);\n            }\n        } else {\n            join.listenablesEmitted[i] = true;\n            join.args[i] = join.strategy === "all" ? [callargs] : callargs;\n        }\n        emitIfAllListenablesEmitted(join);\n    };\n}\n\nfunction emitIfAllListenablesEmitted(join) {\n    for (var i = 0; i < join.numberOfListenables; i++) {\n        if (!join.listenablesEmitted[i]) {\n            return;\n        }\n    }\n    join.callback.apply(join.listener, join.args);\n    reset(join);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9qb2lucy5qcz8zOWQ3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlCQUF5QjtBQUM1QztBQUNBO0FBQ0EsbUJBQW1CLHlCQUF5QjtBQUM1QztBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsb0JBQW9CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLDhCQUE4QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW50ZXJuYWwgbW9kdWxlIHVzZWQgdG8gY3JlYXRlIHN0YXRpYyBhbmQgaW5zdGFuY2Ugam9pbiBtZXRob2RzXG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBjcmVhdGVTdG9yZSA9IHJlcXVpcmUoXCIuL2NyZWF0ZVN0b3JlXCIpLFxuICAgIF8gPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcblxudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLFxuICAgIHN0cmF0ZWd5TWV0aG9kTmFtZXMgPSB7XG4gICAgc3RyaWN0OiBcImpvaW5TdHJpY3RcIixcbiAgICBmaXJzdDogXCJqb2luTGVhZGluZ1wiLFxuICAgIGxhc3Q6IFwiam9pblRyYWlsaW5nXCIsXG4gICAgYWxsOiBcImpvaW5Db25jYXRcIlxufTtcblxuLyoqXG4gKiBVc2VkIGluIGBpbmRleC5qc2AgdG8gY3JlYXRlIHRoZSBzdGF0aWMgam9pbiBtZXRob2RzXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyYXRlZ3kgV2hpY2ggc3RyYXRlZ3kgdG8gdXNlIHdoZW4gdHJhY2tpbmcgbGlzdGVuYWJsZSB0cmlnZ2VyIGFyZ3VtZW50c1xuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHN0YXRpYyBmdW5jdGlvbiB3aGljaCByZXR1cm5zIGEgc3RvcmUgd2l0aCBhIGpvaW4gbGlzdGVuIG9uIHRoZSBnaXZlbiBsaXN0ZW5hYmxlcyB1c2luZyB0aGUgZ2l2ZW4gc3RyYXRlZ3lcbiAqL1xuZXhwb3J0cy5zdGF0aWNKb2luQ3JlYXRvciA9IGZ1bmN0aW9uIChzdHJhdGVneSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSAvKiBsaXN0ZW5hYmxlcy4uLiAqL3tcbiAgICAgICAgdmFyIGxpc3RlbmFibGVzID0gc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuICAgICAgICByZXR1cm4gY3JlYXRlU3RvcmUoe1xuICAgICAgICAgICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgICAgICAgICB0aGlzW3N0cmF0ZWd5TWV0aG9kTmFtZXNbc3RyYXRlZ3ldXS5hcHBseSh0aGlzLCBsaXN0ZW5hYmxlcy5jb25jYXQoXCJ0cmlnZ2VyQXN5bmNcIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xufTtcblxuLyoqXG4gKiBVc2VkIGluIGBMaXN0ZW5lck1ldGhvZHMuanNgIHRvIGNyZWF0ZSB0aGUgaW5zdGFuY2Ugam9pbiBtZXRob2RzXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyYXRlZ3kgV2hpY2ggc3RyYXRlZ3kgdG8gdXNlIHdoZW4gdHJhY2tpbmcgbGlzdGVuYWJsZSB0cmlnZ2VyIGFyZ3VtZW50c1xuICogQHJldHVybnMge0Z1bmN0aW9ufSBBbiBpbnN0YW5jZSBtZXRob2Qgd2hpY2ggc2V0cyB1cCBhIGpvaW4gbGlzdGVuIG9uIHRoZSBnaXZlbiBsaXN0ZW5hYmxlcyB1c2luZyB0aGUgZ2l2ZW4gc3RyYXRlZ3lcbiAqL1xuZXhwb3J0cy5pbnN0YW5jZUpvaW5DcmVhdG9yID0gZnVuY3Rpb24gKHN0cmF0ZWd5KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIC8qIGxpc3RlbmFibGVzLi4uLCBjYWxsYmFjayove1xuICAgICAgICBfLnRocm93SWYoYXJndW1lbnRzLmxlbmd0aCA8IDIsIFwiQ2Fubm90IGNyZWF0ZSBhIGpvaW4gd2l0aCBsZXNzIHRoYW4gMiBsaXN0ZW5hYmxlcyFcIik7XG4gICAgICAgIHZhciBsaXN0ZW5hYmxlcyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSxcbiAgICAgICAgICAgIGNhbGxiYWNrID0gbGlzdGVuYWJsZXMucG9wKCksXG4gICAgICAgICAgICBudW1iZXJPZkxpc3RlbmFibGVzID0gbGlzdGVuYWJsZXMubGVuZ3RoLFxuICAgICAgICAgICAgam9pbiA9IHtcbiAgICAgICAgICAgIG51bWJlck9mTGlzdGVuYWJsZXM6IG51bWJlck9mTGlzdGVuYWJsZXMsXG4gICAgICAgICAgICBjYWxsYmFjazogdGhpc1tjYWxsYmFja10gfHwgY2FsbGJhY2ssXG4gICAgICAgICAgICBsaXN0ZW5lcjogdGhpcyxcbiAgICAgICAgICAgIHN0cmF0ZWd5OiBzdHJhdGVneVxuICAgICAgICB9LFxuICAgICAgICAgICAgaSxcbiAgICAgICAgICAgIGNhbmNlbHMgPSBbXSxcbiAgICAgICAgICAgIHN1Ym9iajtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IG51bWJlck9mTGlzdGVuYWJsZXM7IGkrKykge1xuICAgICAgICAgICAgXy50aHJvd0lmKHRoaXMudmFsaWRhdGVMaXN0ZW5pbmcobGlzdGVuYWJsZXNbaV0pKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbnVtYmVyT2ZMaXN0ZW5hYmxlczsgaSsrKSB7XG4gICAgICAgICAgICBjYW5jZWxzLnB1c2gobGlzdGVuYWJsZXNbaV0ubGlzdGVuKG5ld0xpc3RlbmVyKGksIGpvaW4pLCB0aGlzKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzZXQoam9pbik7XG4gICAgICAgIHN1Ym9iaiA9IHsgbGlzdGVuYWJsZTogbGlzdGVuYWJsZXMgfTtcbiAgICAgICAgc3Vib2JqLnN0b3AgPSBtYWtlU3RvcHBlcihzdWJvYmosIGNhbmNlbHMsIHRoaXMpO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMgPSAodGhpcy5zdWJzY3JpcHRpb25zIHx8IFtdKS5jb25jYXQoc3Vib2JqKTtcbiAgICAgICAgcmV0dXJuIHN1Ym9iajtcbiAgICB9O1xufTtcblxuLy8gLS0tLSBpbnRlcm5hbCBqb2luIGZ1bmN0aW9ucyAtLS0tXG5cbmZ1bmN0aW9uIG1ha2VTdG9wcGVyKHN1Ym9iaiwgY2FuY2VscywgY29udGV4dCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBpLFxuICAgICAgICAgICAgc3VicyA9IGNvbnRleHQuc3Vic2NyaXB0aW9ucyxcbiAgICAgICAgICAgIGluZGV4ID0gc3VicyA/IHN1YnMuaW5kZXhPZihzdWJvYmopIDogLTE7XG4gICAgICAgIF8udGhyb3dJZihpbmRleCA9PT0gLTEsIFwiVHJpZWQgdG8gcmVtb3ZlIGpvaW4gYWxyZWFkeSBnb25lIGZyb20gc3Vic2NyaXB0aW9ucyBsaXN0IVwiKTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGNhbmNlbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNhbmNlbHNbaV0oKTtcbiAgICAgICAgfVxuICAgICAgICBzdWJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gcmVzZXQoam9pbikge1xuICAgIGpvaW4ubGlzdGVuYWJsZXNFbWl0dGVkID0gbmV3IEFycmF5KGpvaW4ubnVtYmVyT2ZMaXN0ZW5hYmxlcyk7XG4gICAgam9pbi5hcmdzID0gbmV3IEFycmF5KGpvaW4ubnVtYmVyT2ZMaXN0ZW5hYmxlcyk7XG59XG5cbmZ1bmN0aW9uIG5ld0xpc3RlbmVyKGksIGpvaW4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY2FsbGFyZ3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gICAgICAgIGlmIChqb2luLmxpc3RlbmFibGVzRW1pdHRlZFtpXSkge1xuICAgICAgICAgICAgc3dpdGNoIChqb2luLnN0cmF0ZWd5KSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcInN0cmljdFwiOlxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTdHJpY3Qgam9pbiBmYWlsZWQgYmVjYXVzZSBsaXN0ZW5lciB0cmlnZ2VyZWQgdHdpY2UuXCIpO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJsYXN0XCI6XG4gICAgICAgICAgICAgICAgICAgIGpvaW4uYXJnc1tpXSA9IGNhbGxhcmdzO2JyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJhbGxcIjpcbiAgICAgICAgICAgICAgICAgICAgam9pbi5hcmdzW2ldLnB1c2goY2FsbGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgam9pbi5saXN0ZW5hYmxlc0VtaXR0ZWRbaV0gPSB0cnVlO1xuICAgICAgICAgICAgam9pbi5hcmdzW2ldID0gam9pbi5zdHJhdGVneSA9PT0gXCJhbGxcIiA/IFtjYWxsYXJnc10gOiBjYWxsYXJncztcbiAgICAgICAgfVxuICAgICAgICBlbWl0SWZBbGxMaXN0ZW5hYmxlc0VtaXR0ZWQoam9pbik7XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZW1pdElmQWxsTGlzdGVuYWJsZXNFbWl0dGVkKGpvaW4pIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGpvaW4ubnVtYmVyT2ZMaXN0ZW5hYmxlczsgaSsrKSB7XG4gICAgICAgIGlmICgham9pbi5saXN0ZW5hYmxlc0VtaXR0ZWRbaV0pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBqb2luLmNhbGxiYWNrLmFwcGx5KGpvaW4ubGlzdGVuZXIsIGpvaW4uYXJncyk7XG4gICAgcmVzZXQoam9pbik7XG59XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcmVmbHV4L34vcmVmbHV4LWNvcmUvbGliL2pvaW5zLmpzXG4gKiogbW9kdWxlIGlkID0gMTJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval("var Reflux = __webpack_require__(25);\n\nReflux.connect = __webpack_require__(27);\n\nReflux.connectFilter = __webpack_require__(28);\n\nReflux.ListenerMixin = __webpack_require__(6);\n\nReflux.listenTo = __webpack_require__(29);\n\nReflux.listenToMany = __webpack_require__(30);\n\nmodule.exports = Reflux;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9zcmMvaW5kZXguanM/OTdmZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBSZWZsdXggPSByZXF1aXJlKCdyZWZsdXgtY29yZScpO1xuXG5SZWZsdXguY29ubmVjdCA9IHJlcXVpcmUoJy4vY29ubmVjdCcpO1xuXG5SZWZsdXguY29ubmVjdEZpbHRlciA9IHJlcXVpcmUoJy4vY29ubmVjdEZpbHRlcicpO1xuXG5SZWZsdXguTGlzdGVuZXJNaXhpbiA9IHJlcXVpcmUoJy4vTGlzdGVuZXJNaXhpbicpO1xuXG5SZWZsdXgubGlzdGVuVG8gPSByZXF1aXJlKCcuL2xpc3RlblRvJyk7XG5cblJlZmx1eC5saXN0ZW5Ub01hbnkgPSByZXF1aXJlKCcuL2xpc3RlblRvTWFueScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlZmx1eDtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlZmx1eC9zcmMvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAxM1xuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},,function(module,exports){eval('"use strict";\n\nvar status = {\n	PASS: "pass", YUMMY: "yummy", YUCK: "yuck"\n};\n\nmodule.exports = {\n	status: status\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvY29uc3RhbnRzLmpzPzEwZmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE1BQU0sR0FBRztBQUNaLEtBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTTtDQUMxQzs7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHO0FBQ2hCLE9BQU0sRUFBQyxNQUFNO0NBQ2IiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3RhdHVzID0ge1xuXHRQQVNTOiAncGFzcycsIFlVTU1ZOiAneXVtbXknLCBZVUNLOiAneXVjaydcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdHN0YXR1czpzdGF0dXNcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIEU6L21pbnNyYy9waXp6YS1waWNrZXIvfi9lbnZpZnktbG9hZGVyIUU6L21pbnNyYy9waXp6YS1waWNrZXIvYXBwL2pzL2NvbnN0YW50cy5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval('"use strict";\n\nmodule.exports = function (o, f) {\n	var o2 = {};\n	Object.keys(o).forEach(function (k) {\n		o2[k] = f(o[k], k, o);\n	});\n	return o2;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvaGVscGVycy9vbWFwLmpzP2YxNWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsQ0FBQyxFQUFFLENBQUMsRUFBSztBQUMxQixLQUFJLEVBQUUsR0FBRyxFQUFFO0FBQ1gsT0FBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBUyxDQUFDLEVBQUM7QUFDaEMsSUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUN0QixDQUFDO0FBQ0YsUUFBTyxFQUFFO0NBQ1QiLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChvLCBmKSA9PiB7XG5cdGxldCBvMiA9IHt9XG5cdE9iamVjdC5rZXlzKG8pLmZvckVhY2goZnVuY3Rpb24oayl7XG5cdFx0IG8yW2tdID0gZihvW2tdLCBrLCBvKVxuXHR9KVxuXHRyZXR1cm4gbzJcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIEU6L21pbnNyYy9waXp6YS1waWNrZXIvfi9lbnZpZnktbG9hZGVyIUU6L21pbnNyYy9waXp6YS1waWNrZXIvYXBwL2pzL2hlbHBlcnMvb21hcC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval("\"use strict\";\n\nvar get = __webpack_require__(8);\n\nfunction maybeWrap(callback) {\n	return typeof callback === \"string\" ? get(callback) : callback;\n}\n\nfunction reverse(callback) {\n	callback.__sortDesc = true;\n	return callback;\n}\n\nfunction sortBy() {\n	var funs = Array.prototype.slice.call(arguments).map(maybeWrap);\n	var sorter = function sorter(objA, objB) {\n		// console.log('iter -----------')\n		var i = 0,\n		    f;\n		while (funs[i]) {\n			f = funs[i];\n			// console.log('using fun ', i)\n			var a, b;\n			if (f.__sortDesc) {\n				b = f(objA);\n				a = f(objB);\n			} else {\n				a = f(objA);\n				b = f(objB);\n			}\n			// console.log('comparing ', a, b)\n			// if (a < b) console.log('result ', -1, objA, objB)\n			// if (a > b) console.log('result ', 1, objA, objB)\n			if (a < b) {\n				return -1;\n			}if (a > b) {\n				return 1;\n			} // try another callback\n			// console.log('equals')\n			i += 1;\n		}\n		return 0;\n	};\n	sorter.desc = function (callback) {\n		funs.push(reverse(maybeWrap(callback)));\n		return sorter;\n	};\n	sorter.asc = function (callback) {\n		funs.push(maybeWrap(callback));\n		return sorter;\n	};\n	return sorter;\n}\n\n// var test = [\n// 	{x:2.5,key:3000,name:'dddd'},\n// 	{x:2.5,key:4000,name:'cccc'},\n// 	{x:3.5,key:2000,name:'bbbb'},\n// 	{x:3.5,key:1000,name:'aaaa'}\n// ]\n\n// function dump(it) {\n// 	return [it.key,it.name,'x='+it.x].join(':')\n// }\n\n// function ftest (code, expect) {\n// 	// console.log('-------------------------------------')\n// 	// console.log('test ' + code)\n// 	var sorted = eval(code)\n// 	// console.log(sorted.map(dump))\n// 	var f1000 = x => x / 1000\n// 	var result = sorted.map(get('key')).map(f1000).join('')\n// 	if (result !== expect) {\n// 		console.log('FAIL')\n// 		console.log('expected ', expect)\n// 		console.log('result ', result)\n// 	}\n// }\n\n// ftest(\"test.sort(sortBy('key'))\", '1234')\n// ftest(\"test.sort(sortBy().asc('key'))\", '1234')\n// ftest(\"test.sort(sortBy().desc('x').desc('name'))\", '2134')\n// ftest(\"test.sort(sortBy().desc('x').asc('name'))\", '1243')\n// ftest(\"test.sort(sortBy('x').asc('name'))\", '4312')\n// ftest(\"test.sort(sortBy('x').desc('name'))\", '3421')\n// ftest(\"test.sort(sortBy('name').desc('x'))\", '1243')\n\nmodule.exports = sortBy;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvaGVscGVycy9zb3J0YnkuanM/Nzg2YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksR0FBRyxHQUFHLG1CQUFPLENBQUMsQ0FBYSxDQUFDOztBQUVoQyxTQUFTLFNBQVMsQ0FBQyxRQUFRLEVBQUU7QUFDNUIsUUFBUSxPQUFPLFFBQVEsS0FBSyxRQUFRLEdBQUksR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLFFBQVE7Q0FDaEU7O0FBRUQsU0FBUyxPQUFPLENBQUMsUUFBUSxFQUFFO0FBQzFCLFNBQVEsQ0FBQyxVQUFVLEdBQUcsSUFBSTtBQUMxQixRQUFPLFFBQVE7Q0FDZjs7QUFFRCxTQUFTLE1BQU0sR0FBRztBQUNqQixLQUFJLElBQUksR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUMvRCxLQUFJLE1BQU0sR0FBRyxnQkFBUyxJQUFJLEVBQUUsSUFBSSxFQUFFOztBQUVqQyxNQUFJLENBQUMsR0FBRyxDQUFDO01BQUUsQ0FBQztBQUNaLFNBQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2QsSUFBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7O0FBRVgsT0FBSSxDQUFDLEVBQUUsQ0FBQztBQUNSLE9BQUksQ0FBQyxDQUFDLFVBQVUsRUFBRTtBQUNqQixLQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNYLEtBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ1gsTUFBTTtBQUNOLEtBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ1gsS0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDWDs7OztBQUlELE9BQUksQ0FBQyxHQUFHLENBQUM7QUFBRSxXQUFPLENBQUMsQ0FBQztJQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDO0FBQUUsV0FBTyxDQUFDO0lBQUE7O0FBR25CLElBQUMsSUFBSSxDQUFDO0dBQ047QUFDRCxTQUFPLENBQUM7RUFDUjtBQUNELE9BQU0sQ0FBQyxJQUFJLEdBQUcsVUFBUyxRQUFRLEVBQUU7QUFDaEMsTUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDdkMsU0FBTyxNQUFNO0VBQ2I7QUFDRCxPQUFNLENBQUMsR0FBRyxHQUFHLFVBQVMsUUFBUSxFQUFFO0FBQy9CLE1BQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzlCLFNBQU8sTUFBTTtFQUNiO0FBQ0QsUUFBTyxNQUFNO0NBQ2I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNELE1BQU0sQ0FBQyxPQUFPLEdBQUcsTUFBTSIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnZXQgPSByZXF1aXJlKCdoZWxwZXJzL2dldCcpXG5cbmZ1bmN0aW9uIG1heWJlV3JhcChjYWxsYmFjaykge1xuXHRyZXR1cm4gKHR5cGVvZiBjYWxsYmFjayA9PT0gJ3N0cmluZycpID8gZ2V0KGNhbGxiYWNrKSA6IGNhbGxiYWNrXG59XG5cbmZ1bmN0aW9uIHJldmVyc2UoY2FsbGJhY2spIHtcblx0Y2FsbGJhY2suX19zb3J0RGVzYyA9IHRydWVcblx0cmV0dXJuIGNhbGxiYWNrXG59XG5cbmZ1bmN0aW9uIHNvcnRCeSgpIHtcblx0dmFyIGZ1bnMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLm1hcChtYXliZVdyYXApXG5cdHZhciBzb3J0ZXIgPSBmdW5jdGlvbihvYmpBLCBvYmpCKSB7XG5cdFx0Ly8gY29uc29sZS5sb2coJ2l0ZXIgLS0tLS0tLS0tLS0nKVxuXHRcdHZhciBpID0gMCwgZlxuXHRcdHdoaWxlKGZ1bnNbaV0pIHtcblx0XHRcdGYgPSBmdW5zW2ldXG5cdFx0XHQvLyBjb25zb2xlLmxvZygndXNpbmcgZnVuICcsIGkpXG5cdFx0XHR2YXIgYSwgYlxuXHRcdFx0aWYgKGYuX19zb3J0RGVzYykge1xuXHRcdFx0XHRiID0gZihvYmpBKVxuXHRcdFx0XHRhID0gZihvYmpCKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YSA9IGYob2JqQSlcblx0XHRcdFx0YiA9IGYob2JqQilcblx0XHRcdH1cblx0XHRcdC8vIGNvbnNvbGUubG9nKCdjb21wYXJpbmcgJywgYSwgYilcblx0XHRcdC8vIGlmIChhIDwgYikgY29uc29sZS5sb2coJ3Jlc3VsdCAnLCAtMSwgb2JqQSwgb2JqQilcblx0XHRcdC8vIGlmIChhID4gYikgY29uc29sZS5sb2coJ3Jlc3VsdCAnLCAxLCBvYmpBLCBvYmpCKVxuXHRcdFx0aWYgKGEgPCBiKSByZXR1cm4gLTFcblx0XHRcdGlmIChhID4gYikgcmV0dXJuIDFcblx0XHRcdC8vIHRyeSBhbm90aGVyIGNhbGxiYWNrXG5cdFx0XHQvLyBjb25zb2xlLmxvZygnZXF1YWxzJylcblx0XHRcdGkgKz0gMVxuXHRcdH1cblx0XHRyZXR1cm4gMFxuXHR9XG5cdHNvcnRlci5kZXNjID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHRmdW5zLnB1c2gocmV2ZXJzZShtYXliZVdyYXAoY2FsbGJhY2spKSlcblx0XHRyZXR1cm4gc29ydGVyXG5cdH1cblx0c29ydGVyLmFzYyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0ZnVucy5wdXNoKG1heWJlV3JhcChjYWxsYmFjaykpXG5cdFx0cmV0dXJuIHNvcnRlclxuXHR9XG5cdHJldHVybiBzb3J0ZXJcbn1cblxuXG4vLyB2YXIgdGVzdCA9IFtcbi8vIFx0e3g6Mi41LGtleTozMDAwLG5hbWU6J2RkZGQnfSxcbi8vIFx0e3g6Mi41LGtleTo0MDAwLG5hbWU6J2NjY2MnfSxcbi8vIFx0e3g6My41LGtleToyMDAwLG5hbWU6J2JiYmInfSxcbi8vIFx0e3g6My41LGtleToxMDAwLG5hbWU6J2FhYWEnfVxuLy8gXVxuXG5cbi8vIGZ1bmN0aW9uIGR1bXAoaXQpIHtcbi8vIFx0cmV0dXJuIFtpdC5rZXksaXQubmFtZSwneD0nK2l0LnhdLmpvaW4oJzonKVxuLy8gfVxuXG5cbi8vIGZ1bmN0aW9uIGZ0ZXN0IChjb2RlLCBleHBlY3QpIHtcbi8vIFx0Ly8gY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKVxuLy8gXHQvLyBjb25zb2xlLmxvZygndGVzdCAnICsgY29kZSlcbi8vIFx0dmFyIHNvcnRlZCA9IGV2YWwoY29kZSlcbi8vIFx0Ly8gY29uc29sZS5sb2coc29ydGVkLm1hcChkdW1wKSlcbi8vIFx0dmFyIGYxMDAwID0geCA9PiB4IC8gMTAwMFxuLy8gXHR2YXIgcmVzdWx0ID0gc29ydGVkLm1hcChnZXQoJ2tleScpKS5tYXAoZjEwMDApLmpvaW4oJycpXG4vLyBcdGlmIChyZXN1bHQgIT09IGV4cGVjdCkge1xuLy8gXHRcdGNvbnNvbGUubG9nKCdGQUlMJylcbi8vIFx0XHRjb25zb2xlLmxvZygnZXhwZWN0ZWQgJywgZXhwZWN0KVxuLy8gXHRcdGNvbnNvbGUubG9nKCdyZXN1bHQgJywgcmVzdWx0KVxuLy8gXHR9XG4vLyB9XG5cbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgna2V5JykpXCIsICcxMjM0Jylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgpLmFzYygna2V5JykpXCIsICcxMjM0Jylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgpLmRlc2MoJ3gnKS5kZXNjKCduYW1lJykpXCIsICcyMTM0Jylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgpLmRlc2MoJ3gnKS5hc2MoJ25hbWUnKSlcIiwgJzEyNDMnKVxuLy8gZnRlc3QoXCJ0ZXN0LnNvcnQoc29ydEJ5KCd4JykuYXNjKCduYW1lJykpXCIsICc0MzEyJylcbi8vIGZ0ZXN0KFwidGVzdC5zb3J0KHNvcnRCeSgneCcpLmRlc2MoJ25hbWUnKSlcIiwgJzM0MjEnKVxuLy8gZnRlc3QoXCJ0ZXN0LnNvcnQoc29ydEJ5KCduYW1lJykuZGVzYygneCcpKVwiLCAnMTI0MycpXG5cblxubW9kdWxlLmV4cG9ydHMgPSBzb3J0QnlcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIEU6L21pbnNyYy9waXp6YS1waWNrZXIvfi9lbnZpZnktbG9hZGVyIUU6L21pbnNyYy9waXp6YS1waWNrZXIvYXBwL2pzL2hlbHBlcnMvc29ydGJ5LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},,function(module,exports){eval("var hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar undefined;\n\nvar isArray = function isArray(arr) {\n	if (typeof Array.isArray === 'function') {\n		return Array.isArray(arr);\n	}\n\n	return toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n	'use strict';\n	if (!obj || toStr.call(obj) !== '[object Object]') {\n		return false;\n	}\n\n	var has_own_constructor = hasOwn.call(obj, 'constructor');\n	var has_is_property_of_method = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n	// Not own constructor property must be Object\n	if (obj.constructor && !has_own_constructor && !has_is_property_of_method) {\n		return false;\n	}\n\n	// Own properties are enumerated firstly, so to speed up,\n	// if last one is own, then all properties are own.\n	var key;\n	for (key in obj) {}\n\n	return key === undefined || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n	'use strict';\n	var options, name, src, copy, copyIsArray, clone,\n		target = arguments[0],\n		i = 1,\n		length = arguments.length,\n		deep = false;\n\n	// Handle a deep copy situation\n	if (typeof target === 'boolean') {\n		deep = target;\n		target = arguments[1] || {};\n		// skip the boolean and the target\n		i = 2;\n	} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n		target = {};\n	}\n\n	for (; i < length; ++i) {\n		options = arguments[i];\n		// Only deal with non-null/undefined values\n		if (options != null) {\n			// Extend the base object\n			for (name in options) {\n				src = target[name];\n				copy = options[name];\n\n				// Prevent never-ending loop\n				if (target === copy) {\n					continue;\n				}\n\n				// Recurse if we're merging plain objects or arrays\n				if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n					if (copyIsArray) {\n						copyIsArray = false;\n						clone = src && isArray(src) ? src : [];\n					} else {\n						clone = src && isPlainObject(src) ? src : {};\n					}\n\n					// Never move original objects, clone them\n					target[name] = extend(deep, clone, copy);\n\n				// Don't bring in undefined values\n				} else if (copy !== undefined) {\n					target[name] = copy;\n				}\n			}\n		}\n	}\n\n	// Return the modified object\n	return target;\n};\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2V4dGVuZC9pbmRleC5qcz9hYjQ2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUEsT0FBTyxZQUFZO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjE5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIHVuZGVmaW5lZDtcblxudmFyIGlzQXJyYXkgPSBmdW5jdGlvbiBpc0FycmF5KGFycikge1xuXHRpZiAodHlwZW9mIEFycmF5LmlzQXJyYXkgPT09ICdmdW5jdGlvbicpIHtcblx0XHRyZXR1cm4gQXJyYXkuaXNBcnJheShhcnIpO1xuXHR9XG5cblx0cmV0dXJuIHRvU3RyLmNhbGwoYXJyKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbnZhciBpc1BsYWluT2JqZWN0ID0gZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcblx0J3VzZSBzdHJpY3QnO1xuXHRpZiAoIW9iaiB8fCB0b1N0ci5jYWxsKG9iaikgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0dmFyIGhhc19vd25fY29uc3RydWN0b3IgPSBoYXNPd24uY2FsbChvYmosICdjb25zdHJ1Y3RvcicpO1xuXHR2YXIgaGFzX2lzX3Byb3BlcnR5X29mX21ldGhvZCA9IG9iai5jb25zdHJ1Y3RvciAmJiBvYmouY29uc3RydWN0b3IucHJvdG90eXBlICYmIGhhc093bi5jYWxsKG9iai5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsICdpc1Byb3RvdHlwZU9mJyk7XG5cdC8vIE5vdCBvd24gY29uc3RydWN0b3IgcHJvcGVydHkgbXVzdCBiZSBPYmplY3Rcblx0aWYgKG9iai5jb25zdHJ1Y3RvciAmJiAhaGFzX293bl9jb25zdHJ1Y3RvciAmJiAhaGFzX2lzX3Byb3BlcnR5X29mX21ldGhvZCkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdC8vIE93biBwcm9wZXJ0aWVzIGFyZSBlbnVtZXJhdGVkIGZpcnN0bHksIHNvIHRvIHNwZWVkIHVwLFxuXHQvLyBpZiBsYXN0IG9uZSBpcyBvd24sIHRoZW4gYWxsIHByb3BlcnRpZXMgYXJlIG93bi5cblx0dmFyIGtleTtcblx0Zm9yIChrZXkgaW4gb2JqKSB7fVxuXG5cdHJldHVybiBrZXkgPT09IHVuZGVmaW5lZCB8fCBoYXNPd24uY2FsbChvYmosIGtleSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGV4dGVuZCgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXHR2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUsXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWzBdLFxuXHRcdGkgPSAxLFxuXHRcdGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cdFx0ZGVlcCA9IGZhbHNlO1xuXG5cdC8vIEhhbmRsZSBhIGRlZXAgY29weSBzaXR1YXRpb25cblx0aWYgKHR5cGVvZiB0YXJnZXQgPT09ICdib29sZWFuJykge1xuXHRcdGRlZXAgPSB0YXJnZXQ7XG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuXHRcdC8vIHNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHRpID0gMjtcblx0fSBlbHNlIGlmICgodHlwZW9mIHRhcmdldCAhPT0gJ29iamVjdCcgJiYgdHlwZW9mIHRhcmdldCAhPT0gJ2Z1bmN0aW9uJykgfHwgdGFyZ2V0ID09IG51bGwpIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdGZvciAoOyBpIDwgbGVuZ3RoOyArK2kpIHtcblx0XHRvcHRpb25zID0gYXJndW1lbnRzW2ldO1xuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcblx0XHRpZiAob3B0aW9ucyAhPSBudWxsKSB7XG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKG5hbWUgaW4gb3B0aW9ucykge1xuXHRcdFx0XHRzcmMgPSB0YXJnZXRbbmFtZV07XG5cdFx0XHRcdGNvcHkgPSBvcHRpb25zW25hbWVdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3Bcblx0XHRcdFx0aWYgKHRhcmdldCA9PT0gY29weSkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdGlmIChkZWVwICYmIGNvcHkgJiYgKGlzUGxhaW5PYmplY3QoY29weSkgfHwgKGNvcHlJc0FycmF5ID0gaXNBcnJheShjb3B5KSkpKSB7XG5cdFx0XHRcdFx0aWYgKGNvcHlJc0FycmF5KSB7XG5cdFx0XHRcdFx0XHRjb3B5SXNBcnJheSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgaXNBcnJheShzcmMpID8gc3JjIDogW107XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIGlzUGxhaW5PYmplY3Qoc3JjKSA/IHNyYyA6IHt9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdHRhcmdldFtuYW1lXSA9IGV4dGVuZChkZWVwLCBjbG9uZSwgY29weSk7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xuXHRcdFx0XHR9IGVsc2UgaWYgKGNvcHkgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdHRhcmdldFtuYW1lXSA9IGNvcHk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZXh0ZW5kL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMTlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {var m = (function app(window, undefined) {\r\n	"use strict";\r\n  	var VERSION = "v0.2.2-rc.1";\r\n	function isFunction(object) {\r\n		return typeof object === "function";\r\n	}\r\n	function isObject(object) {\r\n		return type.call(object) === "[object Object]";\r\n	}\r\n	function isString(object) {\r\n		return type.call(object) === "[object String]";\r\n	}\r\n	var isArray = Array.isArray || function (object) {\r\n		return type.call(object) === "[object Array]";\r\n	};\r\n	var type = {}.toString;\r\n	var parser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[.+?\\])/g, attrParser = /\\[(.+?)(?:=("|\'|)(.*?)\\2)?\\]/;\r\n	var voidElements = /^(AREA|BASE|BR|COL|COMMAND|EMBED|HR|IMG|INPUT|KEYGEN|LINK|META|PARAM|SOURCE|TRACK|WBR)$/;\r\n	var noop = function () {};\r\n\r\n	// caching commonly used variables\r\n	var $document, $location, $requestAnimationFrame, $cancelAnimationFrame;\r\n\r\n	// self invoking function needed because of the way mocks work\r\n	function initialize(window) {\r\n		$document = window.document;\r\n		$location = window.location;\r\n		$cancelAnimationFrame = window.cancelAnimationFrame || window.clearTimeout;\r\n		$requestAnimationFrame = window.requestAnimationFrame || window.setTimeout;\r\n	}\r\n\r\n	initialize(window);\r\n\r\n	m.version = function() {\r\n		return VERSION;\r\n	};\r\n\r\n	/**\r\n	 * @typedef {String} Tag\r\n	 * A string that looks like -> div.classname#id[param=one][param2=two]\r\n	 * Which describes a DOM node\r\n	 */\r\n\r\n	/**\r\n	 *\r\n	 * @param {Tag} The DOM node tag\r\n	 * @param {Object=[]} optional key-value pairs to be mapped to DOM attrs\r\n	 * @param {...mNode=[]} Zero or more Mithril child nodes. Can be an array, or splat (optional)\r\n	 *\r\n	 */\r\n	function m(tag, pairs) {\r\n		for (var args = [], i = 1; i < arguments.length; i++) {\r\n			args[i - 1] = arguments[i];\r\n		}\r\n		if (isObject(tag)) return parameterize(tag, args);\r\n		var hasAttrs = pairs != null && isObject(pairs) && !("tag" in pairs || "view" in pairs || "subtree" in pairs);\r\n		var attrs = hasAttrs ? pairs : {};\r\n		var classAttrName = "class" in attrs ? "class" : "className";\r\n		var cell = {tag: "div", attrs: {}};\r\n		var match, classes = [];\r\n		if (!isString(tag)) throw new Error("selector in m(selector, attrs, children) should be a string");\r\n		while ((match = parser.exec(tag)) != null) {\r\n			if (match[1] === "" && match[2]) cell.tag = match[2];\r\n			else if (match[1] === "#") cell.attrs.id = match[2];\r\n			else if (match[1] === ".") classes.push(match[2]);\r\n			else if (match[3][0] === "[") {\r\n				var pair = attrParser.exec(match[3]);\r\n				cell.attrs[pair[1]] = pair[3] || (pair[2] ? "" :true);\r\n			}\r\n		}\r\n\r\n		var children = hasAttrs ? args.slice(1) : args;\r\n		if (children.length === 1 && isArray(children[0])) {\r\n			cell.children = children[0];\r\n		}\r\n		else {\r\n			cell.children = children;\r\n		}\r\n\r\n		for (var attrName in attrs) {\r\n			if (attrs.hasOwnProperty(attrName)) {\r\n				if (attrName === classAttrName && attrs[attrName] != null && attrs[attrName] !== "") {\r\n					classes.push(attrs[attrName]);\r\n					cell.attrs[attrName] = ""; //create key in correct iteration order\r\n				}\r\n				else cell.attrs[attrName] = attrs[attrName];\r\n			}\r\n		}\r\n		if (classes.length) cell.attrs[classAttrName] = classes.join(" ");\r\n\r\n		return cell;\r\n	}\r\n	function forEach(list, f) {\r\n		for (var i = 0; i < list.length && !f(list[i], i++);) {}\r\n	}\r\n	function forKeys(list, f) {\r\n		forEach(list, function (attrs, i) {\r\n			return (attrs = attrs && attrs.attrs) && attrs.key != null && f(attrs, i);\r\n		});\r\n	}\r\n	// This function was causing deopts in Chrome.\r\n	function dataToString(data) {\r\n		//data.toString() might throw or return null if data is the return value of Console.log in Firefox (behavior depends on version)\r\n		try {\r\n			if (data == null || data.toString() == null) return "";\r\n		} catch (e) {\r\n			return "";\r\n		}\r\n		return data;\r\n	}\r\n	// This function was causing deopts in Chrome.\r\n	function injectTextNode(parentElement, first, index, data) {\r\n		try {\r\n			insertNode(parentElement, first, index);\r\n			first.nodeValue = data;\r\n		} catch (e) {} //IE erroneously throws error when appending an empty text node after a null\r\n	}\r\n\r\n	function flatten(list) {\r\n		//recursively flatten array\r\n		for (var i = 0; i < list.length; i++) {\r\n			if (isArray(list[i])) {\r\n				list = list.concat.apply([], list);\r\n				//check current index again and flatten until there are no more nested arrays at that index\r\n				i--;\r\n			}\r\n		}\r\n		return list;\r\n	}\r\n\r\n	function insertNode(parentElement, node, index) {\r\n		parentElement.insertBefore(node, parentElement.childNodes[index] || null);\r\n	}\r\n\r\n	var DELETION = 1, INSERTION = 2, MOVE = 3;\r\n\r\n	function handleKeysDiffer(data, existing, cached, parentElement) {\r\n		forKeys(data, function (key, i) {\r\n			existing[key = key.key] = existing[key] ? {\r\n				action: MOVE,\r\n				index: i,\r\n				from: existing[key].index,\r\n				element: cached.nodes[existing[key].index] || $document.createElement("div")\r\n			} : {action: INSERTION, index: i};\r\n		});\r\n		var actions = [];\r\n		for (var prop in existing) actions.push(existing[prop]);\r\n		var changes = actions.sort(sortChanges), newCached = new Array(cached.length);\r\n		newCached.nodes = cached.nodes.slice();\r\n\r\n		forEach(changes, function (change) {\r\n			var index = change.index;\r\n			if (change.action === DELETION) {\r\n				clear(cached[index].nodes, cached[index]);\r\n				newCached.splice(index, 1);\r\n			}\r\n			if (change.action === INSERTION) {\r\n				var dummy = $document.createElement("div");\r\n				dummy.key = data[index].attrs.key;\r\n				insertNode(parentElement, dummy, index);\r\n				newCached.splice(index, 0, {\r\n					attrs: {key: data[index].attrs.key},\r\n					nodes: [dummy]\r\n				});\r\n				newCached.nodes[index] = dummy;\r\n			}\r\n\r\n			if (change.action === MOVE) {\r\n				var changeElement = change.element;\r\n				var maybeChanged = parentElement.childNodes[index];\r\n				if (maybeChanged !== changeElement && changeElement !== null) {\r\n					parentElement.insertBefore(changeElement, maybeChanged || null);\r\n				}\r\n				newCached[index] = cached[change.from];\r\n				newCached.nodes[index] = changeElement;\r\n			}\r\n		});\r\n\r\n		return newCached;\r\n	}\r\n\r\n	function diffKeys(data, cached, existing, parentElement) {\r\n		var keysDiffer = data.length !== cached.length;\r\n		if (!keysDiffer) {\r\n			forKeys(data, function (attrs, i) {\r\n				var cachedCell = cached[i];\r\n				return keysDiffer = cachedCell && cachedCell.attrs && cachedCell.attrs.key !== attrs.key;\r\n			});\r\n		}\r\n\r\n		return keysDiffer ? handleKeysDiffer(data, existing, cached, parentElement) : cached;\r\n	}\r\n\r\n	function diffArray(data, cached, nodes) {\r\n		//diff the array itself\r\n\r\n		//update the list of DOM nodes by collecting the nodes from each item\r\n		forEach(data, function (_, i) {\r\n			if (cached[i] != null) nodes.push.apply(nodes, cached[i].nodes);\r\n		})\r\n		//remove items from the end of the array if the new array is shorter than the old one. if errors ever happen here, the issue is most likely\r\n		//a bug in the construction of the `cached` data structure somewhere earlier in the program\r\n		forEach(cached.nodes, function (node, i) {\r\n			if (node.parentNode != null && nodes.indexOf(node) < 0) clear([node], [cached[i]]);\r\n		})\r\n		if (data.length < cached.length) cached.length = data.length;\r\n		cached.nodes = nodes;\r\n	}\r\n\r\n	function buildArrayKeys(data) {\r\n		var guid = 0;\r\n		forKeys(data, function () {\r\n			forEach(data, function (attrs) {\r\n				if ((attrs = attrs && attrs.attrs) && attrs.key == null) attrs.key = "__mithril__" + guid++;\r\n			})\r\n			return 1;\r\n		});\r\n	}\r\n\r\n	function maybeRecreateObject(data, cached, dataAttrKeys) {\r\n		//if an element is different enough from the one in cache, recreate it\r\n		if (data.tag !== cached.tag ||\r\n				dataAttrKeys.sort().join() !== Object.keys(cached.attrs).sort().join() ||\r\n				data.attrs.id !== cached.attrs.id ||\r\n				data.attrs.key !== cached.attrs.key ||\r\n				(m.redraw.strategy() === "all" && (!cached.configContext || cached.configContext.retain !== true)) ||\r\n				(m.redraw.strategy() === "diff" && cached.configContext && cached.configContext.retain === false)) {\r\n			if (cached.nodes.length) clear(cached.nodes);\r\n			if (cached.configContext && isFunction(cached.configContext.onunload)) cached.configContext.onunload();\r\n			if (cached.controllers) {\r\n				forEach(cached.controllers, function (controller) {\r\n					if (controller.unload) controller.onunload({preventDefault: noop});\r\n				});\r\n			}\r\n		}\r\n	}\r\n\r\n	function getObjectNamespace(data, namespace) {\r\n		return data.attrs.xmlns ? data.attrs.xmlns :\r\n			data.tag === "svg" ? "http://www.w3.org/2000/svg" :\r\n			data.tag === "math" ? "http://www.w3.org/1998/Math/MathML" :\r\n			namespace;\r\n	}\r\n\r\n	function unloadCachedControllers(cached, views, controllers) {\r\n		if (controllers.length) {\r\n			cached.views = views;\r\n			cached.controllers = controllers;\r\n			forEach(controllers, function (controller) {\r\n				if (controller.onunload && controller.onunload.$old) controller.onunload = controller.onunload.$old;\r\n				if (pendingRequests && controller.onunload) {\r\n					var onunload = controller.onunload;\r\n					controller.onunload = noop;\r\n					controller.onunload.$old = onunload;\r\n				}\r\n			});\r\n		}\r\n	}\r\n\r\n	function scheduleConfigsToBeCalled(configs, data, node, isNew, cached) {\r\n		//schedule configs to be called. They are called after `build`\r\n		//finishes running\r\n		if (isFunction(data.attrs.config)) {\r\n			var context = cached.configContext = cached.configContext || {};\r\n\r\n			//bind\r\n			configs.push(function() {\r\n				return data.attrs.config.call(data, node, !isNew, context, cached);\r\n			});\r\n		}\r\n	}\r\n\r\n	function buildUpdatedNode(cached, data, editable, hasKeys, namespace, views, configs, controllers) {\r\n		var node = cached.nodes[0];\r\n		if (hasKeys) setAttributes(node, data.tag, data.attrs, cached.attrs, namespace);\r\n		cached.children = build(node, data.tag, undefined, undefined, data.children, cached.children, false, 0, data.attrs.contenteditable ? node : editable, namespace, configs);\r\n		cached.nodes.intact = true;\r\n\r\n		if (controllers.length) {\r\n			cached.views = views;\r\n			cached.controllers = controllers;\r\n		}\r\n\r\n		return node;\r\n	}\r\n\r\n	function handleNonexistentNodes(data, parentElement, index) {\r\n		var nodes;\r\n		if (data.$trusted) {\r\n			nodes = injectHTML(parentElement, index, data);\r\n		}\r\n		else {\r\n			nodes = [$document.createTextNode(data)];\r\n			if (!parentElement.nodeName.match(voidElements)) insertNode(parentElement, nodes[0], index);\r\n		}\r\n\r\n		var cached = typeof data === "string" || typeof data === "number" || typeof data === "boolean" ? new data.constructor(data) : data;\r\n		cached.nodes = nodes;\r\n		return cached;\r\n	}\r\n\r\n	function reattachNodes(data, cached, parentElement, editable, index, parentTag) {\r\n		var nodes = cached.nodes;\r\n		if (!editable || editable !== $document.activeElement) {\r\n			if (data.$trusted) {\r\n				clear(nodes, cached)\r\n				nodes = injectHTML(parentElement, index, data)\r\n			} else if (parentTag === "textarea") {\r\n				// <textarea> uses `value` instead of `nodeValue`.\r\n				parentElement.value = data\r\n			} else if (editable) {\r\n				// contenteditable nodes use `innerHTML` instead of `nodeValue`.\r\n				editable.innerHTML = data\r\n			} else {\r\n				// was a trusted string\r\n				if (nodes[0].nodeType === 1 || nodes.length > 1 || (nodes[0].nodeValue.trim && !nodes[0].nodeValue.trim())) {\r\n					clear(cached.nodes, cached)\r\n					nodes = [$document.createTextNode(data)]\r\n				}\r\n				injectTextNode(parentElement, nodes[0], index, data);\r\n			}\r\n		}\r\n		cached = new data.constructor(data);\r\n		cached.nodes = nodes;\r\n		return cached;\r\n	}\r\n\r\n	function handleText(cached, data, index, parentElement, shouldReattach, editable, parentTag) {\r\n		//handle text nodes\r\n		return cached.nodes.length === 0 ? handleNonexistentNodes(data, parentElement, index) :\r\n			cached.valueOf() !== data.valueOf() || shouldReattach === true ?\r\n				reattachNodes(data, cached, parentElement, editable, index, parentTag) :\r\n			(cached.nodes.intact = true, cached);\r\n	}\r\n\r\n	function getSubArrayCount(item) {\r\n		if (item.$trusted) {\r\n			//fix offset of next element if item was a trusted string w/ more than one html element\r\n			//the first clause in the regexp matches elements\r\n			//the second clause (after the pipe) matches text nodes\r\n			var match = item.match(/<[^\\/]|\\>\\s*[^<]/g);\r\n			if (match != null) return match.length;\r\n		}\r\n		else if (isArray(item)) {\r\n			return item.length;\r\n		}\r\n		return 1;\r\n	}\r\n\r\n	function buildArray(data, cached, parentElement, index, parentTag, shouldReattach, editable, namespace, configs) {\r\n		data = flatten(data);\r\n		var nodes = [], intact = cached.length === data.length, subArrayCount = 0;\r\n\r\n		//keys algorithm: sort elements without recreating them if keys are present\r\n		//1) create a map of all existing keys, and mark all for deletion\r\n		//2) add new keys to map and mark them for addition\r\n		//3) if key exists in new list, change action from deletion to a move\r\n		//4) for each key, handle its corresponding action as marked in previous steps\r\n		var existing = {}, shouldMaintainIdentities = false;\r\n		forKeys(cached, function (attrs, i) {\r\n			shouldMaintainIdentities = true;\r\n			existing[cached[i].attrs.key] = {action: DELETION, index: i};\r\n		});\r\n\r\n		buildArrayKeys(data);\r\n		if (shouldMaintainIdentities) cached = diffKeys(data, cached, existing, parentElement);\r\n		//end key algorithm\r\n\r\n		var cacheCount = 0;\r\n		//faster explicitly written\r\n		for (var i = 0, len = data.length; i < len; i++) {\r\n			//diff each item in the array\r\n			var item = build(parentElement, parentTag, cached, index, data[i], cached[cacheCount], shouldReattach, index + subArrayCount || subArrayCount, editable, namespace, configs);\r\n\r\n			if (item !== undefined) {\r\n				intact = intact && item.nodes.intact;\r\n				subArrayCount += getSubArrayCount(item);\r\n				cached[cacheCount++] = item;\r\n			}\r\n		}\r\n\r\n		if (!intact) diffArray(data, cached, nodes);\r\n		return cached\r\n	}\r\n\r\n	function makeCache(data, cached, index, parentIndex, parentCache) {\r\n		if (cached != null) {\r\n			if (type.call(cached) === type.call(data)) return cached;\r\n\r\n			if (parentCache && parentCache.nodes) {\r\n				var offset = index - parentIndex, end = offset + (isArray(data) ? data : cached.nodes).length;\r\n				clear(parentCache.nodes.slice(offset, end), parentCache.slice(offset, end));\r\n			} else if (cached.nodes) {\r\n				clear(cached.nodes, cached);\r\n			}\r\n		}\r\n\r\n		cached = new data.constructor();\r\n		//if constructor creates a virtual dom element, use a blank object\r\n		//as the base cached node instead of copying the virtual el (#277)\r\n		if (cached.tag) cached = {};\r\n		cached.nodes = [];\r\n		return cached;\r\n	}\r\n\r\n	function constructNode(data, namespace) {\r\n		return namespace === undefined ?\r\n			data.attrs.is ? $document.createElement(data.tag, data.attrs.is) : $document.createElement(data.tag) :\r\n			data.attrs.is ? $document.createElementNS(namespace, data.tag, data.attrs.is) : $document.createElementNS(namespace, data.tag);\r\n	}\r\n\r\n	function constructAttrs(data, node, namespace, hasKeys) {\r\n		return hasKeys ? setAttributes(node, data.tag, data.attrs, {}, namespace) : data.attrs;\r\n	}\r\n\r\n	function constructChildren(data, node, cached, editable, namespace, configs) {\r\n		return data.children != null && data.children.length > 0 ?\r\n			build(node, data.tag, undefined, undefined, data.children, cached.children, true, 0, data.attrs.contenteditable ? node : editable, namespace, configs) :\r\n			data.children;\r\n	}\r\n\r\n	function reconstructCached(data, attrs, children, node, namespace, views, controllers) {\r\n		var cached = {tag: data.tag, attrs: attrs, children: children, nodes: [node]};\r\n		unloadCachedControllers(cached, views, controllers);\r\n		if (cached.children && !cached.children.nodes) cached.children.nodes = [];\r\n		//edge case: setting value on <select> doesn\'t work before children exist, so set it again after children have been created\r\n		if (data.tag === "select" && "value" in data.attrs) setAttributes(node, data.tag, {value: data.attrs.value}, {}, namespace);\r\n		return cached\r\n	}\r\n\r\n	function getController(views, view, cachedControllers, controller) {\r\n		var controllerIndex = m.redraw.strategy() === "diff" && views ? views.indexOf(view) : -1;\r\n		return controllerIndex > -1 ? cachedControllers[controllerIndex] :\r\n			typeof controller === "function" ? new controller() : {};\r\n	}\r\n\r\n	function updateLists(views, controllers, view, controller) {\r\n		if (controller.onunload != null) unloaders.push({controller: controller, handler: controller.onunload});\r\n		views.push(view);\r\n		controllers.push(controller);\r\n	}\r\n\r\n	function checkView(data, view, cached, cachedControllers, controllers, views) {\r\n		var controller = getController(cached.views, view, cachedControllers, data.controller);\r\n		//Faster to coerce to number and check for NaN\r\n		var key = +(data && data.attrs && data.attrs.key);\r\n		data = pendingRequests === 0 || forcing || cachedControllers && cachedControllers.indexOf(controller) > -1 ? data.view(controller) : {tag: "placeholder"};\r\n		if (data.subtree === "retain") return cached;\r\n		if (key === key) (data.attrs = data.attrs || {}).key = key;\r\n		updateLists(views, controllers, view, controller);\r\n		return data;\r\n	}\r\n\r\n	function markViews(data, cached, views, controllers) {\r\n		var cachedControllers = cached && cached.controllers;\r\n		while (data.view != null) data = checkView(data, data.view.$original || data.view, cached, cachedControllers, controllers, views);\r\n		return data;\r\n	}\r\n\r\n	function buildObject(data, cached, editable, parentElement, index, shouldReattach, namespace, configs) {\r\n		var views = [], controllers = [];\r\n		data = markViews(data, cached, views, controllers);\r\n		if (!data.tag && controllers.length) throw new Error("Component template must return a virtual element, not an array, string, etc.");\r\n		data.attrs = data.attrs || {};\r\n		cached.attrs = cached.attrs || {};\r\n		var dataAttrKeys = Object.keys(data.attrs);\r\n		var hasKeys = dataAttrKeys.length > ("key" in data.attrs ? 1 : 0);\r\n		maybeRecreateObject(data, cached, dataAttrKeys);\r\n		if (!isString(data.tag)) return;\r\n		var isNew = cached.nodes.length === 0;\r\n		namespace = getObjectNamespace(data, namespace);\r\n		var node;\r\n		if (isNew) {\r\n			node = constructNode(data, namespace);\r\n			//set attributes first, then create children\r\n			var attrs = constructAttrs(data, node, namespace, hasKeys)\r\n			var children = constructChildren(data, node, cached, editable, namespace, configs);\r\n			cached = reconstructCached(data, attrs, children, node, namespace, views, controllers);\r\n		}\r\n		else {\r\n			node = buildUpdatedNode(cached, data, editable, hasKeys, namespace, views, configs, controllers);\r\n		}\r\n		if (isNew || shouldReattach === true && node != null) insertNode(parentElement, node, index);\r\n		//schedule configs to be called. They are called after `build`\r\n		//finishes running\r\n		scheduleConfigsToBeCalled(configs, data, node, isNew, cached);\r\n		return cached\r\n	}\r\n\r\n	function build(parentElement, parentTag, parentCache, parentIndex, data, cached, shouldReattach, index, editable, namespace, configs) {\r\n		//`build` is a recursive function that manages creation/diffing/removal\r\n		//of DOM elements based on comparison between `data` and `cached`\r\n		//the diff algorithm can be summarized as this:\r\n		//1 - compare `data` and `cached`\r\n		//2 - if they are different, copy `data` to `cached` and update the DOM\r\n		//    based on what the difference is\r\n		//3 - recursively apply this algorithm for every array and for the\r\n		//    children of every virtual element\r\n\r\n		//the `cached` data structure is essentially the same as the previous\r\n		//redraw\'s `data` data structure, with a few additions:\r\n		//- `cached` always has a property called `nodes`, which is a list of\r\n		//   DOM elements that correspond to the data represented by the\r\n		//   respective virtual element\r\n		//- in order to support attaching `nodes` as a property of `cached`,\r\n		//   `cached` is *always* a non-primitive object, i.e. if the data was\r\n		//   a string, then cached is a String instance. If data was `null` or\r\n		//   `undefined`, cached is `new String("")`\r\n		//- `cached also has a `configContext` property, which is the state\r\n		//   storage object exposed by config(element, isInitialized, context)\r\n		//- when `cached` is an Object, it represents a virtual element; when\r\n		//   it\'s an Array, it represents a list of elements; when it\'s a\r\n		//   String, Number or Boolean, it represents a text node\r\n\r\n		//`parentElement` is a DOM element used for W3C DOM API calls\r\n		//`parentTag` is only used for handling a corner case for textarea\r\n		//values\r\n		//`parentCache` is used to remove nodes in some multi-node cases\r\n		//`parentIndex` and `index` are used to figure out the offset of nodes.\r\n		//They\'re artifacts from before arrays started being flattened and are\r\n		//likely refactorable\r\n		//`data` and `cached` are, respectively, the new and old nodes being\r\n		//diffed\r\n		//`shouldReattach` is a flag indicating whether a parent node was\r\n		//recreated (if so, and if this node is reused, then this node must\r\n		//reattach itself to the new parent)\r\n		//`editable` is a flag that indicates whether an ancestor is\r\n		//contenteditable\r\n		//`namespace` indicates the closest HTML namespace as it cascades down\r\n		//from an ancestor\r\n		//`configs` is a list of config functions to run after the topmost\r\n		//`build` call finishes running\r\n\r\n		//there\'s logic that relies on the assumption that null and undefined\r\n		//data are equivalent to empty strings\r\n		//- this prevents lifecycle surprises from procedural helpers that mix\r\n		//  implicit and explicit return statements (e.g.\r\n		//  function foo() {if (cond) return m("div")}\r\n		//- it simplifies diffing code\r\n		data = dataToString(data);\r\n		if (data.subtree === "retain") return cached;\r\n		cached = makeCache(data, cached, index, parentIndex, parentCache);\r\n		return isArray(data) ? buildArray(data, cached, parentElement, index, parentTag, shouldReattach, editable, namespace, configs) :\r\n			data != null && isObject(data) ? buildObject(data, cached, editable, parentElement, index, shouldReattach, namespace, configs) :\r\n			!isFunction(data) ? handleText(cached, data, index, parentElement, shouldReattach, editable, parentTag) :\r\n			cached;\r\n	}\r\n	function sortChanges(a, b) { return a.action - b.action || a.index - b.index; }\r\n	function setAttributes(node, tag, dataAttrs, cachedAttrs, namespace) {\r\n		for (var attrName in dataAttrs) {\r\n			var dataAttr = dataAttrs[attrName];\r\n			var cachedAttr = cachedAttrs[attrName];\r\n			if (!(attrName in cachedAttrs) || (cachedAttr !== dataAttr)) {\r\n				cachedAttrs[attrName] = dataAttr;\r\n				try {\r\n					//`config` isn\'t a real attributes, so ignore it\r\n					if (attrName === "config" || attrName === "key") continue;\r\n					//hook event handlers to the auto-redrawing system\r\n					else if (isFunction(dataAttr) && attrName.slice(0, 2) === "on") {\r\n						node[attrName] = autoredraw(dataAttr, node);\r\n					}\r\n					//handle `style: {...}`\r\n					else if (attrName === "style" && dataAttr != null && isObject(dataAttr)) {\r\n						for (var rule in dataAttr) {\r\n							if (cachedAttr == null || cachedAttr[rule] !== dataAttr[rule]) node.style[rule] = dataAttr[rule];\r\n						}\r\n						for (var rule in cachedAttr) {\r\n							if (!(rule in dataAttr)) node.style[rule] = "";\r\n						}\r\n					}\r\n					//handle SVG\r\n					else if (namespace != null) {\r\n						if (attrName === "href") node.setAttributeNS("http://www.w3.org/1999/xlink", "href", dataAttr);\r\n						else node.setAttribute(attrName === "className" ? "class" : attrName, dataAttr);\r\n					}\r\n					//handle cases that are properties (but ignore cases where we should use setAttribute instead)\r\n					//- list and form are typically used as strings, but are DOM element references in js\r\n					//- when using CSS selectors (e.g. `m("[style=\'\']")`), style is used as a string, but it\'s an object in js\r\n					else if (attrName in node && attrName !== "list" && attrName !== "style" && attrName !== "form" && attrName !== "type" && attrName !== "width" && attrName !== "height") {\r\n						//#348 don\'t set the value if not needed otherwise cursor placement breaks in Chrome\r\n						if (tag !== "input" || node[attrName] !== dataAttr) node[attrName] = dataAttr;\r\n					}\r\n					else node.setAttribute(attrName, dataAttr);\r\n				}\r\n				catch (e) {\r\n					//swallow IE\'s invalid argument errors to mimic HTML\'s fallback-to-doing-nothing-on-invalid-attributes behavior\r\n					if (e.message.indexOf("Invalid argument") < 0) throw e;\r\n				}\r\n			}\r\n			//#348 dataAttr may not be a string, so use loose comparison (double equal) instead of strict (triple equal)\r\n			else if (attrName === "value" && tag === "input" && node.value != dataAttr) {\r\n				node.value = dataAttr;\r\n			}\r\n		}\r\n		return cachedAttrs;\r\n	}\r\n	function clear(nodes, cached) {\r\n		for (var i = nodes.length - 1; i > -1; i--) {\r\n			if (nodes[i] && nodes[i].parentNode) {\r\n				try { nodes[i].parentNode.removeChild(nodes[i]); }\r\n				catch (e) {} //ignore if this fails due to order of events (see http://stackoverflow.com/questions/21926083/failed-to-execute-removechild-on-node)\r\n				cached = [].concat(cached);\r\n				if (cached[i]) unload(cached[i]);\r\n			}\r\n		}\r\n		//release memory if nodes is an array. This check should fail if nodes is a NodeList (see loop above)\r\n		if (nodes.length) nodes.length = 0;\r\n	}\r\n	function unload(cached) {\r\n		if (cached.configContext && isFunction(cached.configContext.onunload)) {\r\n			cached.configContext.onunload();\r\n			cached.configContext.onunload = null;\r\n		}\r\n		if (cached.controllers) {\r\n			forEach(cached.controllers, function (controller) {\r\n				if (isFunction(controller.onunload)) controller.onunload({preventDefault: noop});\r\n			});\r\n		}\r\n		if (cached.children) {\r\n			if (isArray(cached.children)) forEach(cached.children, unload);\r\n			else if (cached.children.tag) unload(cached.children);\r\n		}\r\n	}\r\n	function injectHTML(parentElement, index, data) {\r\n		var nextSibling = parentElement.childNodes[index];\r\n		if (nextSibling) {\r\n			var isElement = nextSibling.nodeType !== 1;\r\n			var placeholder = $document.createElement("span");\r\n			if (isElement) {\r\n				parentElement.insertBefore(placeholder, nextSibling || null);\r\n				placeholder.insertAdjacentHTML("beforebegin", data);\r\n				parentElement.removeChild(placeholder);\r\n			}\r\n			else nextSibling.insertAdjacentHTML("beforebegin", data);\r\n		}\r\n		else {\r\n			if (window.Range && window.Range.prototype.createContextualFragment) {\r\n				parentElement.appendChild($document.createRange().createContextualFragment(data));\r\n			}\r\n			else parentElement.insertAdjacentHTML("beforeend", data);\r\n		}\r\n		var nodes = [];\r\n		while (parentElement.childNodes[index] !== nextSibling) {\r\n			nodes.push(parentElement.childNodes[index]);\r\n			index++;\r\n		}\r\n		return nodes;\r\n	}\r\n	function autoredraw(callback, object) {\r\n		return function(e) {\r\n			e = e || event;\r\n			m.redraw.strategy("diff");\r\n			m.startComputation();\r\n			try { return callback.call(object, e); }\r\n			finally {\r\n				endFirstComputation();\r\n			}\r\n		};\r\n	}\r\n\r\n	var html;\r\n	var documentNode = {\r\n		appendChild: function(node) {\r\n			if (html === undefined) html = $document.createElement("html");\r\n			if ($document.documentElement && $document.documentElement !== node) {\r\n				$document.replaceChild(node, $document.documentElement);\r\n			}\r\n			else $document.appendChild(node);\r\n			this.childNodes = $document.childNodes;\r\n		},\r\n		insertBefore: function(node) {\r\n			this.appendChild(node);\r\n		},\r\n		childNodes: []\r\n	};\r\n	var nodeCache = [], cellCache = {};\r\n	m.render = function(root, cell, forceRecreation) {\r\n		var configs = [];\r\n		if (!root) throw new Error("Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.");\r\n		var id = getCellCacheKey(root);\r\n		var isDocumentRoot = root === $document;\r\n		var node = isDocumentRoot || root === $document.documentElement ? documentNode : root;\r\n		if (isDocumentRoot && cell.tag !== "html") cell = {tag: "html", attrs: {}, children: cell};\r\n		if (cellCache[id] === undefined) clear(node.childNodes);\r\n		if (forceRecreation === true) reset(root);\r\n		cellCache[id] = build(node, null, undefined, undefined, cell, cellCache[id], false, 0, null, undefined, configs);\r\n		forEach(configs, function (config) { config(); });\r\n	};\r\n	function getCellCacheKey(element) {\r\n		var index = nodeCache.indexOf(element);\r\n		return index < 0 ? nodeCache.push(element) - 1 : index;\r\n	}\r\n\r\n	m.trust = function(value) {\r\n		value = new String(value);\r\n		value.$trusted = true;\r\n		return value;\r\n	};\r\n\r\n	function gettersetter(store) {\r\n		var prop = function() {\r\n			if (arguments.length) store = arguments[0];\r\n			return store;\r\n		};\r\n\r\n		prop.toJSON = function() {\r\n			return store;\r\n		};\r\n\r\n		return prop;\r\n	}\r\n\r\n	m.prop = function (store) {\r\n		//note: using non-strict equality check here because we\'re checking if store is null OR undefined\r\n		if ((store != null && isObject(store) || isFunction(store)) && isFunction(store.then)) {\r\n			return propify(store);\r\n		}\r\n\r\n		return gettersetter(store);\r\n	};\r\n\r\n	var roots = [], components = [], controllers = [], lastRedrawId = null, lastRedrawCallTime = 0, computePreRedrawHook = null, computePostRedrawHook = null, topComponent, unloaders = [];\r\n	var FRAME_BUDGET = 16; //60 frames per second = 1 call per 16 ms\r\n	function parameterize(component, args) {\r\n		var controller = function() {\r\n			return (component.controller || noop).apply(this, args) || this;\r\n		};\r\n		if (component.controller) controller.prototype = component.controller.prototype;\r\n		var view = function(ctrl) {\r\n			var currentArgs = arguments.length > 1 ? args.concat([].slice.call(arguments, 1)) : args;\r\n			return component.view.apply(component, currentArgs ? [ctrl].concat(currentArgs) : [ctrl]);\r\n		};\r\n		view.$original = component.view;\r\n		var output = {controller: controller, view: view};\r\n		if (args[0] && args[0].key != null) output.attrs = {key: args[0].key};\r\n		return output;\r\n	}\r\n	m.component = function(component) {\r\n		for (var args = [], i = 1; i < arguments.length; i++) args.push(arguments[i]);\r\n		return parameterize(component, args);\r\n	};\r\n	m.mount = m.module = function(root, component) {\r\n		if (!root) throw new Error("Please ensure the DOM element exists before rendering a template into it.");\r\n		var index = roots.indexOf(root);\r\n		if (index < 0) index = roots.length;\r\n\r\n		var isPrevented = false;\r\n		var event = {preventDefault: function() {\r\n			isPrevented = true;\r\n			computePreRedrawHook = computePostRedrawHook = null;\r\n		}};\r\n\r\n		forEach(unloaders, function (unloader) {\r\n			unloader.handler.call(unloader.controller, event);\r\n			unloader.controller.onunload = null;\r\n		});\r\n\r\n		if (isPrevented) {\r\n			forEach(unloaders, function (unloader) {\r\n				unloader.controller.onunload = unloader.handler;\r\n			});\r\n		}\r\n		else unloaders = [];\r\n\r\n		if (controllers[index] && isFunction(controllers[index].onunload)) {\r\n			controllers[index].onunload(event);\r\n		}\r\n\r\n		var isNullComponent = component === null;\r\n\r\n		if (!isPrevented) {\r\n			m.redraw.strategy("all");\r\n			m.startComputation();\r\n			roots[index] = root;\r\n			var currentComponent = component ? (topComponent = component) : (topComponent = component = {controller: noop});\r\n			var controller = new (component.controller || noop)();\r\n			//controllers may call m.mount recursively (via m.route redirects, for example)\r\n			//this conditional ensures only the last recursive m.mount call is applied\r\n			if (currentComponent === topComponent) {\r\n				controllers[index] = controller;\r\n				components[index] = component;\r\n			}\r\n			endFirstComputation();\r\n			if (isNullComponent) {\r\n				removeRootElement(root, index);\r\n			}\r\n			return controllers[index];\r\n		}\r\n		if (isNullComponent) {\r\n			removeRootElement(root, index);\r\n		}\r\n	};\r\n\r\n	function removeRootElement(root, index) {\r\n		roots.splice(index, 1);\r\n		controllers.splice(index, 1);\r\n		components.splice(index, 1);\r\n		reset(root);\r\n		nodeCache.splice(getCellCacheKey(root), 1);\r\n	}\r\n\r\n	var redrawing = false, forcing = false;\r\n	m.redraw = function(force) {\r\n		if (redrawing) return;\r\n		redrawing = true;\r\n		if (force) forcing = true;\r\n		try {\r\n			//lastRedrawId is a positive number if a second redraw is requested before the next animation frame\r\n			//lastRedrawID is null if it\'s the first redraw and not an event handler\r\n			if (lastRedrawId && !force) {\r\n				//when setTimeout: only reschedule redraw if time between now and previous redraw is bigger than a frame, otherwise keep currently scheduled timeout\r\n				//when rAF: always reschedule redraw\r\n				if ($requestAnimationFrame === window.requestAnimationFrame || new Date - lastRedrawCallTime > FRAME_BUDGET) {\r\n					if (lastRedrawId > 0) $cancelAnimationFrame(lastRedrawId);\r\n					lastRedrawId = $requestAnimationFrame(redraw, FRAME_BUDGET);\r\n				}\r\n			}\r\n			else {\r\n				redraw();\r\n				lastRedrawId = $requestAnimationFrame(function() { lastRedrawId = null; }, FRAME_BUDGET);\r\n			}\r\n		}\r\n		finally {\r\n			redrawing = forcing = false;\r\n		}\r\n	};\r\n	m.redraw.strategy = m.prop();\r\n	function redraw() {\r\n		if (computePreRedrawHook) {\r\n			computePreRedrawHook();\r\n			computePreRedrawHook = null;\r\n		}\r\n		forEach(roots, function (root, i) {\r\n			var component = components[i];\r\n			if (controllers[i]) {\r\n				var args = [controllers[i]];\r\n				m.render(root, component.view ? component.view(controllers[i], args) : "");\r\n			}\r\n		});\r\n		//after rendering within a routed context, we need to scroll back to the top, and fetch the document title for history.pushState\r\n		if (computePostRedrawHook) {\r\n			computePostRedrawHook();\r\n			computePostRedrawHook = null;\r\n		}\r\n		lastRedrawId = null;\r\n		lastRedrawCallTime = new Date;\r\n		m.redraw.strategy("diff");\r\n	}\r\n\r\n	var pendingRequests = 0;\r\n	m.startComputation = function() { pendingRequests++; };\r\n	m.endComputation = function() {\r\n		if (pendingRequests > 1) pendingRequests--;\r\n		else {\r\n			pendingRequests = 0;\r\n			m.redraw();\r\n		}\r\n	}\r\n\r\n	function endFirstComputation() {\r\n		if (m.redraw.strategy() === "none") {\r\n			pendingRequests--;\r\n			m.redraw.strategy("diff");\r\n		}\r\n		else m.endComputation();\r\n	}\r\n\r\n	m.withAttr = function(prop, withAttrCallback, callbackThis) {\r\n		return function(e) {\r\n			e = e || event;\r\n			var currentTarget = e.currentTarget || this;\r\n			var _this = callbackThis || this;\r\n			withAttrCallback.call(_this, prop in currentTarget ? currentTarget[prop] : currentTarget.getAttribute(prop));\r\n		};\r\n	};\r\n\r\n	//routing\r\n	var modes = {pathname: "", hash: "#", search: "?"};\r\n	var redirect = noop, routeParams, currentRoute, isDefaultRoute = false;\r\n	m.route = function(root, arg1, arg2, vdom) {\r\n		//m.route()\r\n		if (arguments.length === 0) return currentRoute;\r\n		//m.route(el, defaultRoute, routes)\r\n		else if (arguments.length === 3 && isString(arg1)) {\r\n			redirect = function(source) {\r\n				var path = currentRoute = normalizeRoute(source);\r\n				if (!routeByValue(root, arg2, path)) {\r\n					if (isDefaultRoute) throw new Error("Ensure the default route matches one of the routes defined in m.route");\r\n					isDefaultRoute = true;\r\n					m.route(arg1, true);\r\n					isDefaultRoute = false;\r\n				}\r\n			};\r\n			var listener = m.route.mode === "hash" ? "onhashchange" : "onpopstate";\r\n			window[listener] = function() {\r\n				var path = $location[m.route.mode];\r\n				if (m.route.mode === "pathname") path += $location.search;\r\n				if (currentRoute !== normalizeRoute(path)) redirect(path);\r\n			};\r\n\r\n			computePreRedrawHook = setScroll;\r\n			window[listener]();\r\n		}\r\n		//config: m.route\r\n		else if (root.addEventListener || root.attachEvent) {\r\n			root.href = (m.route.mode !== \'pathname\' ? $location.pathname : \'\') + modes[m.route.mode] + vdom.attrs.href;\r\n			if (root.addEventListener) {\r\n				root.removeEventListener("click", routeUnobtrusive);\r\n				root.addEventListener("click", routeUnobtrusive);\r\n			}\r\n			else {\r\n				root.detachEvent("onclick", routeUnobtrusive);\r\n				root.attachEvent("onclick", routeUnobtrusive);\r\n			}\r\n		}\r\n		//m.route(route, params, shouldReplaceHistoryEntry)\r\n		else if (isString(root)) {\r\n			var oldRoute = currentRoute;\r\n			currentRoute = root;\r\n			var args = arg1 || {};\r\n			var queryIndex = currentRoute.indexOf("?");\r\n			var params = queryIndex > -1 ? parseQueryString(currentRoute.slice(queryIndex + 1)) : {};\r\n			for (var i in args) params[i] = args[i];\r\n			var querystring = buildQueryString(params);\r\n			var currentPath = queryIndex > -1 ? currentRoute.slice(0, queryIndex) : currentRoute;\r\n			if (querystring) currentRoute = currentPath + (currentPath.indexOf("?") === -1 ? "?" : "&") + querystring;\r\n\r\n			var shouldReplaceHistoryEntry = (arguments.length === 3 ? arg2 : arg1) === true || oldRoute === root;\r\n\r\n			if (window.history.pushState) {\r\n				computePreRedrawHook = setScroll;\r\n				computePostRedrawHook = function() {\r\n					window.history[shouldReplaceHistoryEntry ? "replaceState" : "pushState"](null, $document.title, modes[m.route.mode] + currentRoute);\r\n				};\r\n				redirect(modes[m.route.mode] + currentRoute);\r\n			}\r\n			else {\r\n				$location[m.route.mode] = currentRoute;\r\n				redirect(modes[m.route.mode] + currentRoute);\r\n			}\r\n		}\r\n	};\r\n	m.route.param = function(key) {\r\n		if (!routeParams) throw new Error("You must call m.route(element, defaultRoute, routes) before calling m.route.param()");\r\n		if( !key ){\r\n			return routeParams;\r\n		}\r\n		return routeParams[key];\r\n	};\r\n	m.route.mode = "search";\r\n	function normalizeRoute(route) {\r\n		return route.slice(modes[m.route.mode].length);\r\n	}\r\n	function routeByValue(root, router, path) {\r\n		routeParams = {};\r\n\r\n		var queryStart = path.indexOf("?");\r\n		if (queryStart !== -1) {\r\n			routeParams = parseQueryString(path.substr(queryStart + 1, path.length));\r\n			path = path.substr(0, queryStart);\r\n		}\r\n\r\n		// Get all routes and check if there\'s\r\n		// an exact match for the current path\r\n		var keys = Object.keys(router);\r\n		var index = keys.indexOf(path);\r\n		if(index !== -1){\r\n			m.mount(root, router[keys [index]]);\r\n			return true;\r\n		}\r\n\r\n		for (var route in router) {\r\n			if (route === path) {\r\n				m.mount(root, router[route]);\r\n				return true;\r\n			}\r\n\r\n			var matcher = new RegExp("^" + route.replace(/:[^\\/]+?\\.{3}/g, "(.*?)").replace(/:[^\\/]+/g, "([^\\\\/]+)") + "\\/?$");\r\n\r\n			if (matcher.test(path)) {\r\n				path.replace(matcher, function() {\r\n					var keys = route.match(/:[^\\/]+/g) || [];\r\n					var values = [].slice.call(arguments, 1, -2);\r\n					forEach(keys, function (key, i) {\r\n						routeParams[key.replace(/:|\\./g, "")] = decodeURIComponent(values[i]);\r\n					})\r\n					m.mount(root, router[route]);\r\n				});\r\n				return true;\r\n			}\r\n		}\r\n	}\r\n	function routeUnobtrusive(e) {\r\n		e = e || event;\r\n\r\n		if (e.ctrlKey || e.metaKey || e.which === 2) return;\r\n\r\n		if (e.preventDefault) e.preventDefault();\r\n		else e.returnValue = false;\r\n\r\n		var currentTarget = e.currentTarget || e.srcElement;\r\n		var args = m.route.mode === "pathname" && currentTarget.search ? parseQueryString(currentTarget.search.slice(1)) : {};\r\n		while (currentTarget && currentTarget.nodeName.toUpperCase() !== "A") currentTarget = currentTarget.parentNode;\r\n		// clear pendingRequests because we want an immediate route change\r\n		pendingRequests = 0;\r\n		m.route(currentTarget[m.route.mode].slice(modes[m.route.mode].length), args);\r\n	}\r\n	function setScroll() {\r\n		if (m.route.mode !== "hash" && $location.hash) $location.hash = $location.hash;\r\n		else window.scrollTo(0, 0);\r\n	}\r\n	function buildQueryString(object, prefix) {\r\n		var duplicates = {};\r\n		var str = [];\r\n		for (var prop in object) {\r\n			var key = prefix ? prefix + "[" + prop + "]" : prop;\r\n			var value = object[prop];\r\n\r\n			if (value === null) {\r\n				str.push(encodeURIComponent(key));\r\n			} else if (isObject(value)) {\r\n				str.push(buildQueryString(value, key));\r\n			} else if (isArray(value)) {\r\n				var keys = [];\r\n				duplicates[key] = duplicates[key] || {};\r\n				forEach(value, function (item) {\r\n					if (!duplicates[key][item]) {\r\n						duplicates[key][item] = true;\r\n						keys.push(encodeURIComponent(key) + "=" + encodeURIComponent(item));\r\n					}\r\n				});\r\n				str.push(keys.join("&"));\r\n			} else if (value !== undefined) {\r\n				str.push(encodeURIComponent(key) + "=" + encodeURIComponent(value));\r\n			}\r\n		}\r\n		return str.join("&");\r\n	}\r\n	function parseQueryString(str) {\r\n		if (str === "" || str == null) return {};\r\n		if (str.charAt(0) === "?") str = str.slice(1);\r\n\r\n		var pairs = str.split("&"), params = {};\r\n		forEach(pairs, function (string) {\r\n			var pair = string.split("=");\r\n			var key = decodeURIComponent(pair[0]);\r\n			var value = pair.length === 2 ? decodeURIComponent(pair[1]) : null;\r\n			if (params[key] != null) {\r\n				if (!isArray(params[key])) params[key] = [params[key]];\r\n				params[key].push(value);\r\n			}\r\n			else params[key] = value;\r\n		});\r\n\r\n		return params;\r\n	}\r\n	m.route.buildQueryString = buildQueryString;\r\n	m.route.parseQueryString = parseQueryString;\r\n\r\n	function reset(root) {\r\n		var cacheKey = getCellCacheKey(root);\r\n		clear(root.childNodes, cellCache[cacheKey]);\r\n		cellCache[cacheKey] = undefined;\r\n	}\r\n\r\n	m.deferred = function () {\r\n		var deferred = new Deferred();\r\n		deferred.promise = propify(deferred.promise);\r\n		return deferred;\r\n	};\r\n	function propify(promise, initialValue) {\r\n		var prop = m.prop(initialValue);\r\n		promise.then(prop);\r\n		prop.then = function(resolve, reject) {\r\n			return propify(promise.then(resolve, reject), initialValue);\r\n		};\r\n		prop["catch"] = prop.then.bind(null, null);\r\n		return prop;\r\n	}\r\n	//Promiz.mithril.js | Zolmeister | MIT\r\n	//a modified version of Promiz.js, which does not conform to Promises/A+ for two reasons:\r\n	//1) `then` callbacks are called synchronously (because setTimeout is too slow, and the setImmediate polyfill is too big\r\n	//2) throwing subclasses of Error cause the error to be bubbled up instead of triggering rejection (because the spec does not account for the important use case of default browser error handling, i.e. message w/ line number)\r\n	function Deferred(successCallback, failureCallback) {\r\n		var RESOLVING = 1, REJECTING = 2, RESOLVED = 3, REJECTED = 4;\r\n		var self = this, state = 0, promiseValue = 0, next = [];\r\n\r\n		self.promise = {};\r\n\r\n		self.resolve = function(value) {\r\n			if (!state) {\r\n				promiseValue = value;\r\n				state = RESOLVING;\r\n\r\n				fire();\r\n			}\r\n			return this;\r\n		};\r\n\r\n		self.reject = function(value) {\r\n			if (!state) {\r\n				promiseValue = value;\r\n				state = REJECTING;\r\n\r\n				fire();\r\n			}\r\n			return this;\r\n		};\r\n\r\n		self.promise.then = function(successCallback, failureCallback) {\r\n			var deferred = new Deferred(successCallback, failureCallback)\r\n			if (state === RESOLVED) {\r\n				deferred.resolve(promiseValue);\r\n			}\r\n			else if (state === REJECTED) {\r\n				deferred.reject(promiseValue);\r\n			}\r\n			else {\r\n				next.push(deferred);\r\n			}\r\n			return deferred.promise\r\n		};\r\n\r\n		function finish(type) {\r\n			state = type || REJECTED;\r\n			next.map(function(deferred) {\r\n				state === RESOLVED ? deferred.resolve(promiseValue) : deferred.reject(promiseValue);\r\n			});\r\n		}\r\n\r\n		function thennable(then, successCallback, failureCallback, notThennableCallback) {\r\n			if (((promiseValue != null && isObject(promiseValue)) || isFunction(promiseValue)) && isFunction(then)) {\r\n				try {\r\n					// count protects against abuse calls from spec checker\r\n					var count = 0;\r\n					then.call(promiseValue, function(value) {\r\n						if (count++) return;\r\n						promiseValue = value;\r\n						successCallback();\r\n					}, function (value) {\r\n						if (count++) return;\r\n						promiseValue = value;\r\n						failureCallback();\r\n					});\r\n				}\r\n				catch (e) {\r\n					m.deferred.onerror(e);\r\n					promiseValue = e;\r\n					failureCallback();\r\n				}\r\n			} else {\r\n				notThennableCallback();\r\n			}\r\n		}\r\n\r\n		function fire() {\r\n			// check if it\'s a thenable\r\n			var then;\r\n			try {\r\n				then = promiseValue && promiseValue.then;\r\n			}\r\n			catch (e) {\r\n				m.deferred.onerror(e);\r\n				promiseValue = e;\r\n				state = REJECTING;\r\n				return fire();\r\n			}\r\n\r\n			if (state === REJECTING) {\r\n				m.deferred.onerror(promiseValue)\r\n			}\r\n\r\n			thennable(then, function () {\r\n				state = RESOLVING\r\n				fire()\r\n			}, function () {\r\n				state = REJECTING\r\n				fire()\r\n			}, function () {\r\n				try {\r\n					if (state === RESOLVING && isFunction(successCallback)) {\r\n						promiseValue = successCallback(promiseValue);\r\n					}\r\n					else if (state === REJECTING && isFunction(failureCallback)) {\r\n						promiseValue = failureCallback(promiseValue);\r\n						state = RESOLVING;\r\n					}\r\n				}\r\n				catch (e) {\r\n					m.deferred.onerror(e);\r\n					promiseValue = e;\r\n					return finish();\r\n				}\r\n\r\n				if (promiseValue === self) {\r\n					promiseValue = TypeError();\r\n					finish();\r\n				} else {\r\n					thennable(then, function () {\r\n						finish(RESOLVED);\r\n					}, finish, function () {\r\n						finish(state === RESOLVING && RESOLVED);\r\n					});\r\n				}\r\n			});\r\n		}\r\n	}\r\n	m.deferred.onerror = function(e) {\r\n		if (type.call(e) === "[object Error]" && !e.constructor.toString().match(/ Error/)) {\r\n			pendingRequests = 0;\r\n			throw e;\r\n		}\r\n	};\r\n\r\n	m.sync = function(args) {\r\n		var method = "resolve";\r\n\r\n		function synchronizer(pos, resolved) {\r\n			return function(value) {\r\n				results[pos] = value;\r\n				if (!resolved) method = "reject";\r\n				if (--outstanding === 0) {\r\n					deferred.promise(results);\r\n					deferred[method](results);\r\n				}\r\n				return value;\r\n			};\r\n		}\r\n\r\n		var deferred = m.deferred();\r\n		var outstanding = args.length;\r\n		var results = new Array(outstanding);\r\n		if (args.length > 0) {\r\n			forEach(args, function (arg, i) {\r\n				arg.then(synchronizer(i, true), synchronizer(i, false));\r\n			});\r\n		}\r\n		else deferred.resolve([]);\r\n\r\n		return deferred.promise;\r\n	};\r\n	function identity(value) { return value; }\r\n\r\n	function ajax(options) {\r\n		if (options.dataType && options.dataType.toLowerCase() === "jsonp") {\r\n			var callbackKey = "mithril_callback_" + new Date().getTime() + "_" + (Math.round(Math.random() * 1e16)).toString(36)\r\n			var script = $document.createElement("script");\r\n\r\n			window[callbackKey] = function(resp) {\r\n				script.parentNode.removeChild(script);\r\n				options.onload({\r\n					type: "load",\r\n					target: {\r\n						responseText: resp\r\n					}\r\n				});\r\n				window[callbackKey] = undefined;\r\n			};\r\n\r\n			script.onerror = function() {\r\n				script.parentNode.removeChild(script);\r\n\r\n				options.onerror({\r\n					type: "error",\r\n					target: {\r\n						status: 500,\r\n						responseText: JSON.stringify({\r\n							error: "Error making jsonp request"\r\n						})\r\n					}\r\n				});\r\n				window[callbackKey] = undefined;\r\n\r\n				return false;\r\n			}\r\n\r\n			script.onload = function() {\r\n				return false;\r\n			};\r\n\r\n			script.src = options.url\r\n				+ (options.url.indexOf("?") > 0 ? "&" : "?")\r\n				+ (options.callbackKey ? options.callbackKey : "callback")\r\n				+ "=" + callbackKey\r\n				+ "&" + buildQueryString(options.data || {});\r\n			$document.body.appendChild(script);\r\n		}\r\n		else {\r\n			var xhr = new window.XMLHttpRequest();\r\n			xhr.open(options.method, options.url, true, options.user, options.password);\r\n			xhr.onreadystatechange = function() {\r\n				if (xhr.readyState === 4) {\r\n					if (xhr.status >= 200 && xhr.status < 300) options.onload({type: "load", target: xhr});\r\n					else options.onerror({type: "error", target: xhr});\r\n				}\r\n			};\r\n			if (options.serialize === JSON.stringify && options.data && options.method !== "GET") {\r\n				xhr.setRequestHeader("Content-Type", "application/json; charset=utf-8");\r\n			}\r\n			if (options.deserialize === JSON.parse) {\r\n				xhr.setRequestHeader("Accept", "application/json, text/*");\r\n			}\r\n			if (isFunction(options.config)) {\r\n				var maybeXhr = options.config(xhr, options);\r\n				if (maybeXhr != null) xhr = maybeXhr;\r\n			}\r\n\r\n			var data = options.method === "GET" || !options.data ? "" : options.data;\r\n			if (data && (!isString(data) && data.constructor !== window.FormData)) {\r\n				throw new Error("Request data should be either be a string or FormData. Check the `serialize` option in `m.request`");\r\n			}\r\n			xhr.send(data);\r\n			return xhr;\r\n		}\r\n	}\r\n\r\n	function bindData(xhrOptions, data, serialize) {\r\n		if (xhrOptions.method === "GET" && xhrOptions.dataType !== "jsonp") {\r\n			var prefix = xhrOptions.url.indexOf("?") < 0 ? "?" : "&";\r\n			var querystring = buildQueryString(data);\r\n			xhrOptions.url = xhrOptions.url + (querystring ? prefix + querystring : "");\r\n		}\r\n		else xhrOptions.data = serialize(data);\r\n		return xhrOptions;\r\n	}\r\n\r\n	function parameterizeUrl(url, data) {\r\n		var tokens = url.match(/:[a-z]\\w+/gi);\r\n		if (tokens && data) {\r\n			forEach(tokens, function (token) {\r\n				var key = token.slice(1);\r\n				url = url.replace(token, data[key]);\r\n				delete data[key];\r\n			});\r\n		}\r\n		return url;\r\n	}\r\n\r\n	m.request = function(xhrOptions) {\r\n		if (xhrOptions.background !== true) m.startComputation();\r\n		var deferred = new Deferred();\r\n		var isJSONP = xhrOptions.dataType && xhrOptions.dataType.toLowerCase() === "jsonp"\r\n		var serialize = xhrOptions.serialize = isJSONP ? identity : xhrOptions.serialize || JSON.stringify;\r\n		var deserialize = xhrOptions.deserialize = isJSONP ? identity : xhrOptions.deserialize || JSON.parse;\r\n		var extract = isJSONP ? function(jsonp) { return jsonp.responseText } : xhrOptions.extract || function(xhr) {\r\n			if (xhr.responseText.length === 0 && deserialize === JSON.parse) {\r\n				return null\r\n			} else {\r\n				return xhr.responseText\r\n			}\r\n		};\r\n		xhrOptions.method = (xhrOptions.method || "GET").toUpperCase();\r\n		xhrOptions.url = parameterizeUrl(xhrOptions.url, xhrOptions.data);\r\n		xhrOptions = bindData(xhrOptions, xhrOptions.data, serialize);\r\n		xhrOptions.onload = xhrOptions.onerror = function(e) {\r\n			try {\r\n				e = e || event;\r\n				var unwrap = (e.type === "load" ? xhrOptions.unwrapSuccess : xhrOptions.unwrapError) || identity;\r\n				var response = unwrap(deserialize(extract(e.target, xhrOptions)), e.target);\r\n				if (e.type === "load") {\r\n					if (isArray(response) && xhrOptions.type) {\r\n						forEach(response, function (res, i) {\r\n							response[i] = new xhrOptions.type(res);\r\n						});\r\n					} else if (xhrOptions.type) {\r\n						response = new xhrOptions.type(response);\r\n					}\r\n					deferred.resolve(response)\r\n				} else {\r\n					deferred.reject(response)\r\n				}\r\n\r\n				deferred[e.type === "load" ? "resolve" : "reject"](response);\r\n			}\r\n			catch (e) {\r\n				deferred.reject(e);\r\n			}\r\n			finally {\r\n				if (xhrOptions.background !== true) m.endComputation()\r\n			}\r\n		}\r\n\r\n		ajax(xhrOptions);\r\n		deferred.promise = propify(deferred.promise, xhrOptions.initialValue);\r\n		return deferred.promise;\r\n	};\r\n\r\n	//testing API\r\n	m.deps = function(mock) {\r\n		initialize(window = mock || window);\r\n		return window;\r\n	};\r\n	//for internal testing only, do not use `m.deps.factory`\r\n	m.deps.factory = app;\r\n\r\n	return m;\r\n})(typeof window !== "undefined" ? window : {});\r\n\r\nif (typeof module === "object" && module != null && module.exports) module.exports = m;\r\nelse if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return m }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)(module)))\n//# sourceMappingURL=data:application/json;base64,');
},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  * Morpheus - A Brilliant Animator\n  * https://github.com/ded/morpheus - (c) Dustin Diaz 2011\n  * License MIT\n  */\n!function (name, definition) {\n  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else if (typeof module != 'undefined') module.exports = definition()\n  else this[name] = definition()\n}('morpheus', function () {\n\n  var doc = document\n    , win = window\n    , perf = win.performance\n    , perfNow = perf && (perf.now || perf.webkitNow || perf.msNow || perf.mozNow)\n    , now = perfNow ? function () { return perfNow.call(perf) } : function () { return +new Date() }\n    , fixTs = false // feature detected below\n    , html = doc.documentElement\n    , thousand = 1000\n    , rgbOhex = /^rgb\\(|#/\n    , relVal = /^([+\\-])=([\\d\\.]+)/\n    , numUnit = /^(?:[\\+\\-]=?)?\\d+(?:\\.\\d+)?(%|in|cm|mm|em|ex|pt|pc|px)$/\n    , rotate = /rotate\\(((?:[+\\-]=)?([\\-\\d\\.]+))deg\\)/\n    , scale = /scale\\(((?:[+\\-]=)?([\\d\\.]+))\\)/\n    , skew = /skew\\(((?:[+\\-]=)?([\\-\\d\\.]+))deg, ?((?:[+\\-]=)?([\\-\\d\\.]+))deg\\)/\n    , translate = /translate\\(((?:[+\\-]=)?([\\-\\d\\.]+))px, ?((?:[+\\-]=)?([\\-\\d\\.]+))px\\)/\n      // these elements do not require 'px'\n    , unitless = { lineHeight: 1, zoom: 1, zIndex: 1, opacity: 1, transform: 1}\n\n  // which property name does this browser use for transform\n  var transform = function () {\n    var styles = doc.createElement('a').style\n      , props = ['webkitTransform', 'MozTransform', 'OTransform', 'msTransform', 'Transform']\n      , i\n    for (i = 0; i < props.length; i++) {\n      if (props[i] in styles) return props[i]\n    }\n  }()\n\n  // does this browser support the opacity property?\n  var opasity = function () {\n    return typeof doc.createElement('a').style.opacity !== 'undefined'\n  }()\n\n  // initial style is determined by the elements themselves\n  var getStyle = doc.defaultView && doc.defaultView.getComputedStyle ?\n    function (el, property) {\n      property = property == 'transform' ? transform : property\n      property = camelize(property)\n      var value = null\n        , computed = doc.defaultView.getComputedStyle(el, '')\n      computed && (value = computed[property])\n      return el.style[property] || value\n    } : html.currentStyle ?\n\n    function (el, property) {\n      property = camelize(property)\n\n      if (property == 'opacity') {\n        var val = 100\n        try {\n          val = el.filters['DXImageTransform.Microsoft.Alpha'].opacity\n        } catch (e1) {\n          try {\n            val = el.filters('alpha').opacity\n          } catch (e2) {}\n        }\n        return val / 100\n      }\n      var value = el.currentStyle ? el.currentStyle[property] : null\n      return el.style[property] || value\n    } :\n    function (el, property) {\n      return el.style[camelize(property)]\n    }\n\n  var frame = function () {\n    // native animation frames\n    // http://webstuff.nfshost.com/anim-timing/Overview.html\n    // http://dev.chromium.org/developers/design-documents/requestanimationframe-implementation\n    return win.requestAnimationFrame  ||\n      win.webkitRequestAnimationFrame ||\n      win.mozRequestAnimationFrame    ||\n      win.msRequestAnimationFrame     ||\n      win.oRequestAnimationFrame      ||\n      function (callback) {\n        win.setTimeout(function () {\n          callback(+new Date())\n        }, 17) // when I was 17..\n      }\n  }()\n\n  frame(function(timestamp) {\n    // feature-detect if rAF and now() are of the same scale (epoch or high-res),\n    // if not, we have to do a timestamp fix on each frame\n    fixTs = timestamp > 1e12 != now() > 1e12\n  })\n\n  var children = []\n\n  function has(array, elem, i) {\n    if (Array.prototype.indexOf) return array.indexOf(elem)\n    for (i = 0; i < array.length; ++i) {\n      if (array[i] === elem) return i\n    }\n  }\n\n  function render(timestamp) {\n    var i, count = children.length\n    if (fixTs) timestamp = now()\n    for (i = count; i--;) {\n      children[i](timestamp)\n    }\n    children.length && frame(render)\n  }\n\n  function live(f) {\n    if (children.push(f) === 1) frame(render)\n  }\n\n  function die(f) {\n    var rest, index = has(children, f)\n    if (index >= 0) {\n      rest = children.slice(index + 1)\n      children.length = index\n      children = children.concat(rest)\n    }\n  }\n\n  function parseTransform(style, base) {\n    var values = {}, m\n    if (m = style.match(rotate)) values.rotate = by(m[1], base ? base.rotate : null)\n    if (m = style.match(scale)) values.scale = by(m[1], base ? base.scale : null)\n    if (m = style.match(skew)) {values.skewx = by(m[1], base ? base.skewx : null); values.skewy = by(m[3], base ? base.skewy : null)}\n    if (m = style.match(translate)) {values.translatex = by(m[1], base ? base.translatex : null); values.translatey = by(m[3], base ? base.translatey : null)}\n    return values\n  }\n\n  function formatTransform(v) {\n    var s = ''\n    if ('rotate' in v) s += 'rotate(' + v.rotate + 'deg) '\n    if ('scale' in v) s += 'scale(' + v.scale + ') '\n    if ('translatex' in v) s += 'translate(' + v.translatex + 'px,' + v.translatey + 'px) '\n    if ('skewx' in v) s += 'skew(' + v.skewx + 'deg,' + v.skewy + 'deg)'\n    return s\n  }\n\n  function rgb(r, g, b) {\n    return '#' + (1 << 24 | r << 16 | g << 8 | b).toString(16).slice(1)\n  }\n\n  // convert rgb and short hex to long hex\n  function toHex(c) {\n    var m = c.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)/)\n    return (m ? rgb(m[1], m[2], m[3]) : c)\n      .replace(/#(\\w)(\\w)(\\w)$/, '#$1$1$2$2$3$3') // short skirt to long jacket\n  }\n\n  // change font-size => fontSize etc.\n  function camelize(s) {\n    return s.replace(/-(.)/g, function (m, m1) {\n      return m1.toUpperCase()\n    })\n  }\n\n  // aren't we having it?\n  function fun(f) {\n    return typeof f == 'function'\n  }\n\n  function nativeTween(t) {\n    // default to a pleasant-to-the-eye easeOut (like native animations)\n    return Math.sin(t * Math.PI / 2)\n  }\n\n  /**\n    * Core tween method that requests each frame\n    * @param duration: time in milliseconds. defaults to 1000\n    * @param fn: tween frame callback function receiving 'position'\n    * @param done {optional}: complete callback function\n    * @param ease {optional}: easing method. defaults to easeOut\n    * @param from {optional}: integer to start from\n    * @param to {optional}: integer to end at\n    * @returns method to stop the animation\n    */\n  function tween(duration, fn, done, ease, from, to) {\n    ease = fun(ease) ? ease : morpheus.easings[ease] || nativeTween\n    var time = duration || thousand\n      , self = this\n      , diff = to - from\n      , start = now()\n      , stop = 0\n      , end = 0\n\n    function run(t) {\n      var delta = t - start\n      if (delta > time || stop) {\n        to = isFinite(to) ? to : 1\n        stop ? end && fn(to) : fn(to)\n        die(run)\n        return done && done.apply(self)\n      }\n      // if you don't specify a 'to' you can use tween as a generic delta tweener\n      // cool, eh?\n      isFinite(to) ?\n        fn((diff * ease(delta / time)) + from) :\n        fn(ease(delta / time))\n    }\n\n    live(run)\n\n    return {\n      stop: function (jump) {\n        stop = 1\n        end = jump // jump to end of animation?\n        if (!jump) done = null // remove callback if not jumping to end\n      }\n    }\n  }\n\n  /**\n    * generic bezier method for animating x|y coordinates\n    * minimum of 2 points required (start and end).\n    * first point start, last point end\n    * additional control points are optional (but why else would you use this anyway ;)\n    * @param points: array containing control points\n       [[0, 0], [100, 200], [200, 100]]\n    * @param pos: current be(tween) position represented as float  0 - 1\n    * @return [x, y]\n    */\n  function bezier(points, pos) {\n    var n = points.length, r = [], i, j\n    for (i = 0; i < n; ++i) {\n      r[i] = [points[i][0], points[i][1]]\n    }\n    for (j = 1; j < n; ++j) {\n      for (i = 0; i < n - j; ++i) {\n        r[i][0] = (1 - pos) * r[i][0] + pos * r[parseInt(i + 1, 10)][0]\n        r[i][1] = (1 - pos) * r[i][1] + pos * r[parseInt(i + 1, 10)][1]\n      }\n    }\n    return [r[0][0], r[0][1]]\n  }\n\n  // this gets you the next hex in line according to a 'position'\n  function nextColor(pos, start, finish) {\n    var r = [], i, e, from, to\n    for (i = 0; i < 6; i++) {\n      from = Math.min(15, parseInt(start.charAt(i),  16))\n      to   = Math.min(15, parseInt(finish.charAt(i), 16))\n      e = Math.floor((to - from) * pos + from)\n      e = e > 15 ? 15 : e < 0 ? 0 : e\n      r[i] = e.toString(16)\n    }\n    return '#' + r.join('')\n  }\n\n  // this retreives the frame value within a sequence\n  function getTweenVal(pos, units, begin, end, k, i, v) {\n    if (k == 'transform') {\n      v = {}\n      for (var t in begin[i][k]) {\n        v[t] = (t in end[i][k]) ? Math.round(((end[i][k][t] - begin[i][k][t]) * pos + begin[i][k][t]) * thousand) / thousand : begin[i][k][t]\n      }\n      return v\n    } else if (typeof begin[i][k] == 'string') {\n      return nextColor(pos, begin[i][k], end[i][k])\n    } else {\n      // round so we don't get crazy long floats\n      v = Math.round(((end[i][k] - begin[i][k]) * pos + begin[i][k]) * thousand) / thousand\n      // some css properties don't require a unit (like zIndex, lineHeight, opacity)\n      if (!(k in unitless)) v += units[i][k] || 'px'\n      return v\n    }\n  }\n\n  // support for relative movement via '+=n' or '-=n'\n  function by(val, start, m, r, i) {\n    return (m = relVal.exec(val)) ?\n      (i = parseFloat(m[2])) && (start + (m[1] == '+' ? 1 : -1) * i) :\n      parseFloat(val)\n  }\n\n  /**\n    * morpheus:\n    * @param element(s): HTMLElement(s)\n    * @param options: mixed bag between CSS Style properties & animation options\n    *  - {n} CSS properties|values\n    *     - value can be strings, integers,\n    *     - or callback function that receives element to be animated. method must return value to be tweened\n    *     - relative animations start with += or -= followed by integer\n    *  - duration: time in ms - defaults to 1000(ms)\n    *  - easing: a transition method - defaults to an 'easeOut' algorithm\n    *  - complete: a callback method for when all elements have finished\n    *  - bezier: array of arrays containing x|y coordinates that define the bezier points. defaults to none\n    *     - this may also be a function that receives element to be animated. it must return a value\n    */\n  function morpheus(elements, options) {\n    var els = elements ? (els = isFinite(elements.length) ? elements : [elements]) : [], i\n      , complete = options.complete\n      , duration = options.duration\n      , ease = options.easing\n      , points = options.bezier\n      , begin = []\n      , end = []\n      , units = []\n      , bez = []\n      , originalLeft\n      , originalTop\n\n    if (points) {\n      // remember the original values for top|left\n      originalLeft = options.left;\n      originalTop = options.top;\n      delete options.right;\n      delete options.bottom;\n      delete options.left;\n      delete options.top;\n    }\n\n    for (i = els.length; i--;) {\n\n      // record beginning and end states to calculate positions\n      begin[i] = {}\n      end[i] = {}\n      units[i] = {}\n\n      // are we 'moving'?\n      if (points) {\n\n        var left = getStyle(els[i], 'left')\n          , top = getStyle(els[i], 'top')\n          , xy = [by(fun(originalLeft) ? originalLeft(els[i]) : originalLeft || 0, parseFloat(left)),\n                  by(fun(originalTop) ? originalTop(els[i]) : originalTop || 0, parseFloat(top))]\n\n        bez[i] = fun(points) ? points(els[i], xy) : points\n        bez[i].push(xy)\n        bez[i].unshift([\n          parseInt(left, 10),\n          parseInt(top, 10)\n        ])\n      }\n\n      for (var k in options) {\n        switch (k) {\n        case 'complete':\n        case 'duration':\n        case 'easing':\n        case 'bezier':\n          continue\n        }\n        var v = getStyle(els[i], k), unit\n          , tmp = fun(options[k]) ? options[k](els[i]) : options[k]\n        if (typeof tmp == 'string' &&\n            rgbOhex.test(tmp) &&\n            !rgbOhex.test(v)) {\n          delete options[k]; // remove key :(\n          continue; // cannot animate colors like 'orange' or 'transparent'\n                    // only #xxx, #xxxxxx, rgb(n,n,n)\n        }\n\n        begin[i][k] = k == 'transform' ? parseTransform(v) :\n          typeof tmp == 'string' && rgbOhex.test(tmp) ?\n            toHex(v).slice(1) :\n            parseFloat(v)\n        end[i][k] = k == 'transform' ? parseTransform(tmp, begin[i][k]) :\n          typeof tmp == 'string' && tmp.charAt(0) == '#' ?\n            toHex(tmp).slice(1) :\n            by(tmp, parseFloat(v));\n        // record original unit\n        (typeof tmp == 'string') && (unit = tmp.match(numUnit)) && (units[i][k] = unit[1])\n      }\n    }\n    // ONE TWEEN TO RULE THEM ALL\n    return tween.apply(els, [duration, function (pos, v, xy) {\n      // normally not a fan of optimizing for() loops, but we want something\n      // fast for animating\n      for (i = els.length; i--;) {\n        if (points) {\n          xy = bezier(bez[i], pos)\n          els[i].style.left = xy[0] + 'px'\n          els[i].style.top = xy[1] + 'px'\n        }\n        for (var k in options) {\n          v = getTweenVal(pos, units, begin, end, k, i)\n          k == 'transform' ?\n            els[i].style[transform] = formatTransform(v) :\n            k == 'opacity' && !opasity ?\n              (els[i].style.filter = 'alpha(opacity=' + (v * 100) + ')') :\n              (els[i].style[camelize(k)] = v)\n        }\n      }\n    }, complete, ease])\n  }\n\n  // expose useful methods\n  morpheus.tween = tween\n  morpheus.getStyle = getStyle\n  morpheus.bezier = bezier\n  morpheus.transform = transform\n  morpheus.parseTransform = parseTransform\n  morpheus.formatTransform = formatTransform\n  morpheus.animationFrame = frame\n  morpheus.easings = {}\n\n  return morpheus\n\n});\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21vcnBoZXVzL21vcnBoZXVzLmpzPzc1ZjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw0QkFBNEIsZ0JBQWdCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7O0FBRWxCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQztBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLEtBQUs7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLGdDQUFnQyxrREFBa0Q7QUFDbEYscUNBQXFDLDREQUE0RDtBQUNqRztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCLG1CQUFtQixTQUFTO0FBQzVCLG1CQUFtQixTQUFTO0FBQzVCLGlCQUFpQixTQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsRUFBRTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCLEtBQUs7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIsbUJBQW1CO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsS0FBSztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxDQUFDIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gICogTW9ycGhldXMgLSBBIEJyaWxsaWFudCBBbmltYXRvclxuICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9kZWQvbW9ycGhldXMgLSAoYykgRHVzdGluIERpYXogMjAxMVxuICAqIExpY2Vuc2UgTUlUXG4gICovXG4hZnVuY3Rpb24gKG5hbWUsIGRlZmluaXRpb24pIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJykgZGVmaW5lKGRlZmluaXRpb24pXG4gIGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT0gJ3VuZGVmaW5lZCcpIG1vZHVsZS5leHBvcnRzID0gZGVmaW5pdGlvbigpXG4gIGVsc2UgdGhpc1tuYW1lXSA9IGRlZmluaXRpb24oKVxufSgnbW9ycGhldXMnLCBmdW5jdGlvbiAoKSB7XG5cbiAgdmFyIGRvYyA9IGRvY3VtZW50XG4gICAgLCB3aW4gPSB3aW5kb3dcbiAgICAsIHBlcmYgPSB3aW4ucGVyZm9ybWFuY2VcbiAgICAsIHBlcmZOb3cgPSBwZXJmICYmIChwZXJmLm5vdyB8fCBwZXJmLndlYmtpdE5vdyB8fCBwZXJmLm1zTm93IHx8IHBlcmYubW96Tm93KVxuICAgICwgbm93ID0gcGVyZk5vdyA/IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBlcmZOb3cuY2FsbChwZXJmKSB9IDogZnVuY3Rpb24gKCkgeyByZXR1cm4gK25ldyBEYXRlKCkgfVxuICAgICwgZml4VHMgPSBmYWxzZSAvLyBmZWF0dXJlIGRldGVjdGVkIGJlbG93XG4gICAgLCBodG1sID0gZG9jLmRvY3VtZW50RWxlbWVudFxuICAgICwgdGhvdXNhbmQgPSAxMDAwXG4gICAgLCByZ2JPaGV4ID0gL15yZ2JcXCh8Iy9cbiAgICAsIHJlbFZhbCA9IC9eKFsrXFwtXSk9KFtcXGRcXC5dKykvXG4gICAgLCBudW1Vbml0ID0gL14oPzpbXFwrXFwtXT0/KT9cXGQrKD86XFwuXFxkKyk/KCV8aW58Y218bW18ZW18ZXh8cHR8cGN8cHgpJC9cbiAgICAsIHJvdGF0ZSA9IC9yb3RhdGVcXCgoKD86WytcXC1dPSk/KFtcXC1cXGRcXC5dKykpZGVnXFwpL1xuICAgICwgc2NhbGUgPSAvc2NhbGVcXCgoKD86WytcXC1dPSk/KFtcXGRcXC5dKykpXFwpL1xuICAgICwgc2tldyA9IC9za2V3XFwoKCg/OlsrXFwtXT0pPyhbXFwtXFxkXFwuXSspKWRlZywgPygoPzpbK1xcLV09KT8oW1xcLVxcZFxcLl0rKSlkZWdcXCkvXG4gICAgLCB0cmFuc2xhdGUgPSAvdHJhbnNsYXRlXFwoKCg/OlsrXFwtXT0pPyhbXFwtXFxkXFwuXSspKXB4LCA/KCg/OlsrXFwtXT0pPyhbXFwtXFxkXFwuXSspKXB4XFwpL1xuICAgICAgLy8gdGhlc2UgZWxlbWVudHMgZG8gbm90IHJlcXVpcmUgJ3B4J1xuICAgICwgdW5pdGxlc3MgPSB7IGxpbmVIZWlnaHQ6IDEsIHpvb206IDEsIHpJbmRleDogMSwgb3BhY2l0eTogMSwgdHJhbnNmb3JtOiAxfVxuXG4gIC8vIHdoaWNoIHByb3BlcnR5IG5hbWUgZG9lcyB0aGlzIGJyb3dzZXIgdXNlIGZvciB0cmFuc2Zvcm1cbiAgdmFyIHRyYW5zZm9ybSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc3R5bGVzID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2EnKS5zdHlsZVxuICAgICAgLCBwcm9wcyA9IFsnd2Via2l0VHJhbnNmb3JtJywgJ01velRyYW5zZm9ybScsICdPVHJhbnNmb3JtJywgJ21zVHJhbnNmb3JtJywgJ1RyYW5zZm9ybSddXG4gICAgICAsIGlcbiAgICBmb3IgKGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChwcm9wc1tpXSBpbiBzdHlsZXMpIHJldHVybiBwcm9wc1tpXVxuICAgIH1cbiAgfSgpXG5cbiAgLy8gZG9lcyB0aGlzIGJyb3dzZXIgc3VwcG9ydCB0aGUgb3BhY2l0eSBwcm9wZXJ0eT9cbiAgdmFyIG9wYXNpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBkb2MuY3JlYXRlRWxlbWVudCgnYScpLnN0eWxlLm9wYWNpdHkgIT09ICd1bmRlZmluZWQnXG4gIH0oKVxuXG4gIC8vIGluaXRpYWwgc3R5bGUgaXMgZGV0ZXJtaW5lZCBieSB0aGUgZWxlbWVudHMgdGhlbXNlbHZlc1xuICB2YXIgZ2V0U3R5bGUgPSBkb2MuZGVmYXVsdFZpZXcgJiYgZG9jLmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUgP1xuICAgIGZ1bmN0aW9uIChlbCwgcHJvcGVydHkpIHtcbiAgICAgIHByb3BlcnR5ID0gcHJvcGVydHkgPT0gJ3RyYW5zZm9ybScgPyB0cmFuc2Zvcm0gOiBwcm9wZXJ0eVxuICAgICAgcHJvcGVydHkgPSBjYW1lbGl6ZShwcm9wZXJ0eSlcbiAgICAgIHZhciB2YWx1ZSA9IG51bGxcbiAgICAgICAgLCBjb21wdXRlZCA9IGRvYy5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKGVsLCAnJylcbiAgICAgIGNvbXB1dGVkICYmICh2YWx1ZSA9IGNvbXB1dGVkW3Byb3BlcnR5XSlcbiAgICAgIHJldHVybiBlbC5zdHlsZVtwcm9wZXJ0eV0gfHwgdmFsdWVcbiAgICB9IDogaHRtbC5jdXJyZW50U3R5bGUgP1xuXG4gICAgZnVuY3Rpb24gKGVsLCBwcm9wZXJ0eSkge1xuICAgICAgcHJvcGVydHkgPSBjYW1lbGl6ZShwcm9wZXJ0eSlcblxuICAgICAgaWYgKHByb3BlcnR5ID09ICdvcGFjaXR5Jykge1xuICAgICAgICB2YXIgdmFsID0gMTAwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdmFsID0gZWwuZmlsdGVyc1snRFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEnXS5vcGFjaXR5XG4gICAgICAgIH0gY2F0Y2ggKGUxKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhbCA9IGVsLmZpbHRlcnMoJ2FscGhhJykub3BhY2l0eVxuICAgICAgICAgIH0gY2F0Y2ggKGUyKSB7fVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWwgLyAxMDBcbiAgICAgIH1cbiAgICAgIHZhciB2YWx1ZSA9IGVsLmN1cnJlbnRTdHlsZSA/IGVsLmN1cnJlbnRTdHlsZVtwcm9wZXJ0eV0gOiBudWxsXG4gICAgICByZXR1cm4gZWwuc3R5bGVbcHJvcGVydHldIHx8IHZhbHVlXG4gICAgfSA6XG4gICAgZnVuY3Rpb24gKGVsLCBwcm9wZXJ0eSkge1xuICAgICAgcmV0dXJuIGVsLnN0eWxlW2NhbWVsaXplKHByb3BlcnR5KV1cbiAgICB9XG5cbiAgdmFyIGZyYW1lID0gZnVuY3Rpb24gKCkge1xuICAgIC8vIG5hdGl2ZSBhbmltYXRpb24gZnJhbWVzXG4gICAgLy8gaHR0cDovL3dlYnN0dWZmLm5mc2hvc3QuY29tL2FuaW0tdGltaW5nL092ZXJ2aWV3Lmh0bWxcbiAgICAvLyBodHRwOi8vZGV2LmNocm9taXVtLm9yZy9kZXZlbG9wZXJzL2Rlc2lnbi1kb2N1bWVudHMvcmVxdWVzdGFuaW1hdGlvbmZyYW1lLWltcGxlbWVudGF0aW9uXG4gICAgcmV0dXJuIHdpbi5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgIHx8XG4gICAgICB3aW4ud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICB3aW4ubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lICAgIHx8XG4gICAgICB3aW4ubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgICAgIHx8XG4gICAgICB3aW4ub1JlcXVlc3RBbmltYXRpb25GcmFtZSAgICAgIHx8XG4gICAgICBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgd2luLnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGNhbGxiYWNrKCtuZXcgRGF0ZSgpKVxuICAgICAgICB9LCAxNykgLy8gd2hlbiBJIHdhcyAxNy4uXG4gICAgICB9XG4gIH0oKVxuXG4gIGZyYW1lKGZ1bmN0aW9uKHRpbWVzdGFtcCkge1xuICAgIC8vIGZlYXR1cmUtZGV0ZWN0IGlmIHJBRiBhbmQgbm93KCkgYXJlIG9mIHRoZSBzYW1lIHNjYWxlIChlcG9jaCBvciBoaWdoLXJlcyksXG4gICAgLy8gaWYgbm90LCB3ZSBoYXZlIHRvIGRvIGEgdGltZXN0YW1wIGZpeCBvbiBlYWNoIGZyYW1lXG4gICAgZml4VHMgPSB0aW1lc3RhbXAgPiAxZTEyICE9IG5vdygpID4gMWUxMlxuICB9KVxuXG4gIHZhciBjaGlsZHJlbiA9IFtdXG5cbiAgZnVuY3Rpb24gaGFzKGFycmF5LCBlbGVtLCBpKSB7XG4gICAgaWYgKEFycmF5LnByb3RvdHlwZS5pbmRleE9mKSByZXR1cm4gYXJyYXkuaW5kZXhPZihlbGVtKVxuICAgIGZvciAoaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7ICsraSkge1xuICAgICAgaWYgKGFycmF5W2ldID09PSBlbGVtKSByZXR1cm4gaVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbmRlcih0aW1lc3RhbXApIHtcbiAgICB2YXIgaSwgY291bnQgPSBjaGlsZHJlbi5sZW5ndGhcbiAgICBpZiAoZml4VHMpIHRpbWVzdGFtcCA9IG5vdygpXG4gICAgZm9yIChpID0gY291bnQ7IGktLTspIHtcbiAgICAgIGNoaWxkcmVuW2ldKHRpbWVzdGFtcClcbiAgICB9XG4gICAgY2hpbGRyZW4ubGVuZ3RoICYmIGZyYW1lKHJlbmRlcilcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpdmUoZikge1xuICAgIGlmIChjaGlsZHJlbi5wdXNoKGYpID09PSAxKSBmcmFtZShyZW5kZXIpXG4gIH1cblxuICBmdW5jdGlvbiBkaWUoZikge1xuICAgIHZhciByZXN0LCBpbmRleCA9IGhhcyhjaGlsZHJlbiwgZilcbiAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgcmVzdCA9IGNoaWxkcmVuLnNsaWNlKGluZGV4ICsgMSlcbiAgICAgIGNoaWxkcmVuLmxlbmd0aCA9IGluZGV4XG4gICAgICBjaGlsZHJlbiA9IGNoaWxkcmVuLmNvbmNhdChyZXN0KVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlVHJhbnNmb3JtKHN0eWxlLCBiYXNlKSB7XG4gICAgdmFyIHZhbHVlcyA9IHt9LCBtXG4gICAgaWYgKG0gPSBzdHlsZS5tYXRjaChyb3RhdGUpKSB2YWx1ZXMucm90YXRlID0gYnkobVsxXSwgYmFzZSA/IGJhc2Uucm90YXRlIDogbnVsbClcbiAgICBpZiAobSA9IHN0eWxlLm1hdGNoKHNjYWxlKSkgdmFsdWVzLnNjYWxlID0gYnkobVsxXSwgYmFzZSA/IGJhc2Uuc2NhbGUgOiBudWxsKVxuICAgIGlmIChtID0gc3R5bGUubWF0Y2goc2tldykpIHt2YWx1ZXMuc2tld3ggPSBieShtWzFdLCBiYXNlID8gYmFzZS5za2V3eCA6IG51bGwpOyB2YWx1ZXMuc2tld3kgPSBieShtWzNdLCBiYXNlID8gYmFzZS5za2V3eSA6IG51bGwpfVxuICAgIGlmIChtID0gc3R5bGUubWF0Y2godHJhbnNsYXRlKSkge3ZhbHVlcy50cmFuc2xhdGV4ID0gYnkobVsxXSwgYmFzZSA/IGJhc2UudHJhbnNsYXRleCA6IG51bGwpOyB2YWx1ZXMudHJhbnNsYXRleSA9IGJ5KG1bM10sIGJhc2UgPyBiYXNlLnRyYW5zbGF0ZXkgOiBudWxsKX1cbiAgICByZXR1cm4gdmFsdWVzXG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRUcmFuc2Zvcm0odikge1xuICAgIHZhciBzID0gJydcbiAgICBpZiAoJ3JvdGF0ZScgaW4gdikgcyArPSAncm90YXRlKCcgKyB2LnJvdGF0ZSArICdkZWcpICdcbiAgICBpZiAoJ3NjYWxlJyBpbiB2KSBzICs9ICdzY2FsZSgnICsgdi5zY2FsZSArICcpICdcbiAgICBpZiAoJ3RyYW5zbGF0ZXgnIGluIHYpIHMgKz0gJ3RyYW5zbGF0ZSgnICsgdi50cmFuc2xhdGV4ICsgJ3B4LCcgKyB2LnRyYW5zbGF0ZXkgKyAncHgpICdcbiAgICBpZiAoJ3NrZXd4JyBpbiB2KSBzICs9ICdza2V3KCcgKyB2LnNrZXd4ICsgJ2RlZywnICsgdi5za2V3eSArICdkZWcpJ1xuICAgIHJldHVybiBzXG4gIH1cblxuICBmdW5jdGlvbiByZ2IociwgZywgYikge1xuICAgIHJldHVybiAnIycgKyAoMSA8PCAyNCB8IHIgPDwgMTYgfCBnIDw8IDggfCBiKS50b1N0cmluZygxNikuc2xpY2UoMSlcbiAgfVxuXG4gIC8vIGNvbnZlcnQgcmdiIGFuZCBzaG9ydCBoZXggdG8gbG9uZyBoZXhcbiAgZnVuY3Rpb24gdG9IZXgoYykge1xuICAgIHZhciBtID0gYy5tYXRjaCgvcmdiYT9cXCgoXFxkKyksXFxzKihcXGQrKSxcXHMqKFxcZCspLylcbiAgICByZXR1cm4gKG0gPyByZ2IobVsxXSwgbVsyXSwgbVszXSkgOiBjKVxuICAgICAgLnJlcGxhY2UoLyMoXFx3KShcXHcpKFxcdykkLywgJyMkMSQxJDIkMiQzJDMnKSAvLyBzaG9ydCBza2lydCB0byBsb25nIGphY2tldFxuICB9XG5cbiAgLy8gY2hhbmdlIGZvbnQtc2l6ZSA9PiBmb250U2l6ZSBldGMuXG4gIGZ1bmN0aW9uIGNhbWVsaXplKHMpIHtcbiAgICByZXR1cm4gcy5yZXBsYWNlKC8tKC4pL2csIGZ1bmN0aW9uIChtLCBtMSkge1xuICAgICAgcmV0dXJuIG0xLnRvVXBwZXJDYXNlKClcbiAgICB9KVxuICB9XG5cbiAgLy8gYXJlbid0IHdlIGhhdmluZyBpdD9cbiAgZnVuY3Rpb24gZnVuKGYpIHtcbiAgICByZXR1cm4gdHlwZW9mIGYgPT0gJ2Z1bmN0aW9uJ1xuICB9XG5cbiAgZnVuY3Rpb24gbmF0aXZlVHdlZW4odCkge1xuICAgIC8vIGRlZmF1bHQgdG8gYSBwbGVhc2FudC10by10aGUtZXllIGVhc2VPdXQgKGxpa2UgbmF0aXZlIGFuaW1hdGlvbnMpXG4gICAgcmV0dXJuIE1hdGguc2luKHQgKiBNYXRoLlBJIC8gMilcbiAgfVxuXG4gIC8qKlxuICAgICogQ29yZSB0d2VlbiBtZXRob2QgdGhhdCByZXF1ZXN0cyBlYWNoIGZyYW1lXG4gICAgKiBAcGFyYW0gZHVyYXRpb246IHRpbWUgaW4gbWlsbGlzZWNvbmRzLiBkZWZhdWx0cyB0byAxMDAwXG4gICAgKiBAcGFyYW0gZm46IHR3ZWVuIGZyYW1lIGNhbGxiYWNrIGZ1bmN0aW9uIHJlY2VpdmluZyAncG9zaXRpb24nXG4gICAgKiBAcGFyYW0gZG9uZSB7b3B0aW9uYWx9OiBjb21wbGV0ZSBjYWxsYmFjayBmdW5jdGlvblxuICAgICogQHBhcmFtIGVhc2Uge29wdGlvbmFsfTogZWFzaW5nIG1ldGhvZC4gZGVmYXVsdHMgdG8gZWFzZU91dFxuICAgICogQHBhcmFtIGZyb20ge29wdGlvbmFsfTogaW50ZWdlciB0byBzdGFydCBmcm9tXG4gICAgKiBAcGFyYW0gdG8ge29wdGlvbmFsfTogaW50ZWdlciB0byBlbmQgYXRcbiAgICAqIEByZXR1cm5zIG1ldGhvZCB0byBzdG9wIHRoZSBhbmltYXRpb25cbiAgICAqL1xuICBmdW5jdGlvbiB0d2VlbihkdXJhdGlvbiwgZm4sIGRvbmUsIGVhc2UsIGZyb20sIHRvKSB7XG4gICAgZWFzZSA9IGZ1bihlYXNlKSA/IGVhc2UgOiBtb3JwaGV1cy5lYXNpbmdzW2Vhc2VdIHx8IG5hdGl2ZVR3ZWVuXG4gICAgdmFyIHRpbWUgPSBkdXJhdGlvbiB8fCB0aG91c2FuZFxuICAgICAgLCBzZWxmID0gdGhpc1xuICAgICAgLCBkaWZmID0gdG8gLSBmcm9tXG4gICAgICAsIHN0YXJ0ID0gbm93KClcbiAgICAgICwgc3RvcCA9IDBcbiAgICAgICwgZW5kID0gMFxuXG4gICAgZnVuY3Rpb24gcnVuKHQpIHtcbiAgICAgIHZhciBkZWx0YSA9IHQgLSBzdGFydFxuICAgICAgaWYgKGRlbHRhID4gdGltZSB8fCBzdG9wKSB7XG4gICAgICAgIHRvID0gaXNGaW5pdGUodG8pID8gdG8gOiAxXG4gICAgICAgIHN0b3AgPyBlbmQgJiYgZm4odG8pIDogZm4odG8pXG4gICAgICAgIGRpZShydW4pXG4gICAgICAgIHJldHVybiBkb25lICYmIGRvbmUuYXBwbHkoc2VsZilcbiAgICAgIH1cbiAgICAgIC8vIGlmIHlvdSBkb24ndCBzcGVjaWZ5IGEgJ3RvJyB5b3UgY2FuIHVzZSB0d2VlbiBhcyBhIGdlbmVyaWMgZGVsdGEgdHdlZW5lclxuICAgICAgLy8gY29vbCwgZWg/XG4gICAgICBpc0Zpbml0ZSh0bykgP1xuICAgICAgICBmbigoZGlmZiAqIGVhc2UoZGVsdGEgLyB0aW1lKSkgKyBmcm9tKSA6XG4gICAgICAgIGZuKGVhc2UoZGVsdGEgLyB0aW1lKSlcbiAgICB9XG5cbiAgICBsaXZlKHJ1bilcblxuICAgIHJldHVybiB7XG4gICAgICBzdG9wOiBmdW5jdGlvbiAoanVtcCkge1xuICAgICAgICBzdG9wID0gMVxuICAgICAgICBlbmQgPSBqdW1wIC8vIGp1bXAgdG8gZW5kIG9mIGFuaW1hdGlvbj9cbiAgICAgICAgaWYgKCFqdW1wKSBkb25lID0gbnVsbCAvLyByZW1vdmUgY2FsbGJhY2sgaWYgbm90IGp1bXBpbmcgdG8gZW5kXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAgKiBnZW5lcmljIGJlemllciBtZXRob2QgZm9yIGFuaW1hdGluZyB4fHkgY29vcmRpbmF0ZXNcbiAgICAqIG1pbmltdW0gb2YgMiBwb2ludHMgcmVxdWlyZWQgKHN0YXJ0IGFuZCBlbmQpLlxuICAgICogZmlyc3QgcG9pbnQgc3RhcnQsIGxhc3QgcG9pbnQgZW5kXG4gICAgKiBhZGRpdGlvbmFsIGNvbnRyb2wgcG9pbnRzIGFyZSBvcHRpb25hbCAoYnV0IHdoeSBlbHNlIHdvdWxkIHlvdSB1c2UgdGhpcyBhbnl3YXkgOylcbiAgICAqIEBwYXJhbSBwb2ludHM6IGFycmF5IGNvbnRhaW5pbmcgY29udHJvbCBwb2ludHNcbiAgICAgICBbWzAsIDBdLCBbMTAwLCAyMDBdLCBbMjAwLCAxMDBdXVxuICAgICogQHBhcmFtIHBvczogY3VycmVudCBiZSh0d2VlbikgcG9zaXRpb24gcmVwcmVzZW50ZWQgYXMgZmxvYXQgIDAgLSAxXG4gICAgKiBAcmV0dXJuIFt4LCB5XVxuICAgICovXG4gIGZ1bmN0aW9uIGJlemllcihwb2ludHMsIHBvcykge1xuICAgIHZhciBuID0gcG9pbnRzLmxlbmd0aCwgciA9IFtdLCBpLCBqXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgcltpXSA9IFtwb2ludHNbaV1bMF0sIHBvaW50c1tpXVsxXV1cbiAgICB9XG4gICAgZm9yIChqID0gMTsgaiA8IG47ICsraikge1xuICAgICAgZm9yIChpID0gMDsgaSA8IG4gLSBqOyArK2kpIHtcbiAgICAgICAgcltpXVswXSA9ICgxIC0gcG9zKSAqIHJbaV1bMF0gKyBwb3MgKiByW3BhcnNlSW50KGkgKyAxLCAxMCldWzBdXG4gICAgICAgIHJbaV1bMV0gPSAoMSAtIHBvcykgKiByW2ldWzFdICsgcG9zICogcltwYXJzZUludChpICsgMSwgMTApXVsxXVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gW3JbMF1bMF0sIHJbMF1bMV1dXG4gIH1cblxuICAvLyB0aGlzIGdldHMgeW91IHRoZSBuZXh0IGhleCBpbiBsaW5lIGFjY29yZGluZyB0byBhICdwb3NpdGlvbidcbiAgZnVuY3Rpb24gbmV4dENvbG9yKHBvcywgc3RhcnQsIGZpbmlzaCkge1xuICAgIHZhciByID0gW10sIGksIGUsIGZyb20sIHRvXG4gICAgZm9yIChpID0gMDsgaSA8IDY7IGkrKykge1xuICAgICAgZnJvbSA9IE1hdGgubWluKDE1LCBwYXJzZUludChzdGFydC5jaGFyQXQoaSksICAxNikpXG4gICAgICB0byAgID0gTWF0aC5taW4oMTUsIHBhcnNlSW50KGZpbmlzaC5jaGFyQXQoaSksIDE2KSlcbiAgICAgIGUgPSBNYXRoLmZsb29yKCh0byAtIGZyb20pICogcG9zICsgZnJvbSlcbiAgICAgIGUgPSBlID4gMTUgPyAxNSA6IGUgPCAwID8gMCA6IGVcbiAgICAgIHJbaV0gPSBlLnRvU3RyaW5nKDE2KVxuICAgIH1cbiAgICByZXR1cm4gJyMnICsgci5qb2luKCcnKVxuICB9XG5cbiAgLy8gdGhpcyByZXRyZWl2ZXMgdGhlIGZyYW1lIHZhbHVlIHdpdGhpbiBhIHNlcXVlbmNlXG4gIGZ1bmN0aW9uIGdldFR3ZWVuVmFsKHBvcywgdW5pdHMsIGJlZ2luLCBlbmQsIGssIGksIHYpIHtcbiAgICBpZiAoayA9PSAndHJhbnNmb3JtJykge1xuICAgICAgdiA9IHt9XG4gICAgICBmb3IgKHZhciB0IGluIGJlZ2luW2ldW2tdKSB7XG4gICAgICAgIHZbdF0gPSAodCBpbiBlbmRbaV1ba10pID8gTWF0aC5yb3VuZCgoKGVuZFtpXVtrXVt0XSAtIGJlZ2luW2ldW2tdW3RdKSAqIHBvcyArIGJlZ2luW2ldW2tdW3RdKSAqIHRob3VzYW5kKSAvIHRob3VzYW5kIDogYmVnaW5baV1ba11bdF1cbiAgICAgIH1cbiAgICAgIHJldHVybiB2XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgYmVnaW5baV1ba10gPT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBuZXh0Q29sb3IocG9zLCBiZWdpbltpXVtrXSwgZW5kW2ldW2tdKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyByb3VuZCBzbyB3ZSBkb24ndCBnZXQgY3JhenkgbG9uZyBmbG9hdHNcbiAgICAgIHYgPSBNYXRoLnJvdW5kKCgoZW5kW2ldW2tdIC0gYmVnaW5baV1ba10pICogcG9zICsgYmVnaW5baV1ba10pICogdGhvdXNhbmQpIC8gdGhvdXNhbmRcbiAgICAgIC8vIHNvbWUgY3NzIHByb3BlcnRpZXMgZG9uJ3QgcmVxdWlyZSBhIHVuaXQgKGxpa2UgekluZGV4LCBsaW5lSGVpZ2h0LCBvcGFjaXR5KVxuICAgICAgaWYgKCEoayBpbiB1bml0bGVzcykpIHYgKz0gdW5pdHNbaV1ba10gfHwgJ3B4J1xuICAgICAgcmV0dXJuIHZcbiAgICB9XG4gIH1cblxuICAvLyBzdXBwb3J0IGZvciByZWxhdGl2ZSBtb3ZlbWVudCB2aWEgJys9bicgb3IgJy09bidcbiAgZnVuY3Rpb24gYnkodmFsLCBzdGFydCwgbSwgciwgaSkge1xuICAgIHJldHVybiAobSA9IHJlbFZhbC5leGVjKHZhbCkpID9cbiAgICAgIChpID0gcGFyc2VGbG9hdChtWzJdKSkgJiYgKHN0YXJ0ICsgKG1bMV0gPT0gJysnID8gMSA6IC0xKSAqIGkpIDpcbiAgICAgIHBhcnNlRmxvYXQodmFsKVxuICB9XG5cbiAgLyoqXG4gICAgKiBtb3JwaGV1czpcbiAgICAqIEBwYXJhbSBlbGVtZW50KHMpOiBIVE1MRWxlbWVudChzKVxuICAgICogQHBhcmFtIG9wdGlvbnM6IG1peGVkIGJhZyBiZXR3ZWVuIENTUyBTdHlsZSBwcm9wZXJ0aWVzICYgYW5pbWF0aW9uIG9wdGlvbnNcbiAgICAqICAtIHtufSBDU1MgcHJvcGVydGllc3x2YWx1ZXNcbiAgICAqICAgICAtIHZhbHVlIGNhbiBiZSBzdHJpbmdzLCBpbnRlZ2VycyxcbiAgICAqICAgICAtIG9yIGNhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgcmVjZWl2ZXMgZWxlbWVudCB0byBiZSBhbmltYXRlZC4gbWV0aG9kIG11c3QgcmV0dXJuIHZhbHVlIHRvIGJlIHR3ZWVuZWRcbiAgICAqICAgICAtIHJlbGF0aXZlIGFuaW1hdGlvbnMgc3RhcnQgd2l0aCArPSBvciAtPSBmb2xsb3dlZCBieSBpbnRlZ2VyXG4gICAgKiAgLSBkdXJhdGlvbjogdGltZSBpbiBtcyAtIGRlZmF1bHRzIHRvIDEwMDAobXMpXG4gICAgKiAgLSBlYXNpbmc6IGEgdHJhbnNpdGlvbiBtZXRob2QgLSBkZWZhdWx0cyB0byBhbiAnZWFzZU91dCcgYWxnb3JpdGhtXG4gICAgKiAgLSBjb21wbGV0ZTogYSBjYWxsYmFjayBtZXRob2QgZm9yIHdoZW4gYWxsIGVsZW1lbnRzIGhhdmUgZmluaXNoZWRcbiAgICAqICAtIGJlemllcjogYXJyYXkgb2YgYXJyYXlzIGNvbnRhaW5pbmcgeHx5IGNvb3JkaW5hdGVzIHRoYXQgZGVmaW5lIHRoZSBiZXppZXIgcG9pbnRzLiBkZWZhdWx0cyB0byBub25lXG4gICAgKiAgICAgLSB0aGlzIG1heSBhbHNvIGJlIGEgZnVuY3Rpb24gdGhhdCByZWNlaXZlcyBlbGVtZW50IHRvIGJlIGFuaW1hdGVkLiBpdCBtdXN0IHJldHVybiBhIHZhbHVlXG4gICAgKi9cbiAgZnVuY3Rpb24gbW9ycGhldXMoZWxlbWVudHMsIG9wdGlvbnMpIHtcbiAgICB2YXIgZWxzID0gZWxlbWVudHMgPyAoZWxzID0gaXNGaW5pdGUoZWxlbWVudHMubGVuZ3RoKSA/IGVsZW1lbnRzIDogW2VsZW1lbnRzXSkgOiBbXSwgaVxuICAgICAgLCBjb21wbGV0ZSA9IG9wdGlvbnMuY29tcGxldGVcbiAgICAgICwgZHVyYXRpb24gPSBvcHRpb25zLmR1cmF0aW9uXG4gICAgICAsIGVhc2UgPSBvcHRpb25zLmVhc2luZ1xuICAgICAgLCBwb2ludHMgPSBvcHRpb25zLmJlemllclxuICAgICAgLCBiZWdpbiA9IFtdXG4gICAgICAsIGVuZCA9IFtdXG4gICAgICAsIHVuaXRzID0gW11cbiAgICAgICwgYmV6ID0gW11cbiAgICAgICwgb3JpZ2luYWxMZWZ0XG4gICAgICAsIG9yaWdpbmFsVG9wXG5cbiAgICBpZiAocG9pbnRzKSB7XG4gICAgICAvLyByZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzIGZvciB0b3B8bGVmdFxuICAgICAgb3JpZ2luYWxMZWZ0ID0gb3B0aW9ucy5sZWZ0O1xuICAgICAgb3JpZ2luYWxUb3AgPSBvcHRpb25zLnRvcDtcbiAgICAgIGRlbGV0ZSBvcHRpb25zLnJpZ2h0O1xuICAgICAgZGVsZXRlIG9wdGlvbnMuYm90dG9tO1xuICAgICAgZGVsZXRlIG9wdGlvbnMubGVmdDtcbiAgICAgIGRlbGV0ZSBvcHRpb25zLnRvcDtcbiAgICB9XG5cbiAgICBmb3IgKGkgPSBlbHMubGVuZ3RoOyBpLS07KSB7XG5cbiAgICAgIC8vIHJlY29yZCBiZWdpbm5pbmcgYW5kIGVuZCBzdGF0ZXMgdG8gY2FsY3VsYXRlIHBvc2l0aW9uc1xuICAgICAgYmVnaW5baV0gPSB7fVxuICAgICAgZW5kW2ldID0ge31cbiAgICAgIHVuaXRzW2ldID0ge31cblxuICAgICAgLy8gYXJlIHdlICdtb3ZpbmcnP1xuICAgICAgaWYgKHBvaW50cykge1xuXG4gICAgICAgIHZhciBsZWZ0ID0gZ2V0U3R5bGUoZWxzW2ldLCAnbGVmdCcpXG4gICAgICAgICAgLCB0b3AgPSBnZXRTdHlsZShlbHNbaV0sICd0b3AnKVxuICAgICAgICAgICwgeHkgPSBbYnkoZnVuKG9yaWdpbmFsTGVmdCkgPyBvcmlnaW5hbExlZnQoZWxzW2ldKSA6IG9yaWdpbmFsTGVmdCB8fCAwLCBwYXJzZUZsb2F0KGxlZnQpKSxcbiAgICAgICAgICAgICAgICAgIGJ5KGZ1bihvcmlnaW5hbFRvcCkgPyBvcmlnaW5hbFRvcChlbHNbaV0pIDogb3JpZ2luYWxUb3AgfHwgMCwgcGFyc2VGbG9hdCh0b3ApKV1cblxuICAgICAgICBiZXpbaV0gPSBmdW4ocG9pbnRzKSA/IHBvaW50cyhlbHNbaV0sIHh5KSA6IHBvaW50c1xuICAgICAgICBiZXpbaV0ucHVzaCh4eSlcbiAgICAgICAgYmV6W2ldLnVuc2hpZnQoW1xuICAgICAgICAgIHBhcnNlSW50KGxlZnQsIDEwKSxcbiAgICAgICAgICBwYXJzZUludCh0b3AsIDEwKVxuICAgICAgICBdKVxuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBrIGluIG9wdGlvbnMpIHtcbiAgICAgICAgc3dpdGNoIChrKSB7XG4gICAgICAgIGNhc2UgJ2NvbXBsZXRlJzpcbiAgICAgICAgY2FzZSAnZHVyYXRpb24nOlxuICAgICAgICBjYXNlICdlYXNpbmcnOlxuICAgICAgICBjYXNlICdiZXppZXInOlxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cbiAgICAgICAgdmFyIHYgPSBnZXRTdHlsZShlbHNbaV0sIGspLCB1bml0XG4gICAgICAgICAgLCB0bXAgPSBmdW4ob3B0aW9uc1trXSkgPyBvcHRpb25zW2tdKGVsc1tpXSkgOiBvcHRpb25zW2tdXG4gICAgICAgIGlmICh0eXBlb2YgdG1wID09ICdzdHJpbmcnICYmXG4gICAgICAgICAgICByZ2JPaGV4LnRlc3QodG1wKSAmJlxuICAgICAgICAgICAgIXJnYk9oZXgudGVzdCh2KSkge1xuICAgICAgICAgIGRlbGV0ZSBvcHRpb25zW2tdOyAvLyByZW1vdmUga2V5IDooXG4gICAgICAgICAgY29udGludWU7IC8vIGNhbm5vdCBhbmltYXRlIGNvbG9ycyBsaWtlICdvcmFuZ2UnIG9yICd0cmFuc3BhcmVudCdcbiAgICAgICAgICAgICAgICAgICAgLy8gb25seSAjeHh4LCAjeHh4eHh4LCByZ2IobixuLG4pXG4gICAgICAgIH1cblxuICAgICAgICBiZWdpbltpXVtrXSA9IGsgPT0gJ3RyYW5zZm9ybScgPyBwYXJzZVRyYW5zZm9ybSh2KSA6XG4gICAgICAgICAgdHlwZW9mIHRtcCA9PSAnc3RyaW5nJyAmJiByZ2JPaGV4LnRlc3QodG1wKSA/XG4gICAgICAgICAgICB0b0hleCh2KS5zbGljZSgxKSA6XG4gICAgICAgICAgICBwYXJzZUZsb2F0KHYpXG4gICAgICAgIGVuZFtpXVtrXSA9IGsgPT0gJ3RyYW5zZm9ybScgPyBwYXJzZVRyYW5zZm9ybSh0bXAsIGJlZ2luW2ldW2tdKSA6XG4gICAgICAgICAgdHlwZW9mIHRtcCA9PSAnc3RyaW5nJyAmJiB0bXAuY2hhckF0KDApID09ICcjJyA/XG4gICAgICAgICAgICB0b0hleCh0bXApLnNsaWNlKDEpIDpcbiAgICAgICAgICAgIGJ5KHRtcCwgcGFyc2VGbG9hdCh2KSk7XG4gICAgICAgIC8vIHJlY29yZCBvcmlnaW5hbCB1bml0XG4gICAgICAgICh0eXBlb2YgdG1wID09ICdzdHJpbmcnKSAmJiAodW5pdCA9IHRtcC5tYXRjaChudW1Vbml0KSkgJiYgKHVuaXRzW2ldW2tdID0gdW5pdFsxXSlcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gT05FIFRXRUVOIFRPIFJVTEUgVEhFTSBBTExcbiAgICByZXR1cm4gdHdlZW4uYXBwbHkoZWxzLCBbZHVyYXRpb24sIGZ1bmN0aW9uIChwb3MsIHYsIHh5KSB7XG4gICAgICAvLyBub3JtYWxseSBub3QgYSBmYW4gb2Ygb3B0aW1pemluZyBmb3IoKSBsb29wcywgYnV0IHdlIHdhbnQgc29tZXRoaW5nXG4gICAgICAvLyBmYXN0IGZvciBhbmltYXRpbmdcbiAgICAgIGZvciAoaSA9IGVscy5sZW5ndGg7IGktLTspIHtcbiAgICAgICAgaWYgKHBvaW50cykge1xuICAgICAgICAgIHh5ID0gYmV6aWVyKGJleltpXSwgcG9zKVxuICAgICAgICAgIGVsc1tpXS5zdHlsZS5sZWZ0ID0geHlbMF0gKyAncHgnXG4gICAgICAgICAgZWxzW2ldLnN0eWxlLnRvcCA9IHh5WzFdICsgJ3B4J1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGsgaW4gb3B0aW9ucykge1xuICAgICAgICAgIHYgPSBnZXRUd2VlblZhbChwb3MsIHVuaXRzLCBiZWdpbiwgZW5kLCBrLCBpKVxuICAgICAgICAgIGsgPT0gJ3RyYW5zZm9ybScgP1xuICAgICAgICAgICAgZWxzW2ldLnN0eWxlW3RyYW5zZm9ybV0gPSBmb3JtYXRUcmFuc2Zvcm0odikgOlxuICAgICAgICAgICAgayA9PSAnb3BhY2l0eScgJiYgIW9wYXNpdHkgP1xuICAgICAgICAgICAgICAoZWxzW2ldLnN0eWxlLmZpbHRlciA9ICdhbHBoYShvcGFjaXR5PScgKyAodiAqIDEwMCkgKyAnKScpIDpcbiAgICAgICAgICAgICAgKGVsc1tpXS5zdHlsZVtjYW1lbGl6ZShrKV0gPSB2KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgY29tcGxldGUsIGVhc2VdKVxuICB9XG5cbiAgLy8gZXhwb3NlIHVzZWZ1bCBtZXRob2RzXG4gIG1vcnBoZXVzLnR3ZWVuID0gdHdlZW5cbiAgbW9ycGhldXMuZ2V0U3R5bGUgPSBnZXRTdHlsZVxuICBtb3JwaGV1cy5iZXppZXIgPSBiZXppZXJcbiAgbW9ycGhldXMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4gIG1vcnBoZXVzLnBhcnNlVHJhbnNmb3JtID0gcGFyc2VUcmFuc2Zvcm1cbiAgbW9ycGhldXMuZm9ybWF0VHJhbnNmb3JtID0gZm9ybWF0VHJhbnNmb3JtXG4gIG1vcnBoZXVzLmFuaW1hdGlvbkZyYW1lID0gZnJhbWVcbiAgbW9ycGhldXMuZWFzaW5ncyA9IHt9XG5cbiAgcmV0dXJuIG1vcnBoZXVzXG5cbn0pO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vbW9ycGhldXMvbW9ycGhldXMuanNcbiAqKiBtb2R1bGUgaWQgPSAyMVxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");
},function(module,exports,__webpack_require__){eval("'use strict';\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n//# sourceMappingURL=data:application/json;base64,")},function(module,exports){eval('"use strict";\n\nmodule.exports = function (store, definition) {\n    for (var name in definition) {\n        if (Object.getOwnPropertyDescriptor && Object.defineProperty) {\n            var propertyDescriptor = Object.getOwnPropertyDescriptor(definition, name);\n\n            if (!propertyDescriptor.value || typeof propertyDescriptor.value !== "function" || !definition.hasOwnProperty(name)) {\n                continue;\n            }\n\n            store[name] = definition[name].bind(store);\n        } else {\n            var property = definition[name];\n\n            if (typeof property !== "function" || !definition.hasOwnProperty(name)) {\n                continue;\n            }\n\n            store[name] = property.bind(store);\n        }\n    }\n\n    return store;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9iaW5kTWV0aG9kcy5qcz9jOTFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RvcmUsIGRlZmluaXRpb24pIHtcbiAgICBmb3IgKHZhciBuYW1lIGluIGRlZmluaXRpb24pIHtcbiAgICAgICAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7XG4gICAgICAgICAgICB2YXIgcHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihkZWZpbml0aW9uLCBuYW1lKTtcblxuICAgICAgICAgICAgaWYgKCFwcm9wZXJ0eURlc2NyaXB0b3IudmFsdWUgfHwgdHlwZW9mIHByb3BlcnR5RGVzY3JpcHRvci52YWx1ZSAhPT0gXCJmdW5jdGlvblwiIHx8ICFkZWZpbml0aW9uLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN0b3JlW25hbWVdID0gZGVmaW5pdGlvbltuYW1lXS5iaW5kKHN0b3JlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBwcm9wZXJ0eSA9IGRlZmluaXRpb25bbmFtZV07XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcGVydHkgIT09IFwiZnVuY3Rpb25cIiB8fCAhZGVmaW5pdGlvbi5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdG9yZVtuYW1lXSA9IHByb3BlcnR5LmJpbmQoc3RvcmUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0b3JlO1xufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWZsdXgvfi9yZWZsdXgtY29yZS9saWIvYmluZE1ldGhvZHMuanNcbiAqKiBtb2R1bGUgaWQgPSAyM1xuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar _ = __webpack_require__(2),\n    ActionMethods = __webpack_require__(9),\n    PublisherMethods = __webpack_require__(5),\n    Keep = __webpack_require__(4);\n\nvar allowed = { preEmit: 1, shouldEmit: 1 };\n\n/**\n * Creates an action functor object. It is mixed in with functions\n * from the `PublisherMethods` mixin. `preEmit` and `shouldEmit` may\n * be overridden in the definition object.\n *\n * @param {Object} definition The action object definition\n */\nvar createAction = function createAction(definition) {\n\n    definition = definition || {};\n    if (!_.isObject(definition)) {\n        definition = { actionName: definition };\n    }\n\n    for (var a in ActionMethods) {\n        if (!allowed[a] && PublisherMethods[a]) {\n            throw new Error("Cannot override API method " + a + " in Reflux.ActionMethods. Use another method name or override it on Reflux.PublisherMethods instead.");\n        }\n    }\n\n    for (var d in definition) {\n        if (!allowed[d] && PublisherMethods[d]) {\n            throw new Error("Cannot override API method " + d + " in action creation. Use another method name or override it on Reflux.PublisherMethods instead.");\n        }\n    }\n\n    definition.children = definition.children || [];\n    if (definition.asyncResult) {\n        definition.children = definition.children.concat(["completed", "failed"]);\n    }\n\n    var i = 0,\n        childActions = {};\n    for (; i < definition.children.length; i++) {\n        var name = definition.children[i];\n        childActions[name] = createAction(name);\n    }\n\n    var context = _.extend({\n        eventLabel: "action",\n        emitter: new _.EventEmitter(),\n        _isAction: true\n    }, PublisherMethods, ActionMethods, definition);\n\n    var functor = function functor() {\n        var triggerType = functor.sync ? "trigger" : _.environment.hasPromise ? "triggerPromise" : "triggerAsync";\n        return functor[triggerType].apply(functor, arguments);\n    };\n\n    _.extend(functor, childActions, context);\n\n    Keep.createdActions.push(functor);\n\n    return functor;\n};\n\nmodule.exports = createAction;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9jcmVhdGVBY3Rpb24uanM/MzExOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlOztBQUVmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVSxnQ0FBZ0M7QUFDMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfID0gcmVxdWlyZShcIi4vdXRpbHNcIiksXG4gICAgQWN0aW9uTWV0aG9kcyA9IHJlcXVpcmUoXCIuL0FjdGlvbk1ldGhvZHNcIiksXG4gICAgUHVibGlzaGVyTWV0aG9kcyA9IHJlcXVpcmUoXCIuL1B1Ymxpc2hlck1ldGhvZHNcIiksXG4gICAgS2VlcCA9IHJlcXVpcmUoXCIuL0tlZXBcIik7XG5cbnZhciBhbGxvd2VkID0geyBwcmVFbWl0OiAxLCBzaG91bGRFbWl0OiAxIH07XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhY3Rpb24gZnVuY3RvciBvYmplY3QuIEl0IGlzIG1peGVkIGluIHdpdGggZnVuY3Rpb25zXG4gKiBmcm9tIHRoZSBgUHVibGlzaGVyTWV0aG9kc2AgbWl4aW4uIGBwcmVFbWl0YCBhbmQgYHNob3VsZEVtaXRgIG1heVxuICogYmUgb3ZlcnJpZGRlbiBpbiB0aGUgZGVmaW5pdGlvbiBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmluaXRpb24gVGhlIGFjdGlvbiBvYmplY3QgZGVmaW5pdGlvblxuICovXG52YXIgY3JlYXRlQWN0aW9uID0gZnVuY3Rpb24gY3JlYXRlQWN0aW9uKGRlZmluaXRpb24pIHtcblxuICAgIGRlZmluaXRpb24gPSBkZWZpbml0aW9uIHx8IHt9O1xuICAgIGlmICghXy5pc09iamVjdChkZWZpbml0aW9uKSkge1xuICAgICAgICBkZWZpbml0aW9uID0geyBhY3Rpb25OYW1lOiBkZWZpbml0aW9uIH07XG4gICAgfVxuXG4gICAgZm9yICh2YXIgYSBpbiBBY3Rpb25NZXRob2RzKSB7XG4gICAgICAgIGlmICghYWxsb3dlZFthXSAmJiBQdWJsaXNoZXJNZXRob2RzW2FdKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgb3ZlcnJpZGUgQVBJIG1ldGhvZCBcIiArIGEgKyBcIiBpbiBSZWZsdXguQWN0aW9uTWV0aG9kcy4gVXNlIGFub3RoZXIgbWV0aG9kIG5hbWUgb3Igb3ZlcnJpZGUgaXQgb24gUmVmbHV4LlB1Ymxpc2hlck1ldGhvZHMgaW5zdGVhZC5cIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBkIGluIGRlZmluaXRpb24pIHtcbiAgICAgICAgaWYgKCFhbGxvd2VkW2RdICYmIFB1Ymxpc2hlck1ldGhvZHNbZF0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBvdmVycmlkZSBBUEkgbWV0aG9kIFwiICsgZCArIFwiIGluIGFjdGlvbiBjcmVhdGlvbi4gVXNlIGFub3RoZXIgbWV0aG9kIG5hbWUgb3Igb3ZlcnJpZGUgaXQgb24gUmVmbHV4LlB1Ymxpc2hlck1ldGhvZHMgaW5zdGVhZC5cIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkZWZpbml0aW9uLmNoaWxkcmVuID0gZGVmaW5pdGlvbi5jaGlsZHJlbiB8fCBbXTtcbiAgICBpZiAoZGVmaW5pdGlvbi5hc3luY1Jlc3VsdCkge1xuICAgICAgICBkZWZpbml0aW9uLmNoaWxkcmVuID0gZGVmaW5pdGlvbi5jaGlsZHJlbi5jb25jYXQoW1wiY29tcGxldGVkXCIsIFwiZmFpbGVkXCJdKTtcbiAgICB9XG5cbiAgICB2YXIgaSA9IDAsXG4gICAgICAgIGNoaWxkQWN0aW9ucyA9IHt9O1xuICAgIGZvciAoOyBpIDwgZGVmaW5pdGlvbi5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgbmFtZSA9IGRlZmluaXRpb24uY2hpbGRyZW5baV07XG4gICAgICAgIGNoaWxkQWN0aW9uc1tuYW1lXSA9IGNyZWF0ZUFjdGlvbihuYW1lKTtcbiAgICB9XG5cbiAgICB2YXIgY29udGV4dCA9IF8uZXh0ZW5kKHtcbiAgICAgICAgZXZlbnRMYWJlbDogXCJhY3Rpb25cIixcbiAgICAgICAgZW1pdHRlcjogbmV3IF8uRXZlbnRFbWl0dGVyKCksXG4gICAgICAgIF9pc0FjdGlvbjogdHJ1ZVxuICAgIH0sIFB1Ymxpc2hlck1ldGhvZHMsIEFjdGlvbk1ldGhvZHMsIGRlZmluaXRpb24pO1xuXG4gICAgdmFyIGZ1bmN0b3IgPSBmdW5jdGlvbiBmdW5jdG9yKCkge1xuICAgICAgICB2YXIgdHJpZ2dlclR5cGUgPSBmdW5jdG9yLnN5bmMgPyBcInRyaWdnZXJcIiA6IF8uZW52aXJvbm1lbnQuaGFzUHJvbWlzZSA/IFwidHJpZ2dlclByb21pc2VcIiA6IFwidHJpZ2dlckFzeW5jXCI7XG4gICAgICAgIHJldHVybiBmdW5jdG9yW3RyaWdnZXJUeXBlXS5hcHBseShmdW5jdG9yLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICBfLmV4dGVuZChmdW5jdG9yLCBjaGlsZEFjdGlvbnMsIGNvbnRleHQpO1xuXG4gICAgS2VlcC5jcmVhdGVkQWN0aW9ucy5wdXNoKGZ1bmN0b3IpO1xuXG4gICAgcmV0dXJuIGZ1bmN0b3I7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUFjdGlvbjtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWZsdXgvfi9yZWZsdXgtY29yZS9saWIvY3JlYXRlQWN0aW9uLmpzXG4gKiogbW9kdWxlIGlkID0gMjRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval('"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nvar Reflux = {\n    version: {\n        "reflux-core": "0.2.1"\n    }\n};\n\nReflux.ActionMethods = __webpack_require__(9);\n\nReflux.ListenerMethods = __webpack_require__(3);\n\nReflux.PublisherMethods = __webpack_require__(5);\n\nReflux.StoreMethods = __webpack_require__(10);\n\nReflux.createAction = __webpack_require__(24);\n\nReflux.createStore = __webpack_require__(11);\n\nvar maker = __webpack_require__(12).staticJoinCreator;\n\nReflux.joinTrailing = Reflux.all = maker("last"); // Reflux.all alias for backward compatibility\n\nReflux.joinLeading = maker("first");\n\nReflux.joinStrict = maker("strict");\n\nReflux.joinConcat = maker("all");\n\nvar _ = Reflux.utils = __webpack_require__(2);\n\nReflux.EventEmitter = _.EventEmitter;\n\nReflux.Promise = _.Promise;\n\n/**\n * Convenience function for creating a set of actions\n *\n * @param definitions the definitions for the actions to be created\n * @returns an object with actions of corresponding action names\n */\nReflux.createActions = (function () {\n    var reducer = function reducer(definitions, actions) {\n        Object.keys(definitions).forEach(function (actionName) {\n            var val = definitions[actionName];\n            actions[actionName] = Reflux.createAction(val);\n        });\n    };\n\n    return function (definitions) {\n        var actions = {};\n        if (definitions instanceof Array) {\n            definitions.forEach(function (val) {\n                if (_.isObject(val)) {\n                    reducer(val, actions);\n                } else {\n                    actions[val] = Reflux.createAction(val);\n                }\n            });\n        } else {\n            reducer(definitions, actions);\n        }\n        return actions;\n    };\n})();\n\n/**\n * Sets the eventmitter that Reflux uses\n */\nReflux.setEventEmitter = function (ctx) {\n    Reflux.EventEmitter = _.EventEmitter = ctx;\n};\n\n/**\n * Sets the Promise library that Reflux uses\n */\nReflux.setPromise = function (ctx) {\n    Reflux.Promise = _.Promise = ctx;\n};\n\n/**\n * Sets the Promise factory that creates new promises\n * @param {Function} factory has the signature `function(resolver) { return [new Promise]; }`\n */\nReflux.setPromiseFactory = function (factory) {\n    _.createPromise = factory;\n};\n\n/**\n * Sets the method used for deferring actions and stores\n */\nReflux.nextTick = function (nextTick) {\n    _.nextTick = nextTick;\n};\n\nReflux.use = function (pluginCb) {\n    pluginCb(Reflux);\n};\n\n/**\n * Provides the set of created actions and stores for introspection\n */\n/*eslint-disable no-underscore-dangle*/\nReflux.__keep = __webpack_require__(4);\n/*eslint-enable no-underscore-dangle*/\n\n/**\n * Warn if Function.prototype.bind not available\n */\nif (!Function.prototype.bind) {\n    console.error("Function.prototype.bind not available. " + "ES5 shim required. " + "https://github.com/spoike/refluxjs#es5");\n}\n\nexports["default"] = Reflux;\nmodule.exports = exports["default"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9pbmRleC5qcz84YzQwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxpREFBaUQ7O0FBRWpEOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFNBQVMsZ0RBQWdELHNCQUFzQixFQUFFO0FBQzVGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbnZhciBSZWZsdXggPSB7XG4gICAgdmVyc2lvbjoge1xuICAgICAgICBcInJlZmx1eC1jb3JlXCI6IFwiMC4yLjFcIlxuICAgIH1cbn07XG5cblJlZmx1eC5BY3Rpb25NZXRob2RzID0gcmVxdWlyZShcIi4vQWN0aW9uTWV0aG9kc1wiKTtcblxuUmVmbHV4Lkxpc3RlbmVyTWV0aG9kcyA9IHJlcXVpcmUoXCIuL0xpc3RlbmVyTWV0aG9kc1wiKTtcblxuUmVmbHV4LlB1Ymxpc2hlck1ldGhvZHMgPSByZXF1aXJlKFwiLi9QdWJsaXNoZXJNZXRob2RzXCIpO1xuXG5SZWZsdXguU3RvcmVNZXRob2RzID0gcmVxdWlyZShcIi4vU3RvcmVNZXRob2RzXCIpO1xuXG5SZWZsdXguY3JlYXRlQWN0aW9uID0gcmVxdWlyZShcIi4vY3JlYXRlQWN0aW9uXCIpO1xuXG5SZWZsdXguY3JlYXRlU3RvcmUgPSByZXF1aXJlKFwiLi9jcmVhdGVTdG9yZVwiKTtcblxudmFyIG1ha2VyID0gcmVxdWlyZShcIi4vam9pbnNcIikuc3RhdGljSm9pbkNyZWF0b3I7XG5cblJlZmx1eC5qb2luVHJhaWxpbmcgPSBSZWZsdXguYWxsID0gbWFrZXIoXCJsYXN0XCIpOyAvLyBSZWZsdXguYWxsIGFsaWFzIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5cblJlZmx1eC5qb2luTGVhZGluZyA9IG1ha2VyKFwiZmlyc3RcIik7XG5cblJlZmx1eC5qb2luU3RyaWN0ID0gbWFrZXIoXCJzdHJpY3RcIik7XG5cblJlZmx1eC5qb2luQ29uY2F0ID0gbWFrZXIoXCJhbGxcIik7XG5cbnZhciBfID0gUmVmbHV4LnV0aWxzID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5cblJlZmx1eC5FdmVudEVtaXR0ZXIgPSBfLkV2ZW50RW1pdHRlcjtcblxuUmVmbHV4LlByb21pc2UgPSBfLlByb21pc2U7XG5cbi8qKlxuICogQ29udmVuaWVuY2UgZnVuY3Rpb24gZm9yIGNyZWF0aW5nIGEgc2V0IG9mIGFjdGlvbnNcbiAqXG4gKiBAcGFyYW0gZGVmaW5pdGlvbnMgdGhlIGRlZmluaXRpb25zIGZvciB0aGUgYWN0aW9ucyB0byBiZSBjcmVhdGVkXG4gKiBAcmV0dXJucyBhbiBvYmplY3Qgd2l0aCBhY3Rpb25zIG9mIGNvcnJlc3BvbmRpbmcgYWN0aW9uIG5hbWVzXG4gKi9cblJlZmx1eC5jcmVhdGVBY3Rpb25zID0gKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVkdWNlciA9IGZ1bmN0aW9uIHJlZHVjZXIoZGVmaW5pdGlvbnMsIGFjdGlvbnMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMoZGVmaW5pdGlvbnMpLmZvckVhY2goZnVuY3Rpb24gKGFjdGlvbk5hbWUpIHtcbiAgICAgICAgICAgIHZhciB2YWwgPSBkZWZpbml0aW9uc1thY3Rpb25OYW1lXTtcbiAgICAgICAgICAgIGFjdGlvbnNbYWN0aW9uTmFtZV0gPSBSZWZsdXguY3JlYXRlQWN0aW9uKHZhbCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKGRlZmluaXRpb25zKSB7XG4gICAgICAgIHZhciBhY3Rpb25zID0ge307XG4gICAgICAgIGlmIChkZWZpbml0aW9ucyBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICBkZWZpbml0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgICAgICBpZiAoXy5pc09iamVjdCh2YWwpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlZHVjZXIodmFsLCBhY3Rpb25zKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb25zW3ZhbF0gPSBSZWZsdXguY3JlYXRlQWN0aW9uKHZhbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWR1Y2VyKGRlZmluaXRpb25zLCBhY3Rpb25zKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWN0aW9ucztcbiAgICB9O1xufSkoKTtcblxuLyoqXG4gKiBTZXRzIHRoZSBldmVudG1pdHRlciB0aGF0IFJlZmx1eCB1c2VzXG4gKi9cblJlZmx1eC5zZXRFdmVudEVtaXR0ZXIgPSBmdW5jdGlvbiAoY3R4KSB7XG4gICAgUmVmbHV4LkV2ZW50RW1pdHRlciA9IF8uRXZlbnRFbWl0dGVyID0gY3R4O1xufTtcblxuLyoqXG4gKiBTZXRzIHRoZSBQcm9taXNlIGxpYnJhcnkgdGhhdCBSZWZsdXggdXNlc1xuICovXG5SZWZsdXguc2V0UHJvbWlzZSA9IGZ1bmN0aW9uIChjdHgpIHtcbiAgICBSZWZsdXguUHJvbWlzZSA9IF8uUHJvbWlzZSA9IGN0eDtcbn07XG5cbi8qKlxuICogU2V0cyB0aGUgUHJvbWlzZSBmYWN0b3J5IHRoYXQgY3JlYXRlcyBuZXcgcHJvbWlzZXNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZhY3RvcnkgaGFzIHRoZSBzaWduYXR1cmUgYGZ1bmN0aW9uKHJlc29sdmVyKSB7IHJldHVybiBbbmV3IFByb21pc2VdOyB9YFxuICovXG5SZWZsdXguc2V0UHJvbWlzZUZhY3RvcnkgPSBmdW5jdGlvbiAoZmFjdG9yeSkge1xuICAgIF8uY3JlYXRlUHJvbWlzZSA9IGZhY3Rvcnk7XG59O1xuXG4vKipcbiAqIFNldHMgdGhlIG1ldGhvZCB1c2VkIGZvciBkZWZlcnJpbmcgYWN0aW9ucyBhbmQgc3RvcmVzXG4gKi9cblJlZmx1eC5uZXh0VGljayA9IGZ1bmN0aW9uIChuZXh0VGljaykge1xuICAgIF8ubmV4dFRpY2sgPSBuZXh0VGljaztcbn07XG5cblJlZmx1eC51c2UgPSBmdW5jdGlvbiAocGx1Z2luQ2IpIHtcbiAgICBwbHVnaW5DYihSZWZsdXgpO1xufTtcblxuLyoqXG4gKiBQcm92aWRlcyB0aGUgc2V0IG9mIGNyZWF0ZWQgYWN0aW9ucyBhbmQgc3RvcmVzIGZvciBpbnRyb3NwZWN0aW9uXG4gKi9cbi8qZXNsaW50LWRpc2FibGUgbm8tdW5kZXJzY29yZS1kYW5nbGUqL1xuUmVmbHV4Ll9fa2VlcCA9IHJlcXVpcmUoXCIuL0tlZXBcIik7XG4vKmVzbGludC1lbmFibGUgbm8tdW5kZXJzY29yZS1kYW5nbGUqL1xuXG4vKipcbiAqIFdhcm4gaWYgRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgbm90IGF2YWlsYWJsZVxuICovXG5pZiAoIUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kIG5vdCBhdmFpbGFibGUuIFwiICsgXCJFUzUgc2hpbSByZXF1aXJlZC4gXCIgKyBcImh0dHBzOi8vZ2l0aHViLmNvbS9zcG9pa2UvcmVmbHV4anMjZXM1XCIpO1xufVxuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IFJlZmx1eDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcmVmbHV4L34vcmVmbHV4LWNvcmUvbGliL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMjVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=');
},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = function mix(def) {\n    var composed = {\n        init: [],\n        preEmit: [],\n        shouldEmit: []\n    };\n\n    var updated = (function mixDef(mixin) {\n        var mixed = {};\n        if (mixin.mixins) {\n            mixin.mixins.forEach(function (subMixin) {\n                _.extend(mixed, mixDef(subMixin));\n            });\n        }\n        _.extend(mixed, mixin);\n        Object.keys(composed).forEach(function (composable) {\n            if (mixin.hasOwnProperty(composable)) {\n                composed[composable].push(mixin[composable]);\n            }\n        });\n        return mixed;\n    })(def);\n\n    if (composed.init.length > 1) {\n        updated.init = function () {\n            var args = arguments;\n            composed.init.forEach(function (init) {\n                init.apply(this, args);\n            }, this);\n        };\n    }\n    if (composed.preEmit.length > 1) {\n        updated.preEmit = function () {\n            return composed.preEmit.reduce((function (args, preEmit) {\n                var newValue = preEmit.apply(this, args);\n                return newValue === undefined ? args : [newValue];\n            }).bind(this), arguments);\n        };\n    }\n    if (composed.shouldEmit.length > 1) {\n        updated.shouldEmit = function () {\n            var args = arguments;\n            return !composed.shouldEmit.some(function (shouldEmit) {\n                return !shouldEmit.apply(this, args);\n            }, this);\n        };\n    }\n    Object.keys(composed).forEach(function (composable) {\n        if (composed[composable].length === 1) {\n            updated[composable] = composed[composable][0];\n        }\n    });\n\n    return updated;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9+L3JlZmx1eC1jb3JlL2xpYi9taXhlci5qcz85NTI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EiLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF8gPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtaXgoZGVmKSB7XG4gICAgdmFyIGNvbXBvc2VkID0ge1xuICAgICAgICBpbml0OiBbXSxcbiAgICAgICAgcHJlRW1pdDogW10sXG4gICAgICAgIHNob3VsZEVtaXQ6IFtdXG4gICAgfTtcblxuICAgIHZhciB1cGRhdGVkID0gKGZ1bmN0aW9uIG1peERlZihtaXhpbikge1xuICAgICAgICB2YXIgbWl4ZWQgPSB7fTtcbiAgICAgICAgaWYgKG1peGluLm1peGlucykge1xuICAgICAgICAgICAgbWl4aW4ubWl4aW5zLmZvckVhY2goZnVuY3Rpb24gKHN1Yk1peGluKSB7XG4gICAgICAgICAgICAgICAgXy5leHRlbmQobWl4ZWQsIG1peERlZihzdWJNaXhpbikpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgXy5leHRlbmQobWl4ZWQsIG1peGluKTtcbiAgICAgICAgT2JqZWN0LmtleXMoY29tcG9zZWQpLmZvckVhY2goZnVuY3Rpb24gKGNvbXBvc2FibGUpIHtcbiAgICAgICAgICAgIGlmIChtaXhpbi5oYXNPd25Qcm9wZXJ0eShjb21wb3NhYmxlKSkge1xuICAgICAgICAgICAgICAgIGNvbXBvc2VkW2NvbXBvc2FibGVdLnB1c2gobWl4aW5bY29tcG9zYWJsZV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1peGVkO1xuICAgIH0pKGRlZik7XG5cbiAgICBpZiAoY29tcG9zZWQuaW5pdC5sZW5ndGggPiAxKSB7XG4gICAgICAgIHVwZGF0ZWQuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgY29tcG9zZWQuaW5pdC5mb3JFYWNoKGZ1bmN0aW9uIChpbml0KSB7XG4gICAgICAgICAgICAgICAgaW5pdC5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgICAgIH0sIHRoaXMpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoY29tcG9zZWQucHJlRW1pdC5sZW5ndGggPiAxKSB7XG4gICAgICAgIHVwZGF0ZWQucHJlRW1pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBjb21wb3NlZC5wcmVFbWl0LnJlZHVjZSgoZnVuY3Rpb24gKGFyZ3MsIHByZUVtaXQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmV3VmFsdWUgPSBwcmVFbWl0LmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkID8gYXJncyA6IFtuZXdWYWx1ZV07XG4gICAgICAgICAgICB9KS5iaW5kKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoY29tcG9zZWQuc2hvdWxkRW1pdC5sZW5ndGggPiAxKSB7XG4gICAgICAgIHVwZGF0ZWQuc2hvdWxkRW1pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgcmV0dXJuICFjb21wb3NlZC5zaG91bGRFbWl0LnNvbWUoZnVuY3Rpb24gKHNob3VsZEVtaXQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gIXNob3VsZEVtaXQuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgT2JqZWN0LmtleXMoY29tcG9zZWQpLmZvckVhY2goZnVuY3Rpb24gKGNvbXBvc2FibGUpIHtcbiAgICAgICAgaWYgKGNvbXBvc2VkW2NvbXBvc2FibGVdLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgdXBkYXRlZFtjb21wb3NhYmxlXSA9IGNvbXBvc2VkW2NvbXBvc2FibGVdWzBdO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdXBkYXRlZDtcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcmVmbHV4L34vcmVmbHV4LWNvcmUvbGliL21peGVyLmpzXG4gKiogbW9kdWxlIGlkID0gMjZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval('var ListenerMethods = __webpack_require__(3),\n    ListenerMixin = __webpack_require__(6),\n    _ = __webpack_require__(2);\n\nmodule.exports = function(listenable,key){\n    return {\n        getInitialState: function(){\n            if (!_.isFunction(listenable.getInitialState)) {\n                return {};\n            } else if (key === undefined) {\n                return listenable.getInitialState();\n            } else {\n                return _.object([key],[listenable.getInitialState()]);\n            }\n        },\n        componentDidMount: function(){\n            _.extend(this,ListenerMethods);\n            var me = this, cb = (key === undefined ? this.setState : function(v){\n                if (typeof me.isMounted === "undefined" || me.isMounted() === true) {\n                    me.setState(_.object([key],[v]));\n                }\n            });\n            this.listenTo(listenable,cb);\n        },\n        componentWillUnmount: ListenerMixin.componentWillUnmount\n    };\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9zcmMvY29ubmVjdC5qcz8xNGEwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsImZpbGUiOiIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBMaXN0ZW5lck1ldGhvZHMgPSByZXF1aXJlKCdyZWZsdXgtY29yZS9saWIvTGlzdGVuZXJNZXRob2RzJyksXG4gICAgTGlzdGVuZXJNaXhpbiA9IHJlcXVpcmUoJy4vTGlzdGVuZXJNaXhpbicpLFxuICAgIF8gPSByZXF1aXJlKCdyZWZsdXgtY29yZS9saWIvdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0ZW5hYmxlLGtleSl7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpe1xuICAgICAgICAgICAgaWYgKCFfLmlzRnVuY3Rpb24obGlzdGVuYWJsZS5nZXRJbml0aWFsU3RhdGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsaXN0ZW5hYmxlLmdldEluaXRpYWxTdGF0ZSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXy5vYmplY3QoW2tleV0sW2xpc3RlbmFibGUuZ2V0SW5pdGlhbFN0YXRlKCldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgY29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBfLmV4dGVuZCh0aGlzLExpc3RlbmVyTWV0aG9kcyk7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzLCBjYiA9IChrZXkgPT09IHVuZGVmaW5lZCA/IHRoaXMuc2V0U3RhdGUgOiBmdW5jdGlvbih2KXtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lLmlzTW91bnRlZCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBtZS5pc01vdW50ZWQoKSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICBtZS5zZXRTdGF0ZShfLm9iamVjdChba2V5XSxbdl0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMubGlzdGVuVG8obGlzdGVuYWJsZSxjYik7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbXBvbmVudFdpbGxVbm1vdW50OiBMaXN0ZW5lck1peGluLmNvbXBvbmVudFdpbGxVbm1vdW50XG4gICAgfTtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWZsdXgvc3JjL2Nvbm5lY3QuanNcbiAqKiBtb2R1bGUgaWQgPSAyN1xuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval('var ListenerMethods = __webpack_require__(3),\n    ListenerMixin = __webpack_require__(6),\n    _ = __webpack_require__(2);\n\nmodule.exports = function(listenable, key, filterFunc) {\n    filterFunc = _.isFunction(key) ? key : filterFunc;\n    return {\n        getInitialState: function() {\n            if (!_.isFunction(listenable.getInitialState)) {\n                return {};\n            } else if (_.isFunction(key)) {\n                return filterFunc.call(this, listenable.getInitialState());\n            } else {\n                // Filter initial payload from store.\n                var result = filterFunc.call(this, listenable.getInitialState());\n                if (typeof(result) !== "undefined") {\n                    return _.object([key], [result]);\n                } else {\n                    return {};\n                }\n            }\n        },\n        componentDidMount: function() {\n            _.extend(this, ListenerMethods);\n            var me = this;\n            var cb = function(value) {\n                if (_.isFunction(key)) {\n                    me.setState(filterFunc.call(me, value));\n                } else {\n                    var result = filterFunc.call(me, value);\n                    me.setState(_.object([key], [result]));\n                }\n            };\n\n            this.listenTo(listenable, cb);\n        },\n        componentWillUnmount: ListenerMixin.componentWillUnmount\n    };\n};\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9zcmMvY29ubmVjdEZpbHRlci5qcz84YjgyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTGlzdGVuZXJNZXRob2RzID0gcmVxdWlyZSgncmVmbHV4LWNvcmUvbGliL0xpc3RlbmVyTWV0aG9kcycpLFxuICAgIExpc3RlbmVyTWl4aW4gPSByZXF1aXJlKCcuL0xpc3RlbmVyTWl4aW4nKSxcbiAgICBfID0gcmVxdWlyZSgncmVmbHV4LWNvcmUvbGliL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdGVuYWJsZSwga2V5LCBmaWx0ZXJGdW5jKSB7XG4gICAgZmlsdGVyRnVuYyA9IF8uaXNGdW5jdGlvbihrZXkpID8ga2V5IDogZmlsdGVyRnVuYztcbiAgICByZXR1cm4ge1xuICAgICAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKCFfLmlzRnVuY3Rpb24obGlzdGVuYWJsZS5nZXRJbml0aWFsU3RhdGUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICAgICAgfSBlbHNlIGlmIChfLmlzRnVuY3Rpb24oa2V5KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmaWx0ZXJGdW5jLmNhbGwodGhpcywgbGlzdGVuYWJsZS5nZXRJbml0aWFsU3RhdGUoKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEZpbHRlciBpbml0aWFsIHBheWxvYWQgZnJvbSBzdG9yZS5cbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gZmlsdGVyRnVuYy5jYWxsKHRoaXMsIGxpc3RlbmFibGUuZ2V0SW5pdGlhbFN0YXRlKCkpO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YocmVzdWx0KSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXy5vYmplY3QoW2tleV0sIFtyZXN1bHRdKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBfLmV4dGVuZCh0aGlzLCBMaXN0ZW5lck1ldGhvZHMpO1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgIHZhciBjYiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKF8uaXNGdW5jdGlvbihrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLnNldFN0YXRlKGZpbHRlckZ1bmMuY2FsbChtZSwgdmFsdWUpKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gZmlsdGVyRnVuYy5jYWxsKG1lLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIG1lLnNldFN0YXRlKF8ub2JqZWN0KFtrZXldLCBbcmVzdWx0XSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMubGlzdGVuVG8obGlzdGVuYWJsZSwgY2IpO1xuICAgICAgICB9LFxuICAgICAgICBjb21wb25lbnRXaWxsVW5tb3VudDogTGlzdGVuZXJNaXhpbi5jb21wb25lbnRXaWxsVW5tb3VudFxuICAgIH07XG59O1xuXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWZsdXgvc3JjL2Nvbm5lY3RGaWx0ZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAyOFxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval('var ListenerMethods = __webpack_require__(3);\n\n/**\n * A mixin factory for a React component. Meant as a more convenient way of using the `ListenerMixin`,\n * without having to manually set listeners in the `componentDidMount` method.\n *\n * @param {Action|Store} listenable An Action or Store that should be\n *  listened to.\n * @param {Function|String} callback The callback to register as event handler\n * @param {Function|String} defaultCallback The callback to register as default handler\n * @returns {Object} An object to be used as a mixin, which sets up the listener for the given listenable.\n */\nmodule.exports = function(listenable,callback,initial){\n    return {\n        /**\n         * Set up the mixin before the initial rendering occurs. Import methods from `ListenerMethods`\n         * and then make the call to `listenTo` with the arguments provided to the factory function\n         */\n        componentDidMount: function() {\n            for(var m in ListenerMethods){\n                if (this[m] !== ListenerMethods[m]){\n                    if (this[m]){\n                        throw "Can\'t have other property \'"+m+"\' when using Reflux.listenTo!";\n                    }\n                    this[m] = ListenerMethods[m];\n                }\n            }\n            this.listenTo(listenable,callback,initial);\n        },\n        /**\n         * Cleans up all listener previously registered.\n         */\n        componentWillUnmount: ListenerMethods.stopListeningToAll\n    };\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9zcmMvbGlzdGVuVG8uanM/N2FjNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QjtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBMaXN0ZW5lck1ldGhvZHMgPSByZXF1aXJlKCdyZWZsdXgtY29yZS9saWIvTGlzdGVuZXJNZXRob2RzJyk7XG5cbi8qKlxuICogQSBtaXhpbiBmYWN0b3J5IGZvciBhIFJlYWN0IGNvbXBvbmVudC4gTWVhbnQgYXMgYSBtb3JlIGNvbnZlbmllbnQgd2F5IG9mIHVzaW5nIHRoZSBgTGlzdGVuZXJNaXhpbmAsXG4gKiB3aXRob3V0IGhhdmluZyB0byBtYW51YWxseSBzZXQgbGlzdGVuZXJzIGluIHRoZSBgY29tcG9uZW50RGlkTW91bnRgIG1ldGhvZC5cbiAqXG4gKiBAcGFyYW0ge0FjdGlvbnxTdG9yZX0gbGlzdGVuYWJsZSBBbiBBY3Rpb24gb3IgU3RvcmUgdGhhdCBzaG91bGQgYmVcbiAqICBsaXN0ZW5lZCB0by5cbiAqIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBjYWxsYmFjayBUaGUgY2FsbGJhY2sgdG8gcmVnaXN0ZXIgYXMgZXZlbnQgaGFuZGxlclxuICogQHBhcmFtIHtGdW5jdGlvbnxTdHJpbmd9IGRlZmF1bHRDYWxsYmFjayBUaGUgY2FsbGJhY2sgdG8gcmVnaXN0ZXIgYXMgZGVmYXVsdCBoYW5kbGVyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBBbiBvYmplY3QgdG8gYmUgdXNlZCBhcyBhIG1peGluLCB3aGljaCBzZXRzIHVwIHRoZSBsaXN0ZW5lciBmb3IgdGhlIGdpdmVuIGxpc3RlbmFibGUuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdGVuYWJsZSxjYWxsYmFjayxpbml0aWFsKXtcbiAgICByZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogU2V0IHVwIHRoZSBtaXhpbiBiZWZvcmUgdGhlIGluaXRpYWwgcmVuZGVyaW5nIG9jY3Vycy4gSW1wb3J0IG1ldGhvZHMgZnJvbSBgTGlzdGVuZXJNZXRob2RzYFxuICAgICAgICAgKiBhbmQgdGhlbiBtYWtlIHRoZSBjYWxsIHRvIGBsaXN0ZW5Ub2Agd2l0aCB0aGUgYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZSBmYWN0b3J5IGZ1bmN0aW9uXG4gICAgICAgICAqL1xuICAgICAgICBjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBmb3IodmFyIG0gaW4gTGlzdGVuZXJNZXRob2RzKXtcbiAgICAgICAgICAgICAgICBpZiAodGhpc1ttXSAhPT0gTGlzdGVuZXJNZXRob2RzW21dKXtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXNbbV0pe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgXCJDYW4ndCBoYXZlIG90aGVyIHByb3BlcnR5ICdcIittK1wiJyB3aGVuIHVzaW5nIFJlZmx1eC5saXN0ZW5UbyFcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzW21dID0gTGlzdGVuZXJNZXRob2RzW21dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMubGlzdGVuVG8obGlzdGVuYWJsZSxjYWxsYmFjayxpbml0aWFsKTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENsZWFucyB1cCBhbGwgbGlzdGVuZXIgcHJldmlvdXNseSByZWdpc3RlcmVkLlxuICAgICAgICAgKi9cbiAgICAgICAgY29tcG9uZW50V2lsbFVubW91bnQ6IExpc3RlbmVyTWV0aG9kcy5zdG9wTGlzdGVuaW5nVG9BbGxcbiAgICB9O1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlZmx1eC9zcmMvbGlzdGVuVG8uanNcbiAqKiBtb2R1bGUgaWQgPSAyOVxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval('var ListenerMethods = __webpack_require__(3);\n\n/**\n * A mixin factory for a React component. Meant as a more convenient way of using the `listenerMixin`,\n * without having to manually set listeners in the `componentDidMount` method. This version is used\n * to automatically set up a `listenToMany` call.\n *\n * @param {Object} listenables An object of listenables\n * @returns {Object} An object to be used as a mixin, which sets up the listeners for the given listenables.\n */\nmodule.exports = function(listenables){\n    return {\n        /**\n         * Set up the mixin before the initial rendering occurs. Import methods from `ListenerMethods`\n         * and then make the call to `listenTo` with the arguments provided to the factory function\n         */\n        componentDidMount: function() {\n            for(var m in ListenerMethods){\n                if (this[m] !== ListenerMethods[m]){\n                    if (this[m]){\n                        throw "Can\'t have other property \'"+m+"\' when using Reflux.listenToMany!";\n                    }\n                    this[m] = ListenerMethods[m];\n                }\n            }\n            this.listenToMany(listenables);\n        },\n        /**\n         * Cleans up all listener previously registered.\n         */\n        componentWillUnmount: ListenerMethods.stopListeningToAll\n    };\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZmx1eC9zcmMvbGlzdGVuVG9NYW55LmpzP2JmOGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTGlzdGVuZXJNZXRob2RzID0gcmVxdWlyZSgncmVmbHV4LWNvcmUvbGliL0xpc3RlbmVyTWV0aG9kcycpO1xuXG4vKipcbiAqIEEgbWl4aW4gZmFjdG9yeSBmb3IgYSBSZWFjdCBjb21wb25lbnQuIE1lYW50IGFzIGEgbW9yZSBjb252ZW5pZW50IHdheSBvZiB1c2luZyB0aGUgYGxpc3RlbmVyTWl4aW5gLFxuICogd2l0aG91dCBoYXZpbmcgdG8gbWFudWFsbHkgc2V0IGxpc3RlbmVycyBpbiB0aGUgYGNvbXBvbmVudERpZE1vdW50YCBtZXRob2QuIFRoaXMgdmVyc2lvbiBpcyB1c2VkXG4gKiB0byBhdXRvbWF0aWNhbGx5IHNldCB1cCBhIGBsaXN0ZW5Ub01hbnlgIGNhbGwuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGxpc3RlbmFibGVzIEFuIG9iamVjdCBvZiBsaXN0ZW5hYmxlc1xuICogQHJldHVybnMge09iamVjdH0gQW4gb2JqZWN0IHRvIGJlIHVzZWQgYXMgYSBtaXhpbiwgd2hpY2ggc2V0cyB1cCB0aGUgbGlzdGVuZXJzIGZvciB0aGUgZ2l2ZW4gbGlzdGVuYWJsZXMuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdGVuYWJsZXMpe1xuICAgIHJldHVybiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgdXAgdGhlIG1peGluIGJlZm9yZSB0aGUgaW5pdGlhbCByZW5kZXJpbmcgb2NjdXJzLiBJbXBvcnQgbWV0aG9kcyBmcm9tIGBMaXN0ZW5lck1ldGhvZHNgXG4gICAgICAgICAqIGFuZCB0aGVuIG1ha2UgdGhlIGNhbGwgdG8gYGxpc3RlblRvYCB3aXRoIHRoZSBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlIGZhY3RvcnkgZnVuY3Rpb25cbiAgICAgICAgICovXG4gICAgICAgIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGZvcih2YXIgbSBpbiBMaXN0ZW5lck1ldGhvZHMpe1xuICAgICAgICAgICAgICAgIGlmICh0aGlzW21dICE9PSBMaXN0ZW5lck1ldGhvZHNbbV0pe1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpc1ttXSl7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBcIkNhbid0IGhhdmUgb3RoZXIgcHJvcGVydHkgJ1wiK20rXCInIHdoZW4gdXNpbmcgUmVmbHV4Lmxpc3RlblRvTWFueSFcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzW21dID0gTGlzdGVuZXJNZXRob2RzW21dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMubGlzdGVuVG9NYW55KGxpc3RlbmFibGVzKTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENsZWFucyB1cCBhbGwgbGlzdGVuZXIgcHJldmlvdXNseSByZWdpc3RlcmVkLlxuICAgICAgICAgKi9cbiAgICAgICAgY29tcG9uZW50V2lsbFVubW91bnQ6IExpc3RlbmVyTWV0aG9kcy5zdG9wTGlzdGVuaW5nVG9BbGxcbiAgICB9O1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlZmx1eC9zcmMvbGlzdGVuVG9NYW55LmpzXG4gKiogbW9kdWxlIGlkID0gMzBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval("module.exports = function(module) {\r\n	if(!module.webpackPolyfill) {\r\n		module.deprecate = function() {};\r\n		module.paths = [];\r\n		// module.parent = undefined by default\r\n		module.children = [];\r\n		module.webpackPolyfill = 1;\r\n	}\r\n	return module;\r\n}\r\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2U1YWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcclxuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdH1cclxuXHRyZXR1cm4gbW9kdWxlO1xyXG59XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4gKiogbW9kdWxlIGlkID0gMzFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval("// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL34vbm9kZS1saWJzLWJyb3dzZXIvfi9wcm9jZXNzL2Jyb3dzZXIuanM/NWNiYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVIiwiZmlsZSI6IjMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG5cbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHNldFRpbWVvdXQoZHJhaW5RdWV1ZSwgMCk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqICh3ZWJwYWNrKS9+L25vZGUtbGlicy1icm93c2VyL34vcHJvY2Vzcy9icm93c2VyLmpzXG4gKiogbW9kdWxlIGlkID0gMzJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval('"use strict";\n\nmodule.exports = function (value, errorText) {\n	var sprintfValues = Array.prototype.slice.call(arguments, 2);\n	if (!value) {\n		var text = errorText.replace(/%s/g, function (_) {\n			return sprintfValues.shift();\n		});\n		throw new Error(text);\n	}\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvaGVscGVycy9hc3NlcnQuanM/NmZhNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUUsU0FBUyxFQUFFO0FBQzNDLEtBQUksYUFBYSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBQzVELEtBQUksQ0FBRSxLQUFLLEVBQUU7QUFDWixNQUFJLElBQUksR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxXQUFDO1VBQUksYUFBYSxDQUFDLEtBQUssRUFBRTtHQUFBLENBQUM7QUFDL0QsUUFBTSxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDckI7Q0FDRCIsImZpbGUiOiIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih2YWx1ZSwgZXJyb3JUZXh0KSB7XG5cdGxldCBzcHJpbnRmVmFsdWVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKVxuXHRpZiAoISB2YWx1ZSkge1xuXHRcdGxldCB0ZXh0ID0gZXJyb3JUZXh0LnJlcGxhY2UoLyVzL2csIF8gPT4gc3ByaW50ZlZhbHVlcy5zaGlmdCgpKVxuXHRcdHRocm93IG5ldyBFcnJvcih0ZXh0KVxuXHR9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBFOi9taW5zcmMvcGl6emEtcGlja2VyL34vZW52aWZ5LWxvYWRlciFFOi9taW5zcmMvcGl6emEtcGlja2VyL2FwcC9qcy9oZWxwZXJzL2Fzc2VydC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval('\n// returns all own properties of an object\n"use strict";\n\nmodule.exports = function (o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvaGVscGVycy9vdmFscy5qcz85YjIyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNLENBQUMsT0FBTyxHQUFHLFdBQUM7U0FBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFDO1dBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztHQUFBLENBQUM7Q0FBQSIsImZpbGUiOiIzNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gcmV0dXJucyBhbGwgb3duIHByb3BlcnRpZXMgb2YgYW4gb2JqZWN0XG5tb2R1bGUuZXhwb3J0cyA9IG8gPT4gT2JqZWN0LmtleXMobykubWFwKGsgPT4gb1trXSlcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIEU6L21pbnNyYy9waXp6YS1waWNrZXIvfi9lbnZpZnktbG9hZGVyIUU6L21pbnNyYy9waXp6YS1waWNrZXIvYXBwL2pzL2hlbHBlcnMvb3ZhbHMuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar m = __webpack_require__(20);\nvar get = __webpack_require__(8);\nvar morpheus = __webpack_require__(21);\n\nfunction make(api, store, opts) {\n	var el = opts.container;\n	var view = {};\n	store.listen(function (_) {\n		return m.render(el, view.content());\n	});\n	view.content = function () {\n		return m("div", [m("ul.ingredients", store.ingredients().map(function (ing, i) {\n			return m("li", { "class": "status-" + ing.status() }, [m("span", ing.name), m("a", { "class": "yummy", onclick: function (e) {\n					return api.toggleYummy(ing);\n				} }, m.trust("^")), m("a", { "class": "yuck", onclick: function (e) {\n					return api.toggleYuck(ing);\n				} }, "x")]);\n		})), m("ul.pizzas", store.pizzas().map(function (p, i) {\n			return m("li", { key: p.name, config: fadeInOut(p) }, [m("span", [p.name]), m("span", " - "), m("span", [p.ingredients.map(get("name")).join(", ")])]);\n		}))]);\n	};\n	return view;\n}\n\nmodule.exports = { make: make };\n\nfunction fadeInOut(pizza) {\n	return function (el, isInitialized, context, vEl) {\n		console.log("fadeInOut", arguments);\n		console.log("pizza visible", pizza.visible());\n		if (!pizza.wasVisible() && pizza.visible()) {\n			// m.redraw.strategy(\'none\')\n			el.style.height = 0;\n			el.style.opacity = 0;\n			// m.startComputation()\n			morpheus([el], {\n				height: 30,\n				duration: 150,\n				complete: function complete() {\n					morpheus([el], {\n						opacity: 1,\n						duration: 300,\n						complete: function complete() {\n							console.log("complete", arguments);\n						}\n					});\n				}\n			});\n		} else if (pizza.wasVisible() && !pizza.visible()) {\n			morpheus([el], {\n				opacity: 0,\n				duration: 150,\n				complete: function complete() {\n					morpheus([el], {\n						height: 0,\n						duration: 150,\n						complete: function complete() {\n							console.log("complete", arguments);\n						}\n					});\n				}\n			});\n		}\n	};\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRTovbWluc3JjL3BpenphLXBpY2tlci9hcHAvanMvdmlldy5qcz84MGNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxDQUFDLEdBQUcsbUJBQU8sQ0FBQyxFQUFTLENBQUM7QUFDMUIsSUFBSSxHQUFHLEdBQUcsbUJBQU8sQ0FBQyxDQUFhLENBQUM7QUFDaEMsSUFBSSxRQUFRLEdBQUcsbUJBQU8sQ0FBQyxFQUFVLENBQUM7O0FBR2xDLFNBQVMsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO0FBQy9CLEtBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTO0FBQ3ZCLEtBQUksSUFBSSxHQUFHLEVBQUU7QUFDYixNQUFLLENBQUMsTUFBTSxDQUFDLFdBQUM7U0FBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7RUFBQSxDQUFDO0FBQy9DLEtBQUksQ0FBQyxPQUFPLEdBQUcsWUFBVztBQUN6QixTQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FDZixDQUFDLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEdBQUcsRUFBQyxDQUFDO1VBQ2pELENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBQyxPQUFPLEVBQUUsU0FBUyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsRUFBQyxFQUFFLENBQzVDLENBQUMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUNuQixDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsV0FBQztZQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDO0tBQUEsRUFBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFDNUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLFdBQUM7WUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQztLQUFBLEVBQUMsRUFBRSxHQUFHLENBQUMsQ0FDakUsQ0FBQztHQUFBLENBQ0YsQ0FBQyxFQUNGLENBQUMsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFDLENBQUMsRUFBQyxDQUFDO1VBQ3JDLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBQyxHQUFHLEVBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLEVBQUUsQ0FDM0MsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUNuQixDQUFDLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxFQUNoQixDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDdEQsQ0FBQztHQUFBLENBQ0YsQ0FBQyxDQUNGLENBQUM7RUFDRjtBQUNELFFBQU8sSUFBSTtDQUNYOztBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUcsRUFBQyxJQUFJLEVBQUosSUFBSSxFQUFDOztBQUV2QixTQUFTLFNBQVMsQ0FBQyxLQUFLLEVBQUU7QUFDekIsUUFBTyxVQUFTLEVBQUUsRUFBRSxhQUFhLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRTtBQUNoRCxTQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUM7QUFDbkMsU0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQzdDLE1BQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRSxFQUFFOztBQUUzQyxLQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDO0FBQ25CLEtBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLENBQUM7O0FBRXBCLFdBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ2QsVUFBTSxFQUFFLEVBQUU7QUFDVixZQUFRLEVBQUUsR0FBRztBQUNiLFlBQVEsRUFBRSxvQkFBVztBQUNwQixhQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUNkLGFBQU8sRUFBRSxDQUFDO0FBQ1YsY0FBUSxFQUFFLEdBQUc7QUFDYixjQUFRLEVBQUUsb0JBQVc7QUFDcEIsY0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDO09BQ2xDO01BQ0QsQ0FBQztLQUNGO0lBQ0QsQ0FBQztHQUNGLE1BQ0ksSUFBSSxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLEVBQUU7QUFDaEQsV0FBUSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDZCxXQUFPLEVBQUUsQ0FBQztBQUNWLFlBQVEsRUFBRSxHQUFHO0FBQ2IsWUFBUSxFQUFFLG9CQUFXO0FBQ3BCLGFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ2QsWUFBTSxFQUFFLENBQUM7QUFDVCxjQUFRLEVBQUUsR0FBRztBQUNiLGNBQVEsRUFBRSxvQkFBVztBQUNwQixjQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUM7T0FDbEM7TUFDRCxDQUFDO0tBQ0Y7SUFDRCxDQUFDO0dBQ0Y7RUFDRCIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBtID0gcmVxdWlyZSgnbWl0aHJpbCcpXG5sZXQgZ2V0ID0gcmVxdWlyZSgnaGVscGVycy9nZXQnKVxubGV0IG1vcnBoZXVzID0gcmVxdWlyZSgnbW9ycGhldXMnKVxuXG5cbmZ1bmN0aW9uIG1ha2UoYXBpLCBzdG9yZSwgb3B0cykge1xuXHRsZXQgZWwgPSBvcHRzLmNvbnRhaW5lclxuXHRsZXQgdmlldyA9IHt9XG5cdHN0b3JlLmxpc3RlbihfID0+IG0ucmVuZGVyKGVsLCB2aWV3LmNvbnRlbnQoKSkpXG5cdHZpZXcuY29udGVudCA9IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBtKCdkaXYnLCBbXG5cdFx0XHRtKCd1bC5pbmdyZWRpZW50cycsIHN0b3JlLmluZ3JlZGllbnRzKCkubWFwKChpbmcsaSkgPT5cblx0XHRcdFx0bSgnbGknLCB7J2NsYXNzJzogJ3N0YXR1cy0nICsgaW5nLnN0YXR1cygpfSwgW1xuXHRcdFx0XHRcdG0oJ3NwYW4nLCBpbmcubmFtZSksXG5cdFx0XHRcdFx0bSgnYScsIHsnY2xhc3MnOiAneXVtbXknLCBvbmNsaWNrOiBlID0+IGFwaS50b2dnbGVZdW1teShpbmcpfSwgbS50cnVzdCgnXicpKSxcblx0XHRcdFx0XHRtKCdhJywgeydjbGFzcyc6ICd5dWNrJywgb25jbGljazogZSA9PiBhcGkudG9nZ2xlWXVjayhpbmcpfSwgJ3gnKVxuXHRcdFx0XHRdKVxuXHRcdFx0KSksXG5cdFx0XHRtKCd1bC5waXp6YXMnLCBzdG9yZS5waXp6YXMoKS5tYXAoKHAsaSkgPT5cblx0XHRcdFx0bSgnbGknLCB7a2V5OnAubmFtZSwgY29uZmlnOiBmYWRlSW5PdXQocCl9LCBbXG5cdFx0XHRcdFx0bSgnc3BhbicsIFtwLm5hbWVdKSxcblx0XHRcdFx0XHRtKCdzcGFuJywgJyAtICcpLFxuXHRcdFx0XHRcdG0oJ3NwYW4nLCBbcC5pbmdyZWRpZW50cy5tYXAoZ2V0KCduYW1lJykpLmpvaW4oJywgJyldKVxuXHRcdFx0XHRdKVxuXHRcdFx0KSksXG5cdFx0XSlcblx0fVxuXHRyZXR1cm4gdmlld1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHttYWtlfVxuXG5mdW5jdGlvbiBmYWRlSW5PdXQocGl6emEpIHtcblx0cmV0dXJuIGZ1bmN0aW9uKGVsLCBpc0luaXRpYWxpemVkLCBjb250ZXh0LCB2RWwpIHtcblx0XHRjb25zb2xlLmxvZygnZmFkZUluT3V0JywgYXJndW1lbnRzKVxuXHRcdGNvbnNvbGUubG9nKCdwaXp6YSB2aXNpYmxlJywgcGl6emEudmlzaWJsZSgpKVxuXHRcdGlmICghcGl6emEud2FzVmlzaWJsZSgpICYmIHBpenphLnZpc2libGUoKSkge1xuXHRcdFx0Ly8gbS5yZWRyYXcuc3RyYXRlZ3koJ25vbmUnKVxuXHRcdFx0ZWwuc3R5bGUuaGVpZ2h0ID0gMFxuXHRcdFx0ZWwuc3R5bGUub3BhY2l0eSA9IDBcblx0XHRcdC8vIG0uc3RhcnRDb21wdXRhdGlvbigpXG5cdFx0XHRtb3JwaGV1cyhbZWxdLCB7XG5cdFx0XHRcdGhlaWdodDogMzAsXG5cdFx0XHRcdGR1cmF0aW9uOiAxNTAsXG5cdFx0XHRcdGNvbXBsZXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRtb3JwaGV1cyhbZWxdLCB7XG5cdFx0XHRcdFx0XHRvcGFjaXR5OiAxLFxuXHRcdFx0XHRcdFx0ZHVyYXRpb246IDMwMCxcblx0XHRcdFx0XHRcdGNvbXBsZXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ2NvbXBsZXRlJywgYXJndW1lbnRzKVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cdFx0fVxuXHRcdGVsc2UgaWYgKHBpenphLndhc1Zpc2libGUoKSAmJiAhcGl6emEudmlzaWJsZSgpKSB7XG5cdFx0XHRtb3JwaGV1cyhbZWxdLCB7XG5cdFx0XHRcdG9wYWNpdHk6IDAsXG5cdFx0XHRcdGR1cmF0aW9uOiAxNTAsXG5cdFx0XHRcdGNvbXBsZXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRtb3JwaGV1cyhbZWxdLCB7XG5cdFx0XHRcdFx0XHRoZWlnaHQ6IDAsXG5cdFx0XHRcdFx0XHRkdXJhdGlvbjogMTUwLFxuXHRcdFx0XHRcdFx0Y29tcGxldGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZygnY29tcGxldGUnLCBhcmd1bWVudHMpXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0fVxuXHRcdFx0fSlcblx0XHR9XG5cdH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIEU6L21pbnNyYy9waXp6YS1waWNrZXIvfi9lbnZpZnktbG9hZGVyIUU6L21pbnNyYy9waXp6YS1waWNrZXIvYXBwL2pzL3ZpZXcuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9');
},function(module,exports,__webpack_require__){eval('"use strict";\n\nvar status = __webpack_require__(15).status;\n\nvar Reflux = __webpack_require__(13);\nvar sortby = __webpack_require__(17);\nvar m = __webpack_require__(20);\nvar omap = __webpack_require__(16);\nvar assert = __webpack_require__(33);\nvar ovals = __webpack_require__(34);\nvar extend = __webpack_require__(19);\nvar get = __webpack_require__(8);\n\nvar model = {};\n\nmodel.make = function (api, opts) {\n	var ingredients = omap(opts.ingredients, ingredient);\n	var pizzas = opts.pizzas.map(function (def) {\n		var ingrs = findAllIngredients(ingredients, def.ingredients);\n		var def2 = extend({}, def);\n		def2.ingredients = findAllIngredients(ingredients, def.ingredients);\n		return pizza(def2);\n	});\n	var filters = [];\n	var ingredientsList = ovals(ingredients).sort();\n	return Reflux.createStore({\n		init: function init() {\n			this.listenToMany(api);\n		},\n		ingredients: function () {\n			return ingredientsList;\n		},\n		pizzas: (function (_pizzas) {\n			var _pizzasWrapper = function pizzas() {\n				return _pizzas.apply(this, arguments);\n			};\n\n			_pizzasWrapper.toString = function () {\n				return _pizzas.toString();\n			};\n\n			return _pizzasWrapper;\n		})(function () {\n			return pizzas\n			// .filter(p => p.visible())\n			.sort(sortby().desc(function (p) {\n				return p.score();\n			}).asc("name"));\n		}),\n		onToggleYummy: function onToggleYummy(ing) {\n			ing.toggleYummy();\n			this.computePizzas();\n			this.trigger();\n		},\n		onToggleYuck: function onToggleYuck(ing) {\n			ing.toggleYuck();\n			this.computePizzas();\n			this.trigger();\n		},\n		computePizzas: function computePizzas() {\n			pizzas.forEach(function (p) {\n				return p.compute();\n			});\n		}\n	});\n};\n\nmodule.exports = model;\n\n// pizza model, receives all pizza properties from the user spec, but\n// .ingredients are models\nvar pizza = (function (_pizza) {\n	var _pizzaWrapper = function pizza(_x) {\n		return _pizza.apply(this, arguments);\n	};\n\n	_pizzaWrapper.toString = function () {\n		return _pizza.toString();\n	};\n\n	return _pizzaWrapper;\n})(function (pizza) {\n	pizza.wasVisible = m.prop(false);\n	pizza.visible = m.prop(true);\n	pizza.checkVisible = function () {\n		pizza.wasVisible(pizza.visible());\n		// a pizza is visible if neither of its ingredients have a YUCK status\n		console.log("pizzas.ingredients", pizza.ingredients.map(function (it) {\n			return it.status();\n		}));\n		return pizza.visible(!pizza.ingredients.some(function (i) {\n			return i.status() === status.YUCK;\n		}));\n	};\n	pizza.calcScore = function () {\n		// Yummy ingredients score 1, others score 0\n		return pizza.score(pizza.ingredients.map(function (ing) {\n			return Number(ing.status() === status.YUMMY);\n		}).reduce(function (sum, score) {\n			return sum + score;\n		}));\n	};\n	pizza.score = m.prop();\n	pizza.calcScore();\n	pizza.compute = function () {\n		pizza.checkVisible();\n		pizza.calcScore();\n	};\n	return pizza;\n});\n\nvar ingredient = function ingredient(name) {\n	var ing = {\n		name: name\n	};\n	ing.status = m.prop(status.PASS);\n	ing.toggleYummy = function () {\n		ing.status(ing.status() === status.YUMMY ? status.PASS : status.YUMMY);\n	};\n	ing.toggleYuck = function () {\n		ing.status(ing.status() === status.YUCK ? status.PASS : status.YUCK);\n	};\n	return ing;\n};\n\nfunction findAllIngredients(ingrs, keys) {\n	var found = [];\n	keys.forEach(function (k) {\n		assert(ingrs[k] !== void 0, "Ingredient \'%s\' not found", k);\n		found.push(ingrs[k]);\n	});\n	return found;\n}\n//# sourceMappingURL=data:application/json;base64,')}]);